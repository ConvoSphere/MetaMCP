name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'docs/**'
      - 'metamcp/**/*.py'
      - 'mkdocs.yml'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'scripts/generate_api_docs.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'metamcp/**/*.py'
      - 'mkdocs.yml'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'scripts/generate_api_docs.py'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  # Check if documentation should be built
  check-changes:
    name: Check for Documentation Changes
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.filter.outputs.changes }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better change detection

    - name: Check for relevant changes
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: |
          docs:
            - 'docs/**'
            - 'mkdocs.yml'
          code:
            - 'metamcp/**/*.py'
            - 'pyproject.toml'
            - 'requirements*.txt'
            - 'scripts/generate_api_docs.py'
        token: ${{ github.token }}

  # Build documentation
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-build == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: '1.0.0'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/uv
        key: docs-${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
        restore-keys: |
          docs-${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install mkdocs mkdocs-material mkdocs-autorefs mkdocs-section-index
        uv pip install -r requirements.txt

    - name: Generate API documentation
      run: |
        source .venv/bin/activate
        # Generate API docs from docstrings
        python scripts/generate_api_docs.py

    - name: Build documentation
      run: |
        source .venv/bin/activate
        mkdocs build --clean --strict

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation-${{ github.sha }}
        path: site/
        retention-days: 7

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: site/

  # Deploy to GitHub Pages
  deploy-docs:
    name: Deploy Documentation
    needs: build-docs
    if: github.ref == 'refs/heads/main' && needs.build-docs.result == 'success'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3

  # Link checker
  link-check:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    needs: build-docs
    if: needs.build-docs.result == 'success'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download documentation artifacts
      uses: actions/download-artifact@v4
      with:
        name: documentation-${{ github.sha }}
        path: site/

    - name: Check links
      uses: lycheeverse/lychee-action@v1
      with:
        args: site/ --verbose --no-progress --exclude-all-private
        fail: true