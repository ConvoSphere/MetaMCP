{
  "timestamp": "2025-07-25T22:48:35.783955",
  "total_execution_time": 60.37320351600647,
  "test_suites": {
    "total": 9,
    "successful": 0,
    "failed": 9,
    "success_rate": 0.0
  },
  "detailed_results": {
    "unit_tests": {
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /home/johannes/PycharmProjects/MetaMCP\nconfigfile: pyproject.toml\nplugins: mock-3.14.1, anyio-4.9.0, asyncio-1.0.0, xdist-3.8.0, cov-6.2.1, benchmark-5.1.0, httpx-0.35.0, Faker-37.4.2\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 246 items\n\ntests/unit/performance/test_cli_performance.py .......F.F                [  4%]\ntests/unit/performance/test_performance.py EEEEEEEEEEEEEEE               [ 10%]\ntests/unit/security/test_security.py EEEEEEEEEEEEEEEEEEEEE               [ 18%]\ntests/unit/telemetry/test_telemetry.py .....F...F..FF..                  [ 25%]\ntests/unit/test_cli.py ....EE...........F.....                           [ 34%]\ntests/unit/test_cli_utils.py ................................F.......    [ 50%]\ntests/unit/test_database.py .F..FFFFF.                                   [ 54%]\ntests/unit/test_example_unit.py .                                        [ 55%]\ntests/unit/test_health.py .....FFF..F......F.                            [ 63%]\ntests/unit/test_persistence.py .............                             [ 68%]\ntests/unit/test_services.py ............................................ [ 86%]\n...                                                                      [ 87%]\ntests/unit/test_utils.py .......................F.F.....                 [100%]\n\n==================================== ERRORS ====================================\n_ ERROR at setup of TestPerformanceBenchmarks.test_authentication_performance __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestPerformanceBenchmarks.test_tool_registration_performance _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestPerformanceBenchmarks.test_tool_search_performance ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestPerformanceBenchmarks.test_cache_performance ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestPerformanceBenchmarks.test_circuit_breaker_performance _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceBenchmarks.test_rate_limiter_performance ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_user_registration ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_tool_registration ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_search_operations ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestStressTesting.test_memory_usage_under_load _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n________ ERROR at setup of TestStressTesting.test_cpu_usage_under_load _________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceRegression.test_authentication_benchmark ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceRegression.test_tool_operations_benchmark __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestResourceMonitoring.test_memory_leak_detection ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_________ ERROR at setup of TestResourceMonitoring.test_cpu_efficiency _________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestAuthenticationSecurity.test_password_hashing_security __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestAuthenticationSecurity.test_token_security _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestAuthenticationSecurity.test_brute_force_protection ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestAuthenticationSecurity.test_account_lockout _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestAuthorizationSecurity.test_permission_based_access ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____ ERROR at setup of TestAuthorizationSecurity.test_inactive_user_access _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestAuthorizationSecurity.test_resource_ownership ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestInputValidationSecurity.test_sql_injection_protection __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestInputValidationSecurity.test_xss_protection _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestInputValidationSecurity.test_path_traversal_protection _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____ ERROR at setup of TestInputValidationSecurity.test_input_sanitization _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestInputValidationSecurity.test_parameter_validation ____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestRateLimitingSecurity.test_rate_limiting_protection ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestRateLimitingSecurity.test_ddos_protection ________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__________ ERROR at setup of TestTokenSecurity.test_token_revocation ___________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_________ ERROR at setup of TestTokenSecurity.test_token_blacklisting __________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__________ ERROR at setup of TestTokenSecurity.test_token_expiration ___________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestDataSecurity.test_sensitive_data_encryption _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_data_isolation ____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_cache_security ____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_audit_logging _____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___________ ERROR at setup of TestEnvironmentCommands.test_env_show ____________\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 103\n      def test_env_show(self, temp_env_files):\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 83\n      @pytest.fixture\n      def temp_env_files(self, temp_project):\nE       fixture 'temp_project' not found\n>       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, admin_token, anyio_backend, anyio_backend_name, anyio_backend_options, app, async_client, auth_service, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, circuit_breaker, class_mocker, cleanup_test_data, client, cov, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, httpx_mock, load_test_config, mock_httpx_client, mock_llm_service, mock_vector_client, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_metrics, pytestconfig, rate_limiter, record_property, record_testsuite_property, record_xml_attribute, recwarn, registered_tool, sample_search_query, sample_tool_data, sample_user_data, search_service, security_test_data, session_mocker, temp_env_files, test_config, test_data_factory, test_engine, test_environment, test_session, test_settings, test_user_token, test_utils, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, tool_service, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py:83\n___________ ERROR at setup of TestEnvironmentCommands.test_env_diff ____________\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 125\n      def test_env_diff(self, temp_env_files):\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 83\n      @pytest.fixture\n      def temp_env_files(self, temp_project):\nE       fixture 'temp_project' not found\n>       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, admin_token, anyio_backend, anyio_backend_name, anyio_backend_options, app, async_client, auth_service, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, circuit_breaker, class_mocker, cleanup_test_data, client, cov, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, httpx_mock, load_test_config, mock_httpx_client, mock_llm_service, mock_vector_client, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_metrics, pytestconfig, rate_limiter, record_property, record_testsuite_property, record_xml_attribute, recwarn, registered_tool, sample_search_query, sample_tool_data, sample_user_data, search_service, security_test_data, session_mocker, temp_env_files, test_config, test_data_factory, test_engine, test_environment, test_session, test_settings, test_user_token, test_utils, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, tool_service, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py:83\n=================================== FAILURES ===================================\n_____________ TestCLIPerformance.test_file_operations_performance ______________\ntests/unit/performance/test_cli_performance.py:357: in test_file_operations_performance\n    with open(cli.project_root / \".env\") as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   FileNotFoundError: [Errno 2] No such file or directory: '/home/johannes/PycharmProjects/MetaMCP/.env'\n________________ TestCLIResourceUsage.test_disk_io_performance _________________\ntests/unit/performance/test_cli_performance.py:447: in test_disk_io_performance\n    with open(cli.project_root / \".env\") as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   FileNotFoundError: [Errno 2] No such file or directory: '/home/johannes/PycharmProjects/MetaMCP/.env'\n__________________ TestTelemetryManager.test_trace_operation ___________________\n/usr/lib/python3.13/unittest/mock.py:990: in assert_called_once_with\n    raise AssertionError(msg)\nE   AssertionError: Expected 'start_as_current_span' to be called once. Called 0 times.\n\nDuring handling of the above exception, another exception occurred:\ntests/unit/telemetry/test_telemetry.py:144: in test_trace_operation\n    telemetry_manager.tracer.start_as_current_span.assert_called_once_with(\nE   AssertionError: Expected 'start_as_current_span' to be called once. Called 0 times.\n----------------------------- Captured stdout call -----------------------------\n2025-07-25 22:47:38 [info     ] Initializing OpenTelemetry Telemetry...\n2025-07-25 22:47:38 [info     ] OpenTelemetry tracing initialized\n2025-07-25 22:47:38 [info     ] OpenTelemetry metrics initialized\n2025-07-25 22:47:38 [info     ] Metric instruments created\n2025-07-25 22:47:38 [info     ] OpenTelemetry Telemetry initialized successfully\n2025-07-25 22:47:38 [error    ] Failed to trace operation test_operation: 'Mock' object does not support the context manager protocol\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n______________________ TestTelemetryManager.test_shutdown ______________________\ntests/unit/telemetry/test_telemetry.py:209: in test_shutdown\n    assert not telemetry_manager.is_initialized\nE   assert not True\nE    +  where True = <metamcp.monitoring.telemetry.TelemetryManager object at 0x78915fa9c550>.is_initialized\n----------------------------- Captured stdout call -----------------------------\n2025-07-25 22:47:38 [info     ] Initializing OpenTelemetry Telemetry...\n2025-07-25 22:47:38 [info     ] OpenTelemetry tracing initialized\n2025-07-25 22:47:38 [info     ] OpenTelemetry metrics initialized\n2025-07-25 22:47:38 [info     ] Metric instruments created\n2025-07-25 22:47:38 [info     ] OpenTelemetry Telemetry initialized successfully\n2025-07-25 22:47:38 [info     ] Telemetry shutdown completed\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n_____________ TestTelemetryIntegration.test_telemetry_with_server ______________\nmetamcp/vector/client.py:83: in initialize\n    self.client = weaviate.connect_to_custom(\n.venv/lib/python3.13/site-packages/weaviate/connect/helpers.py:349: in connect_to_custom\n    ConnectionParams.from_params(\n.venv/lib/python3.13/site-packages/weaviate/connect/base.py:82: in from_params\n    return cls(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionParams\nE     Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\nThe above exception was the direct cause of the following exception:\ntests/unit/telemetry/test_telemetry.py:259: in test_telemetry_with_server\n    await server.initialize()\nmetamcp/server.py:107: in initialize\n    await self.mcp_server.initialize()\nmetamcp/mcp/server.py:55: in initialize\n    await self._initialize_components()\nmetamcp/mcp/server.py:84: in _initialize_components\n    await self.vector_client.initialize()\nmetamcp/vector/client.py:103: in initialize\n    raise VectorSearchError(\nE   metamcp.exceptions.VectorSearchError: Failed to initialize vector search client: 1 validation error for ConnectionParams\nE     Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/value_error\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Initializing MetaMCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.746262Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.746359Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.754378Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762057Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762107Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762120Z\"}\n{\"event\": \"Telemetry initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762132Z\"}\n{\"event\": \"Initializing MCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762180Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.762205Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.769941Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.777474Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.777531Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.777544Z\"}\n{\"event\": \"Initializing Vector Search Client...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.777585Z\"}\n{\"event\": \"Failed to initialize Vector Search Client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.777750Z\"}\n{\"event\": \"Failed to initialize components: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.777789Z\"}\n{\"event\": \"Failed to initialize MCP Server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.777803Z\"}\n{\"event\": \"Failed to initialize server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.777814Z\"}\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n___________ TestTelemetryIntegration.test_telemetry_with_mcp_server ____________\nmetamcp/vector/client.py:83: in initialize\n    self.client = weaviate.connect_to_custom(\n.venv/lib/python3.13/site-packages/weaviate/connect/helpers.py:349: in connect_to_custom\n    ConnectionParams.from_params(\n.venv/lib/python3.13/site-packages/weaviate/connect/base.py:82: in from_params\n    return cls(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionParams\nE     Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\nThe above exception was the direct cause of the following exception:\ntests/unit/telemetry/test_telemetry.py:281: in test_telemetry_with_mcp_server\n    await mcp_server.initialize()\nmetamcp/mcp/server.py:55: in initialize\n    await self._initialize_components()\nmetamcp/mcp/server.py:84: in _initialize_components\n    await self.vector_client.initialize()\nmetamcp/vector/client.py:103: in initialize\n    raise VectorSearchError(\nE   metamcp.exceptions.VectorSearchError: Failed to initialize vector search client: 1 validation error for ConnectionParams\nE     Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/value_error\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Initializing MCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.801126Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.801184Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.809298Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.816925Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.816979Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.816993Z\"}\n{\"event\": \"Initializing Vector Search Client...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:38.817013Z\"}\n{\"event\": \"Failed to initialize Vector Search Client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.817117Z\"}\n{\"event\": \"Failed to initialize components: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.817151Z\"}\n{\"event\": \"Failed to initialize MCP Server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:47:38.817164Z\"}\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n_________________ TestUpdateResetCommands.test_update_command __________________\ntests/unit/test_cli.py:379: in test_update_command\n    assert result == 0\nE   assert 1 == 0\n_____________________ TestDocsUtils.test_generate_api_docs _____________________\n/usr/lib/python3.13/unittest/mock.py:948: in assert_called\n    raise AssertionError(msg)\nE   AssertionError: Expected 'run_command' to have been called.\n\nDuring handling of the above exception, another exception occurred:\ntests/unit/test_cli_utils.py:345: in test_generate_api_docs\n    mock_run.assert_called()\nE   AssertionError: Expected 'run_command' to have been called.\n----------------------------- Captured stdout call -----------------------------\n\ud83d\udd27 Generating API documentation...\n   Generating docs for metamcp.api...\n   Generating docs for metamcp.composition...\n   Generating docs for metamcp.proxy...\n   Generating docs for metamcp.security...\n   Generating docs for metamcp.monitoring...\n\u2705 API documentation generated\n_________________ TestDatabaseManager.test_initialize_with_url _________________\ntests/unit/test_database.py:41: in test_initialize_with_url\n    await db_manager.initialize()\nmetamcp/utils/database.py:45: in initialize\n    self._pool = await asyncpg.create_pool(database_url, **self._pool_config)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: object AsyncMock can't be used in 'await' expression\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: object AsyncMock can't be used in 'await' expression\n________________ TestDatabaseManager.test_health_check_success _________________\ntests/unit/test_database.py:81: in test_health_check_success\n    assert result[\"status\"] == \"healthy\"\nE   AssertionError: assert 'unhealthy' == 'healthy'\nE     \nE     - healthy\nE     + unhealthy\nE     ? ++\n___________________ TestDatabaseManager.test_get_pool_stats ____________________\ntests/unit/test_database.py:97: in test_get_pool_stats\n    stats = await db_manager.get_pool_stats()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:115: in get_pool_stats\n    \"busy_connections\": self._pool.get_size() - self._pool.get_idle_size(),\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: unsupported operand type(s) for -: 'coroutine' and 'coroutine'\n____________________ TestDatabaseManager.test_execute_query ____________________\ntests/unit/test_database.py:117: in test_execute_query\n    await db_manager.execute(\"INSERT INTO test VALUES ($1)\", \"value\")\nmetamcp/utils/database.py:87: in execute\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:78: in acquire\n    async with self._pool.acquire() as connection:\n               ^^^^^^^^^^^^^^^^^^^^\nE   TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n_____________________ TestDatabaseManager.test_fetch_query _____________________\ntests/unit/test_database.py:136: in test_fetch_query\n    result = await db_manager.fetch(\"SELECT * FROM test\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:92: in fetch\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:78: in acquire\n    async with self._pool.acquire() as connection:\n               ^^^^^^^^^^^^^^^^^^^^\nE   TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n___________________ TestDatabaseManager.test_fetchval_query ____________________\ntests/unit/test_database.py:154: in test_fetchval_query\n    result = await db_manager.fetchval(\"SELECT COUNT(*) FROM test\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:102: in fetchval\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\nmetamcp/utils/database.py:78: in acquire\n    async with self._pool.acquire() as connection:\n               ^^^^^^^^^^^^^^^^^^^^\nE   TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n_________ TestComponentHealthChecks.test_check_database_health_success _________\ntests/unit/test_health.py:61: in test_check_database_health_success\n    assert health.status == \"healthy\"\nE   AssertionError: assert 'unhealthy' == 'healthy'\nE     \nE     - healthy\nE     + unhealthy\nE     ? ++\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n________ TestComponentHealthChecks.test_check_vector_db_health_success _________\ntests/unit/test_health.py:71: in test_check_vector_db_health_success\n    assert health.name == \"vector_database\"\nE   AssertionError: assert 'vector_db' == 'vector_database'\nE     \nE     - vector_database\nE     ?         --- ---\nE     + vector_db\n_______ TestComponentHealthChecks.test_check_llm_service_health_success ________\ntests/unit/test_health.py:83: in test_check_llm_service_health_success\n    assert health.status == \"healthy\"\nE   AssertionError: assert 'unhealthy' == 'healthy'\nE     \nE     - healthy\nE     + unhealthy\nE     ? ++\n___________________ TestHealthEndpoints.test_readiness_probe ___________________\ntests/unit/test_health.py:140: in test_readiness_probe\n    assert response.status_code == 200\nE   assert 503 == 200\nE    +  where 503 = <Response [503 Service Unavailable]>.status_code\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n__________ TestHealthComponentIntegration.test_all_components_healthy __________\ntests/unit/test_health.py:266: in test_all_components_healthy\n    assert component.status == \"healthy\"\nE   AssertionError: assert 'unhealthy' == 'healthy'\nE     \nE     - healthy\nE     + unhealthy\nE     ? ++\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n_________________________ TestCache.test_generate_key __________________________\ntests/unit/test_utils.py:400: in test_generate_key\n    assert key == key2\nE   AssertionError: assert '243262243132...5524d5a335858' == '243262243132...5786b63586e50'\nE     \nE     - 24326224313224506f65786b63586e50\nE     + 24326224313224584c45524d5a335858\n__________ TestCircuitBreakerDecorator.test_circuit_breaker_decorator __________\ntests/unit/test_utils.py:474: in test_circuit_breaker_decorator\n    with pytest.raises(Exception):\n         ^^^^^^^^^^^^^^^^^^^^^^^^\nE   Failed: DID NOT RAISE <class 'Exception'>\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Circuit breaker 'test_circuit' initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:47:48.374222Z\"}\n{\"event\": \"Circuit breaker 'test_circuit' failure: 1/5\", \"level\": \"warning\", \"timestamp\": \"2025-07-25T20:47:48.374340Z\"}\n{\"event\": \"Circuit breaker 'test_circuit' failure: 2/5\", \"level\": \"warning\", \"timestamp\": \"2025-07-25T20:47:48.374389Z\"}\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\nscripts/test_utils.py:14\n  /home/johannes/PycharmProjects/MetaMCP/scripts/test_utils.py:14: PytestCollectionWarning: cannot collect test class 'TestUtils' because it has a __init__ constructor (from: tests/unit/test_cli_utils.py)\n    class TestUtils:\n\ntests/unit/test_database.py::TestDatabaseManager::test_health_check_success\ntests/unit/test_database.py::TestDatabaseManager::test_execute_query\ntests/unit/test_database.py::TestDatabaseManager::test_fetch_query\ntests/unit/test_database.py::TestDatabaseManager::test_fetchval_query\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/database.py:78: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n    async with self._pool.acquire() as connection:\n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n\ntests/unit/test_database.py::TestDatabaseManager::test_get_pool_stats\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/database.py:115: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n    \"busy_connections\": self._pool.get_size() - self._pool.get_idle_size(),\n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_existing_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_load_workflow_found\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_load_all_workflows\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_workflow_error\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/main.py:463: UserWarning: Pydantic serializer warnings:\n    PydanticSerializationUnexpectedValue(Expected `enum` - serialized value may not be as expected [input_value='tool_call', input_type=str])\n    return self.__pydantic_serializer__.to_python(\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_existing_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_workflow_error\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:134: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"updated_at\": datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:171: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_delete_workflow_success\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_delete_workflow_not_found\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:239: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_get_workflow_executions\n  /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_persistence.py:155: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    {\"id\": \"exec1\", \"status\": \"completed\", \"created_at\": datetime.utcnow()},\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_get_workflow_executions\n  /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_persistence.py:156: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    {\"id\": \"exec2\", \"status\": \"running\", \"created_at\": datetime.utcnow()},\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n- generated xml file: /home/johannes/PycharmProjects/MetaMCP/test-results/unit-tests.xml -\n================================ tests coverage ================================\n_______________ coverage: platform linux, python 3.13.3-final-0 ________________\n\nName                                  Stmts   Miss  Cover   Missing\n-------------------------------------------------------------------\nmetamcp/__init__.py                      22      2    91%   100, 105\nmetamcp/admin/interface.py               94     28    70%   77-82, 109-142, 155-188, 200-202, 224, 261-270, 283, 293, 297, 301, 305, 309, 318, 323, 328, 333\nmetamcp/api/__init__.py                   2      0   100%\nmetamcp/api/admin.py                     46     28    39%   27-32, 38-43, 49-54, 60-65, 71, 77-81\nmetamcp/api/auth.py                     144    101    30%   99-111, 127-141, 155-162, 185-201, 211, 230-257, 274-283, 300-325, 342-375, 394-424\nmetamcp/api/composition.py              127     78    39%   34, 100-121, 142-149, 174-189, 210-225, 254-294, 319-343, 366-381, 408-417, 440-449\nmetamcp/api/health.py                   177     55    69%   105, 124-138, 158-159, 179, 210-229, 248-249, 285-370, 386, 411-413, 458-460, 484, 488-490, 513-515, 542-544\nmetamcp/api/oauth.py                    144     98    32%   59-67, 73-95, 106-149, 159-182, 192-201, 213-237, 248-268, 276-305, 315-353, 364-380\nmetamcp/api/proxy.py                    168     96    43%   111-114, 120-123, 141-167, 180-200, 216-238, 254-265, 285-333, 346-364, 377-400, 413-421, 429-446, 452\nmetamcp/api/router.py                    18      0   100%\nmetamcp/api/tools.py                    192    103    46%   131, 136-139, 146-148, 155, 162-174, 185, 191, 221-270, 305-347, 378-413, 444-494, 522-549, 578-614, 645-678\nmetamcp/auth/oauth.py                   188    129    31%   55-57, 82-86, 90-104, 109-183, 188, 212-250, 270-319, 329-365, 376-401, 407-422, 429-432, 436-450, 456-497, 501-502, 506-509, 513, 518, 529-532\nmetamcp/client.py                       201    168    16%   55-70, 74-77, 81-89, 98-113, 117-123, 127-145, 149-158, 164-174, 199-218, 235-252, 270-287, 305-318, 336-348, 362-374, 389-402, 417-435, 448-458, 470-480, 491-510, 519, 523-524, 528\nmetamcp/composition/__init__.py           5      0   100%\nmetamcp/composition/engine.py           287    257    10%   41-43, 47-57, 66-77, 92-148, 158-177, 188-245, 255-299, 305-326, 332-337, 347-374, 384-414, 418-419, 423-433, 439-467, 471-485, 489-498, 502-505, 515-526, 531-544, 548-570\nmetamcp/composition/executor.py         169    147    13%   36, 40-50, 71-120, 137-171, 177-182, 192-219, 229-266, 270-271, 277-289, 295-325, 329-343, 347-358\nmetamcp/composition/models.py           114      0   100%\nmetamcp/composition/orchestrator.py     141    118    16%   34-37, 41-58, 67-73, 88-108, 123-137, 149-177, 186, 198, 210-219, 234-243, 252-267, 279-295, 299-306, 310-331, 336-350, 355-362\nmetamcp/composition/persistence.py      123     37    70%   119-121, 218-220, 225-227, 251-253, 257-326, 330-345, 365-367, 399-401\nmetamcp/config.py                       132     30    77%   203, 211, 219, 263-264, 275-302, 321-325, 329, 333, 337-338, 349, 359-368\nmetamcp/exceptions.py                   112     34    70%   54-55, 64, 81, 90-91, 104, 119, 127, 134, 142, 149, 186-187, 200-201, 214, 222, 230, 240-241, 254-255, 268, 280-281, 294-296, 309, 317, 325-326, 339\nmetamcp/llm/service.py                   96     78    19%   33-42, 46-64, 70-95, 112-124, 130-139, 143-161, 177-190, 197-208, 215-224, 229\nmetamcp/main.py                          92     52    43%   40-83, 136, 153-156, 170-171, 186-191, 201-227, 236-248\nmetamcp/mcp/server.py                   178    122    31%   58-64, 87-110, 120-135, 139-189, 195-204, 210-245, 254, 260, 266, 272, 278-310, 314-340, 345\nmetamcp/monitoring/__init__.py            2      0   100%\nmetamcp/monitoring/health.py             96     75    22%   22-23, 27-37, 41, 45-57, 61-75, 85-103, 111-119, 127-145, 158-160, 165, 176-179, 190-220\nmetamcp/monitoring/metrics.py            51     32    37%   23-35, 43-44, 48-58, 64-67, 73, 79-86, 90, 94, 98-100, 105, 116-119\nmetamcp/monitoring/telemetry.py         198     76    62%   28-62, 101, 105-109, 125-128, 133-134, 143-148, 158-160, 165-166, 178-183, 196-198, 203, 247-248, 260-263, 274-275, 279-289, 293-303, 348-349, 374-375, 390, 406-407\nmetamcp/proxy/__init__.py                 5      0   100%\nmetamcp/proxy/discovery.py              235    183    22%   38-45, 62-67, 81-82, 86-96, 108-135, 141-183, 189-204, 210-255, 259-270, 274-308, 312-339, 346-351, 362-381, 385-405, 414, 418, 432, 444-445, 450\nmetamcp/proxy/interceptor.py            129     80    38%   33-36, 50-51, 65-68, 72-86, 91-101, 110, 119, 128, 143-161, 169-179, 183-193, 199-203, 207, 217-226, 231, 239-240, 244, 252, 258, 268, 295, 307-308, 313\nmetamcp/proxy/manager.py                259    218    16%   44-46, 50-67, 73-96, 108-136, 140-166, 178-241, 253-267, 276-285, 297, 306, 318-339, 343-372, 376-402, 406-430, 434-451, 460-482, 486-500, 504-512, 516-523, 527-532, 537\nmetamcp/proxy/wrapper.py                221    171    23%   52-57, 61-93, 105-122, 126-136, 140-150, 154-160, 166-182, 188-200, 206-220, 226-243, 249-252, 268-287, 294-299, 306-309, 319-331, 337-355, 361-384, 388-404, 410-429, 434, 439, 443-444, 449\nmetamcp/security/auth.py                 99     71    28%   36-55, 59-74, 80, 84, 88, 101-109, 124, 137-144, 159-174, 189-205, 217-221, 234-235, 251-261, 284, 296-300, 308-313, 318\nmetamcp/security/policies.py            132    108    18%   35-48, 52-71, 78-95, 102, 116-128, 132-151, 157-178, 183-188, 203-214, 231, 244-261, 267-283, 292, 300-309, 314\nmetamcp/server.py                       140     90    36%   34-35, 39-66, 91-93, 110-112, 121-149, 155-182, 187-217, 229-256, 260-272, 277-283, 287-314, 324-325, 330-331\nmetamcp/services/__init__.py              4      0   100%\nmetamcp/services/auth_service.py        168     29    83%   98-99, 113-116, 140, 153-155, 190, 221, 225, 228, 234-236, 260, 286, 320, 358-360, 383, 396-399, 421, 436\nmetamcp/services/search_service.py      133     18    86%   158, 179-181, 231-233, 261, 271-273, 291-293, 318, 325-327, 388\nmetamcp/services/tool_service.py        139     23    83%   88-90, 288-290, 331-332, 373-380, 392-418\nmetamcp/tools/registry.py               190    166    13%   44-55, 59-81, 89-133, 148-184, 191-220, 232-246, 267-318, 324-355, 375-421, 430-524, 531-545, 550\nmetamcp/utils/__init__.py                 3      0   100%\nmetamcp/utils/api_versioning.py         160     96    40%   45, 47, 49, 103, 107-117, 121-126, 132, 136, 140-146, 151-154, 160-185, 189-200, 208-209, 214-240, 245-261, 267-275, 290-291, 297-323, 329-342, 351, 356, 361, 366\nmetamcp/utils/cache.py                  240    104    57%   84-86, 121-123, 133-137, 146-148, 170-171, 187, 199-203, 207-217, 221-235, 239-254, 258-265, 269-276, 280-286, 290-309, 356, 360, 364, 401-403, 407, 425-445, 454, 470-471\nmetamcp/utils/circuit_breaker.py        157     31    80%   105, 115-118, 167, 269-272, 276-279, 283-314, 383, 388\nmetamcp/utils/database.py                92     28    70%   33-34, 48-51, 76, 79-83, 88, 93, 97-98, 103, 108, 126-131, 156-157, 162-163, 170-172\nmetamcp/utils/error_handler.py          111     63    43%   60-73, 77-103, 109-139, 143-174, 178-217, 221, 233-244, 248, 254-256, 276-278, 283\nmetamcp/utils/helpers.py                117     99    15%   35-69, 88-142, 155-165, 180-186, 200-224, 237-240, 253-255, 270-293, 307, 321-329, 345-363\nmetamcp/utils/logging.py                 46     19    59%   50, 64, 76-93, 123, 145, 175, 207, 240, 264, 284, 311, 338\nmetamcp/utils/rate_limiter.py            96     58    40%   48, 63-83, 92-105, 125-128, 134-137, 142-156, 160-161, 171-172, 184-185, 189-237\nmetamcp/vector/client.py                107     69    36%   49, 60-66, 93-99, 110-116, 123-149, 166-193, 217-264, 276-288, 295-307, 312\n-------------------------------------------------------------------\nTOTAL                                  6302   3668    42%\nCoverage HTML written to dir test-results/coverage/html\nCoverage XML written to file test-results/coverage.xml\n=========================== short test summary info ============================\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_authentication_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_registration_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_search_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_cache_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_circuit_breaker_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_rate_limiter_performance\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_user_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_tool_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_search_operations\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_memory_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_cpu_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_authentication_benchmark\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_tool_operations_benchmark\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_memory_leak_detection\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_cpu_efficiency\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_password_hashing_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_token_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_brute_force_protection\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_account_lockout\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_permission_based_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_inactive_user_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_resource_ownership\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_sql_injection_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_xss_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_path_traversal_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_input_sanitization\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_parameter_validation\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_rate_limiting_protection\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_ddos_protection\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_revocation\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_blacklisting\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_expiration\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_sensitive_data_encryption\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_data_isolation\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_cache_security\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_audit_logging\nERROR tests/unit/test_cli.py::TestEnvironmentCommands::test_env_show\nERROR tests/unit/test_cli.py::TestEnvironmentCommands::test_env_diff\nFAILED tests/unit/performance/test_cli_performance.py::TestCLIPerformance::test_file_operations_performance\nFAILED tests/unit/performance/test_cli_performance.py::TestCLIResourceUsage::test_disk_io_performance\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryManager::test_trace_operation\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryManager::test_shutdown\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryIntegration::test_telemetry_with_server\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryIntegration::test_telemetry_with_mcp_server\nFAILED tests/unit/test_cli.py::TestUpdateResetCommands::test_update_command\nFAILED tests/unit/test_cli_utils.py::TestDocsUtils::test_generate_api_docs - ...\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_initialize_with_url\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_health_check_success\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_get_pool_stats\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_execute_query\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_fetch_query - T...\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_fetchval_query\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_database_health_success\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_vector_db_health_success\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_llm_service_health_success\nFAILED tests/unit/test_health.py::TestHealthEndpoints::test_readiness_probe\nFAILED tests/unit/test_health.py::TestHealthComponentIntegration::test_all_components_healthy\nFAILED tests/unit/test_utils.py::TestCache::test_generate_key - AssertionErro...\nFAILED tests/unit/test_utils.py::TestCircuitBreakerDecorator::test_circuit_breaker_decorator\n=========== 21 failed, 187 passed, 29 warnings, 38 errors in 11.85s ============\n",
      "stderr": "",
      "execution_time": 15.071577310562134,
      "success": false
    },
    "integration_tests": {
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /home/johannes/PycharmProjects/MetaMCP\nconfigfile: pyproject.toml\nplugins: mock-3.14.1, anyio-4.9.0, asyncio-1.0.0, xdist-3.8.0, cov-6.2.1, benchmark-5.1.0, httpx-0.35.0, Faker-37.4.2\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 73 items / 63 deselected / 10 selected\n\ntests/integration/test_end_to_end.py EEEEEEEEEE                          [100%]\n\n==================================== ERRORS ====================================\n_____ ERROR at setup of TestEndToEndWorkflows.test_complete_user_workflow ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_________ ERROR at setup of TestEndToEndWorkflows.test_admin_workflow __________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestEndToEndWorkflows.test_error_handling_workflow _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestEndToEndWorkflows.test_concurrent_operations ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n________ ERROR at setup of TestEndToEndWorkflows.test_data_consistency _________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestEndToEndWorkflows.test_performance_workflow _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestCrossComponentIntegration.test_auth_tool_integration __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestCrossComponentIntegration.test_search_tool_integration _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____ ERROR at setup of TestCrossComponentIntegration.test_error_propagation ____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestDataPersistence.test_data_persistence_workflow _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n- generated xml file: /home/johannes/PycharmProjects/MetaMCP/test-results/integration-tests.xml -\n=========================== short test summary info ============================\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_complete_user_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_admin_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_error_handling_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_concurrent_operations\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_data_consistency\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_performance_workflow\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_auth_tool_integration\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_search_tool_integration\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_error_propagation\nERROR tests/integration/test_end_to_end.py::TestDataPersistence::test_data_persistence_workflow\n================ 63 deselected, 10 warnings, 10 errors in 0.13s ================\n",
      "stderr": "",
      "execution_time": 2.4810822010040283,
      "success": false
    },
    "performance_tests": {
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /home/johannes/PycharmProjects/MetaMCP\nconfigfile: pyproject.toml\nplugins: mock-3.14.1, anyio-4.9.0, asyncio-1.0.0, xdist-3.8.0, cov-6.2.1, benchmark-5.1.0, httpx-0.35.0, Faker-37.4.2\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 25 items / 10 deselected / 15 selected\n\ntests/unit/performance/test_performance.py EEEEEEEEEEEEEEE               [100%]\n\n==================================== ERRORS ====================================\n_ ERROR at setup of TestPerformanceBenchmarks.test_authentication_performance __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestPerformanceBenchmarks.test_tool_registration_performance _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestPerformanceBenchmarks.test_tool_search_performance ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestPerformanceBenchmarks.test_cache_performance ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestPerformanceBenchmarks.test_circuit_breaker_performance _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceBenchmarks.test_rate_limiter_performance ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_user_registration ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_tool_registration ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestLoadTesting.test_concurrent_search_operations ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestStressTesting.test_memory_usage_under_load _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n________ ERROR at setup of TestStressTesting.test_cpu_usage_under_load _________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceRegression.test_authentication_benchmark ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__ ERROR at setup of TestPerformanceRegression.test_tool_operations_benchmark __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestResourceMonitoring.test_memory_leak_detection ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_________ ERROR at setup of TestResourceMonitoring.test_cpu_efficiency _________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n- generated xml file: /home/johannes/PycharmProjects/MetaMCP/test-results/performance-tests.xml -\n=========================== short test summary info ============================\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_authentication_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_registration_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_search_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_cache_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_circuit_breaker_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_rate_limiter_performance\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_user_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_tool_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_search_operations\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_memory_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_cpu_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_authentication_benchmark\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_tool_operations_benchmark\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_memory_leak_detection\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_cpu_efficiency\n================ 10 deselected, 10 warnings, 15 errors in 0.14s ================\n",
      "stderr": "",
      "execution_time": 2.470773696899414,
      "success": false
    },
    "security_tests": {
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /home/johannes/PycharmProjects/MetaMCP\nconfigfile: pyproject.toml\nplugins: mock-3.14.1, anyio-4.9.0, asyncio-1.0.0, xdist-3.8.0, cov-6.2.1, benchmark-5.1.0, httpx-0.35.0, Faker-37.4.2\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 21 items\n\ntests/unit/security/test_security.py EEEEEEEEEEEEEEEEEEEEE               [100%]\n\n==================================== ERRORS ====================================\n_ ERROR at setup of TestAuthenticationSecurity.test_password_hashing_security __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestAuthenticationSecurity.test_token_security _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestAuthenticationSecurity.test_brute_force_protection ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestAuthenticationSecurity.test_account_lockout _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestAuthorizationSecurity.test_permission_based_access ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____ ERROR at setup of TestAuthorizationSecurity.test_inactive_user_access _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_____ ERROR at setup of TestAuthorizationSecurity.test_resource_ownership ______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestInputValidationSecurity.test_sql_injection_protection __\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestInputValidationSecurity.test_xss_protection _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_ ERROR at setup of TestInputValidationSecurity.test_path_traversal_protection _\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____ ERROR at setup of TestInputValidationSecurity.test_input_sanitization _____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestInputValidationSecurity.test_parameter_validation ____\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n___ ERROR at setup of TestRateLimitingSecurity.test_rate_limiting_protection ___\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_______ ERROR at setup of TestRateLimitingSecurity.test_ddos_protection ________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__________ ERROR at setup of TestTokenSecurity.test_token_revocation ___________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n_________ ERROR at setup of TestTokenSecurity.test_token_blacklisting __________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n__________ ERROR at setup of TestTokenSecurity.test_token_expiration ___________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n______ ERROR at setup of TestDataSecurity.test_sensitive_data_encryption _______\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_data_isolation ____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_cache_security ____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n____________ ERROR at setup of TestDataSecurity.test_audit_logging _____________\ntests/conftest.py:42: in test_settings\n    return Settings(\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE   vector_database_url\nE     Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   testing\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   rate_limit_requests_per_minute\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   cache_ttl_seconds\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_failure_threshold\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   circuit_breaker_recovery_timeout\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_enabled\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE   admin_ui_port\nE     Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE       For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n- generated xml file: /home/johannes/PycharmProjects/MetaMCP/test-results/security-tests.xml -\n=========================== short test summary info ============================\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_password_hashing_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_token_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_brute_force_protection\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_account_lockout\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_permission_based_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_inactive_user_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_resource_ownership\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_sql_injection_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_xss_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_path_traversal_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_input_sanitization\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_parameter_validation\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_rate_limiting_protection\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_ddos_protection\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_revocation\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_blacklisting\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_expiration\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_sensitive_data_encryption\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_data_isolation\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_cache_security\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_audit_logging\n======================= 10 warnings, 21 errors in 0.17s ========================\n",
      "stderr": "",
      "execution_time": 2.490767478942871,
      "success": false
    },
    "blackbox_tests": {
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /home/johannes/PycharmProjects/MetaMCP\nconfigfile: pyproject.toml\nplugins: mock-3.14.1, anyio-4.9.0, asyncio-1.0.0, xdist-3.8.0, cov-6.2.1, benchmark-5.1.0, httpx-0.35.0, Faker-37.4.2\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 90 items\n\ntests/blackbox/integration/test_workflows.py FFFFFFFF                    [  8%]\ntests/blackbox/mcp_api/test_protocol.py FFFFFFFFFF                       [ 20%]\ntests/blackbox/performance/test_load.py .FFFF.FF.                        [ 30%]\ntests/blackbox/rest_api/test_admin.py FF                                 [ 32%]\ntests/blackbox/rest_api/test_auth.py ...FFF.FFF.                         [ 44%]\ntests/blackbox/rest_api/test_composition.py FFF                          [ 47%]\ntests/blackbox/rest_api/test_health.py FFFFFF.FF                         [ 57%]\ntests/blackbox/rest_api/test_oauth.py F.F                                [ 61%]\ntests/blackbox/rest_api/test_proxy.py FF.FF                              [ 66%]\ntests/blackbox/rest_api/test_tools.py FFFFEFEEE.EEEEE                    [ 83%]\ntests/blackbox/security/test_security.py ...FF.FF.FF..FF                 [100%]\n\n==================================== ERRORS ====================================\n__________ ERROR at setup of TestToolRetrieval.test_get_tool_success ___________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n_____________ ERROR at setup of TestToolRetrieval.test_list_tools ______________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n___ ERROR at setup of TestToolRetrieval.test_list_tools_with_category_filter ___\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n________ ERROR at setup of TestToolExecution.test_execute_tool_success _________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n___ ERROR at setup of TestToolExecution.test_execute_tool_invalid_arguments ____\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n______________ ERROR at setup of TestToolSearch.test_search_tools ______________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n_______ ERROR at setup of TestToolSearch.test_search_tools_with_filters ________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n____________ ERROR at setup of TestToolManagement.test_update_tool _____________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n____________ ERROR at setup of TestToolManagement.test_delete_tool _____________\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/blackbox/conftest.py:138: in test_tool_id\n    pytest.fail(f\"Failed to register test tool: {response.text}\")\nE   Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n=================================== FAILURES ===================================\n________________ TestUserWorkflows.test_complete_tool_lifecycle ________________\ntests/blackbox/integration/test_workflows.py:39: in test_complete_tool_lifecycle\n    assert register_response.status_code in [200, 201]\nE   assert 307 in [200, 201]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n________________ TestUserWorkflows.test_authentication_workflow ________________\ntests/blackbox/integration/test_workflows.py:108: in test_authentication_workflow\n    assert \"user_id\" in me_data\nE   AssertionError: assert 'user_id' in {'display_name': None, 'email': 'admin@example.com', 'first_name': 'Admin', 'id': 'eb16c71e-21ce-4a82-a659-57cc2268c06e', ...}\n____________________ TestUserWorkflows.test_admin_workflow _____________________\ntests/blackbox/integration/test_workflows.py:149: in test_admin_workflow\n    assert dashboard_response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_______ TestErrorHandlingWorkflows.test_authentication_failure_workflow ________\ntests/blackbox/integration/test_workflows.py:169: in test_authentication_failure_workflow\n    assert response.status_code in [401, 403]\nE   assert 307 in [401, 403]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n__________ TestErrorHandlingWorkflows.test_tool_workflow_with_errors ___________\ntests/blackbox/integration/test_workflows.py:201: in test_tool_workflow_with_errors\n    assert register_response.status_code in [400, 422]\nE   assert 307 in [400, 422]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n____________ TestConcurrentWorkflows.test_concurrent_user_sessions _____________\ntests/blackbox/integration/test_workflows.py:260: in test_concurrent_user_sessions\n    assert (\nE   AssertionError: Only 0/5 concurrent sessions succeeded\nE   assert 0 >= 3\n___________ TestConcurrentWorkflows.test_concurrent_tool_operations ____________\ntests/blackbox/integration/test_workflows.py:312: in test_concurrent_tool_operations\n    assert (\nE   AssertionError: Only 0/3 concurrent tool operations succeeded\nE   assert 0 >= 2\n___________ TestDataConsistencyWorkflows.test_tool_data_consistency ____________\ntests/blackbox/integration/test_workflows.py:334: in test_tool_data_consistency\n    tool_data[\"name\"] = f\"consistency_test_tool_{int(pytest.time.time())}\"\n                                                     ^^^^^^^^^^^\nE   AttributeError: module 'pytest' has no attribute 'time'\n_________________ TestMCPConnection.test_websocket_connection __________________\ntests/blackbox/mcp_api/test_protocol.py:22: in test_websocket_connection\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n__________________ TestMCPConnection.test_mcp_initialization ___________________\ntests/blackbox/mcp_api/test_protocol.py:30: in test_mcp_initialization\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n__________ TestMCPConnection.test_mcp_initialization_invalid_version ___________\ntests/blackbox/mcp_api/test_protocol.py:71: in test_mcp_initialization_invalid_version\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n___________ TestMCPConnection.test_mcp_initialization_missing_params ___________\ntests/blackbox/mcp_api/test_protocol.py:95: in test_mcp_initialization_missing_params\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n_______________________ TestMCPTools.test_mcp_list_tools _______________________\ntests/blackbox/mcp_api/test_protocol.py:120: in test_mcp_list_tools\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n_______________________ TestMCPTools.test_mcp_call_tool ________________________\ntests/blackbox/mcp_api/test_protocol.py:176: in test_mcp_call_tool\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n_____________________ TestMCPTools.test_mcp_invalid_method _____________________\ntests/blackbox/mcp_api/test_protocol.py:218: in test_mcp_invalid_method\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n_________________ TestMCPErrorHandling.test_mcp_malformed_json _________________\ntests/blackbox/mcp_api/test_protocol.py:261: in test_mcp_malformed_json\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n________________ TestMCPErrorHandling.test_mcp_missing_jsonrpc _________________\ntests/blackbox/mcp_api/test_protocol.py:277: in test_mcp_missing_jsonrpc\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n______________ TestMCPErrorHandling.test_mcp_concurrent_requests _______________\ntests/blackbox/mcp_api/test_protocol.py:293: in test_mcp_concurrent_requests\n    async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: in create_connection\n    _, connection = await loop.create_connection(factory, **kwargs)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n___________ TestPerformanceEndpoints.test_concurrent_health_requests ___________\ntests/blackbox/performance/test_load.py:44: in test_concurrent_health_requests\n    assert \"healthy\" in data\nE   AssertionError: assert 'healthy' in {'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'healthy', 'version': '1.0.0'}\n_________ TestPerformanceEndpoints.test_tool_registration_performance __________\ntests/blackbox/performance/test_load.py:66: in test_tool_registration_performance\n    assert response.status_code in [200, 201]\nE   assert 403 in [200, 201]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n___________ TestPerformanceEndpoints.test_concurrent_tool_operations ___________\ntests/blackbox/performance/test_load.py:92: in test_concurrent_tool_operations\n    assert response.status_code in [200, 201]\nE   assert 403 in [200, 201]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_______________ TestPerformanceEndpoints.test_search_performance _______________\ntests/blackbox/performance/test_load.py:104: in test_search_performance\n    assert response.status_code in [200, 404]\nE   assert 307 in [200, 404]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n_____________________ TestLoadTesting.test_mixed_workload ______________________\ntests/blackbox/performance/test_load.py:155: in test_mixed_workload\n    assert (\nE   AssertionError: Too many failures: 10/30\nE   assert 10 >= (30 * 0.6)\nE    +  where 30 = len([<Response [200 OK]>, <Response [403 Forbidden]>, <Response [307 Temporary Redirect]>, <Response [200 OK]>, <Response [403 Forbidden]>, <Response [307 Temporary Redirect]>, ...])\n________________ TestStressTesting.test_large_payload_handling _________________\ntests/blackbox/performance/test_load.py:182: in test_large_payload_handling\n    assert response.status_code in [200, 201, 400, 413]\nE   assert 403 in [200, 201, 400, 413]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_________________ TestAdminEndpoints.test_get_admin_dashboard __________________\ntests/blackbox/rest_api/test_admin.py:20: in test_get_admin_dashboard\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n___________ TestAdminEndpoints.test_get_admin_dashboard_unauthorized ___________\ntests/blackbox/rest_api/test_admin.py:29: in test_get_admin_dashboard_unauthorized\n    assert response.status_code in [401, 403]\nE   assert 404 in [401, 403]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_____________________ TestAuthentication.test_me_endpoint ______________________\ntests/blackbox/rest_api/test_auth.py:53: in test_me_endpoint\n    assert response.status_code == 200\nE   assert 403 == 200\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_______________ TestAuthentication.test_me_endpoint_unauthorized _______________\ntests/blackbox/rest_api/test_auth.py:65: in test_me_endpoint_unauthorized\n    assert response.status_code == 401\nE   assert 403 == 401\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_________________ TestAuthentication.test_permissions_endpoint _________________\ntests/blackbox/rest_api/test_auth.py:73: in test_permissions_endpoint\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n____________________ TestAuthentication.test_refresh_token _____________________\ntests/blackbox/rest_api/test_auth.py:92: in test_refresh_token\n    assert response.status_code == 200\nE   assert 422 == 200\nE    +  where 422 = <Response [422 Unprocessable Entity]>.status_code\n_____________ TestAuthorization.test_protected_endpoint_with_token _____________\ntests/blackbox/rest_api/test_auth.py:109: in test_protected_endpoint_with_token\n    assert response.status_code in [200, 404]\nE   assert 403 in [200, 404]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n___________ TestAuthorization.test_protected_endpoint_without_token ____________\ntests/blackbox/rest_api/test_auth.py:115: in test_protected_endpoint_without_token\n    assert response.status_code == 401\nE   assert 403 == 401\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_______________ TestCompositionEndpoints.test_register_workflow ________________\ntests/blackbox/rest_api/test_composition.py:32: in test_register_workflow\n    assert response.status_code in [200, 201]\nE   assert 404 in [200, 201]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_________________ TestCompositionEndpoints.test_list_workflows _________________\ntests/blackbox/rest_api/test_composition.py:44: in test_list_workflows\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_________ TestCompositionEndpoints.test_register_workflow_unauthorized _________\ntests/blackbox/rest_api/test_composition.py:57: in test_register_workflow_unauthorized\n    assert response.status_code in [401, 403]\nE   assert 404 in [401, 403]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n____________________ TestHealthEndpoints.test_health_check _____________________\ntests/blackbox/rest_api/test_health.py:22: in test_health_check\n    assert \"healthy\" in data\nE   AssertionError: assert 'healthy' in {'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'healthy', 'version': '1.0.0'}\n___________________ TestHealthEndpoints.test_detailed_health ___________________\ntests/blackbox/rest_api/test_health.py:34: in test_detailed_health\n    assert \"overall_healthy\" in data\nE   AssertionError: assert 'overall_healthy' in {'components': {'cache': {'details': {'connected_clients': 2, 'keyspace_hits': 0, 'keyspace_misses': 0, 'status': 'con..., 'status': 'unhealthy'}}, 'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'degraded', ...}\n____________________ TestHealthEndpoints.test_health_ready _____________________\ntests/blackbox/rest_api/test_health.py:44: in test_health_ready\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_____________________ TestHealthEndpoints.test_health_live _____________________\ntests/blackbox/rest_api/test_health.py:53: in test_health_live\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n__________________ TestHealthEndpoints.test_health_components __________________\ntests/blackbox/rest_api/test_health.py:65: in test_health_components\n    assert isinstance(components, list)\nE   AssertionError: assert False\nE    +  where False = isinstance({'cache': {'details': {'connected_clients': 2, 'keyspace_hits': 0, 'keyspace_misses': 0, 'status': 'connected', ...}, ...: {'error': 'Weaviate client not initialized. Call init_weaviate() first.', 'status': 'error'}, 'status': 'unhealthy'}}, list)\n_______________ TestHealthEndpoints.test_health_uptime_increases _______________\ntests/blackbox/rest_api/test_health.py:80: in test_health_uptime_increases\n    uptime1 = data1[\"uptime\"]\n              ^^^^^^^^^^^^^^^\nE   KeyError: 'uptime'\n_______________ TestHealthEndpoints.test_health_timestamp_format _______________\ntests/blackbox/rest_api/test_health.py:107: in test_health_timestamp_format\n    timestamp = data[\"timestamp\"]\n                ^^^^^^^^^^^^^^^^^\nE   KeyError: 'timestamp'\n_____________ TestHealthEndpoints.test_health_endpoints_accessible _____________\ntests/blackbox/rest_api/test_health.py:123: in test_health_endpoints_accessible\n    assert (\nE   AssertionError: Endpoint health/ready should be accessible\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n___________________ TestOAuthEndpoints.test_get_oauth_config ___________________\ntests/blackbox/rest_api/test_oauth.py:20: in test_get_oauth_config\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n____________ TestOAuthEndpoints.test_oauth_callback_missing_params _____________\ntests/blackbox/rest_api/test_oauth.py:45: in test_oauth_callback_missing_params\n    assert response.status_code in [400, 422]\nE   assert 404 in [400, 422]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n________________ TestProxyEndpoints.test_register_proxy_server _________________\ntests/blackbox/rest_api/test_proxy.py:35: in test_register_proxy_server\n    assert response.status_code in [200, 201]\nE   assert 404 in [200, 201]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n__________________ TestProxyEndpoints.test_list_proxy_servers __________________\ntests/blackbox/rest_api/test_proxy.py:44: in test_list_proxy_servers\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n________________ TestProxyEndpoints.test_discover_proxy_servers ________________\ntests/blackbox/rest_api/test_proxy.py:75: in test_discover_proxy_servers\n    assert response.status_code in [200, 201]\nE   assert 404 in [200, 201]\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_____________ TestProxyEndpoints.test_get_discovered_proxy_servers _____________\ntests/blackbox/rest_api/test_proxy.py:89: in test_get_discovered_proxy_servers\n    assert response.status_code == 200\nE   assert 404 == 200\nE    +  where 404 = <Response [404 Not Found]>.status_code\n_______________ TestToolRegistration.test_register_tool_success ________________\ntests/blackbox/rest_api/test_tools.py:25: in test_register_tool_success\n    assert response.status_code in [200, 201]\nE   assert 403 in [200, 201]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n______________ TestToolRegistration.test_register_tool_duplicate _______________\ntests/blackbox/rest_api/test_tools.py:38: in test_register_tool_duplicate\n    assert response1.status_code in [200, 201]\nE   assert 403 in [200, 201]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n____________ TestToolRegistration.test_register_tool_missing_fields ____________\ntests/blackbox/rest_api/test_tools.py:59: in test_register_tool_missing_fields\n    assert response.status_code in [400, 422]\nE   assert 403 in [400, 422]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_____________ TestToolRegistration.test_register_tool_unauthorized _____________\ntests/blackbox/rest_api/test_tools.py:65: in test_register_tool_unauthorized\n    assert response.status_code == 401\nE   assert 403 == 401\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n__________________ TestToolRetrieval.test_get_tool_not_found ___________________\ntests/blackbox/rest_api/test_tools.py:94: in test_get_tool_not_found\n    assert response.status_code == 404\nE   assert 403 == 404\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n_________ TestAuthorizationSecurity.test_unauthorized_access_attempts __________\ntests/blackbox/security/test_security.py:78: in test_unauthorized_access_attempts\n    assert response.status_code in [401, 403]\nE   assert 307 in [401, 403]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n____________ TestAuthorizationSecurity.test_invalid_token_handling _____________\ntests/blackbox/security/test_security.py:92: in test_invalid_token_handling\n    assert response.status_code in [401, 403]\nE   assert 307 in [401, 403]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n_______ TestInputValidationSecurity.test_xss_injection_tool_registration _______\ntests/blackbox/security/test_security.py:146: in test_xss_injection_tool_registration\n    assert response.status_code in [400, 422, 201]\nE   assert 307 in [400, 422, 201]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n___________ TestInputValidationSecurity.test_path_traversal_attempts ___________\ntests/blackbox/security/test_security.py:160: in test_path_traversal_attempts\n    assert response.status_code in [400, 404, 422]\nE   assert 403 in [400, 404, 422]\nE    +  where 403 = <Response [403 Forbidden]>.status_code\n______________ TestSecurityHeaders.test_security_headers_present _______________\ntests/blackbox/security/test_security.py:201: in test_security_headers_present\n    assert (\nE   AssertionError: No security headers found. Present: ['date', 'server', 'content-length', 'content-type', 'content-language']\nE   assert 0 > 0\nE    +  where 0 = len([])\n____________________ TestSecurityHeaders.test_cors_headers _____________________\ntests/blackbox/security/test_security.py:214: in test_cors_headers\n    assert len(present_cors) > 0, \"No CORS headers found\"\nE   AssertionError: No CORS headers found\nE   assert 0 > 0\nE    +  where 0 = len([])\n__________ TestDataValidationSecurity.test_oversized_payload_handling __________\ntests/blackbox/security/test_security.py:280: in test_oversized_payload_handling\n    assert response.status_code in [400, 413, 422]\nE   assert 307 in [400, 413, 422]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n___________ TestDataValidationSecurity.test_malformed_json_handling ____________\ntests/blackbox/security/test_security.py:298: in test_malformed_json_handling\n    assert response.status_code in [400, 422]\nE   assert 307 in [400, 422]\nE    +  where 307 = <Response [307 Temporary Redirect]>.status_code\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\ntests/blackbox/conftest.py:87\n  /home/johannes/PycharmProjects/MetaMCP/tests/blackbox/conftest.py:87: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    AsyncGenerator[websockets.WebSocketServerProtocol, None]\n\n.venv/lib/python3.13/site-packages/websockets/legacy/__init__.py:6\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/websockets/legacy/__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n- generated xml file: /home/johannes/PycharmProjects/MetaMCP/test-results/blackbox-tests.xml -\n=========================== short test summary info ============================\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_get_tool_success\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_list_tools\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_list_tools_with_category_filter\nERROR tests/blackbox/rest_api/test_tools.py::TestToolExecution::test_execute_tool_success\nERROR tests/blackbox/rest_api/test_tools.py::TestToolExecution::test_execute_tool_invalid_arguments\nERROR tests/blackbox/rest_api/test_tools.py::TestToolSearch::test_search_tools\nERROR tests/blackbox/rest_api/test_tools.py::TestToolSearch::test_search_tools_with_filters\nERROR tests/blackbox/rest_api/test_tools.py::TestToolManagement::test_update_tool\nERROR tests/blackbox/rest_api/test_tools.py::TestToolManagement::test_delete_tool\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_complete_tool_lifecycle\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_authentication_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_admin_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestErrorHandlingWorkflows::test_authentication_failure_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestErrorHandlingWorkflows::test_tool_workflow_with_errors\nFAILED tests/blackbox/integration/test_workflows.py::TestConcurrentWorkflows::test_concurrent_user_sessions\nFAILED tests/blackbox/integration/test_workflows.py::TestConcurrentWorkflows::test_concurrent_tool_operations\nFAILED tests/blackbox/integration/test_workflows.py::TestDataConsistencyWorkflows::test_tool_data_consistency\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_websocket_connection\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization_invalid_version\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization_missing_params\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_list_tools\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_call_tool\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_invalid_method\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_malformed_json\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_missing_jsonrpc\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_concurrent_requests\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_concurrent_health_requests\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_tool_registration_performance\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_concurrent_tool_operations\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_search_performance\nFAILED tests/blackbox/performance/test_load.py::TestLoadTesting::test_mixed_workload\nFAILED tests/blackbox/performance/test_load.py::TestStressTesting::test_large_payload_handling\nFAILED tests/blackbox/rest_api/test_admin.py::TestAdminEndpoints::test_get_admin_dashboard\nFAILED tests/blackbox/rest_api/test_admin.py::TestAdminEndpoints::test_get_admin_dashboard_unauthorized\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_me_endpoint\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_me_endpoint_unauthorized\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_permissions_endpoint\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_refresh_token\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthorization::test_protected_endpoint_with_token\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthorization::test_protected_endpoint_without_token\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_register_workflow\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_list_workflows\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_register_workflow_unauthorized\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_check\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_detailed_health\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_ready\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_live\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_components\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_uptime_increases\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_timestamp_format\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_endpoints_accessible\nFAILED tests/blackbox/rest_api/test_oauth.py::TestOAuthEndpoints::test_get_oauth_config\nFAILED tests/blackbox/rest_api/test_oauth.py::TestOAuthEndpoints::test_oauth_callback_missing_params\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_register_proxy_server\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_list_proxy_servers\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_discover_proxy_servers\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_get_discovered_proxy_servers\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_success\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_duplicate\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_missing_fields\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_unauthorized\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_get_tool_not_found\nFAILED tests/blackbox/security/test_security.py::TestAuthorizationSecurity::test_unauthorized_access_attempts\nFAILED tests/blackbox/security/test_security.py::TestAuthorizationSecurity::test_invalid_token_handling\nFAILED tests/blackbox/security/test_security.py::TestInputValidationSecurity::test_xss_injection_tool_registration\nFAILED tests/blackbox/security/test_security.py::TestInputValidationSecurity::test_path_traversal_attempts\nFAILED tests/blackbox/security/test_security.py::TestSecurityHeaders::test_security_headers_present\nFAILED tests/blackbox/security/test_security.py::TestSecurityHeaders::test_cors_headers\nFAILED tests/blackbox/security/test_security.py::TestDataValidationSecurity::test_oversized_payload_handling\nFAILED tests/blackbox/security/test_security.py::TestDataValidationSecurity::test_malformed_json_handling\n============= 62 failed, 19 passed, 12 warnings, 9 errors in 6.03s =============\n",
      "stderr": "",
      "execution_time": 8.560590267181396,
      "success": false
    },
    "coverage_analysis": {
      "return_code": 1,
      "stdout": "FFFFFFFFFFFFFFFFFF.FFFF.FF.FF...FFF.FFF.FFFFFFFFF.FFF.FFF.FFFFFFEFEEE.EE [ 16%]\nEEE...FF.FF.FF..FF........................FFFFF...........FEEEEEEEEEE... [ 33%]\n...........................................F.FEEEEEEEEEEEEEEEEEEEEEEEEEE [ 50%]\nEEEEEEEEEE.....F...F..FF......EE...........F............................ [ 67%]\n.........F........F..FFFFF.......FFF..F......F.......................... [ 84%]\n..........................................................F.F.....       [100%]\n==================================== ERRORS ====================================\n__________ ERROR at setup of TestToolRetrieval.test_get_tool_success ___________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_get_tool_success>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2712831b50>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a27139560c0>\nsetup_task = <Task finished name='Task-489' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2712831b50>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n_____________ ERROR at setup of TestToolRetrieval.test_list_tools ______________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_list_tools>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2714276c90>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a27128998a0>\nsetup_task = <Task finished name='Task-506' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714276c90>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n___ ERROR at setup of TestToolRetrieval.test_list_tools_with_category_filter ___\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_list_tools_with_category_filter>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2713906bd0>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a271289be20>\nsetup_task = <Task finished name='Task-515' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906bd0>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n________ ERROR at setup of TestToolExecution.test_execute_tool_success _________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_execute_tool_success>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2713906990>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a271289aac0>\nsetup_task = <Task finished name='Task-524' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906990>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n___ ERROR at setup of TestToolExecution.test_execute_tool_invalid_arguments ____\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_execute_tool_invalid_arguments>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2713907110>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a2713956ca0>\nsetup_task = <Task finished name='Task-541' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713907110>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n______________ ERROR at setup of TestToolSearch.test_search_tools ______________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_search_tools>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2713907590>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a2713955120>\nsetup_task = <Task finished name='Task-550' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713907590>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n_______ ERROR at setup of TestToolSearch.test_search_tools_with_filters ________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_search_tools_with_filters>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2713906090>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a2713955f80>\nsetup_task = <Task finished name='Task-559' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906090>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n____________ ERROR at setup of TestToolManagement.test_update_tool _____________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_update_tool>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2714276c90>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a2712899620>\nsetup_task = <Task finished name='Task-568' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714276c90>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n____________ ERROR at setup of TestToolManagement.test_delete_tool _____________\n\nrequest = <SubRequest 'test_tool_id' for <Coroutine test_delete_tool>>\nkwargs = {'authenticated_client': <httpx.AsyncClient object at 0x7a2714277c50>}\nfunc = <function test_tool_id at 0x7a27148a0d60>\nevent_loop_fixture_id = '_function_event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7a271289bb00>\nsetup_task = <Task finished name='Task-577' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, .../pytest_asyncio/plugin.py:315> exception=Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3.13/asyncio/base_events.py:719: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pytest_asyncio/plugin.py:316: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714277c50>\n\n    @pytest.fixture\n    async def test_tool_id(\n        authenticated_client: httpx.AsyncClient,\n    ) -> AsyncGenerator[str, None]:\n        \"\"\"Register a test tool and return its ID.\"\"\"\n        # Register test tool\n        response = await authenticated_client.post(f\"{API_BASE_URL}/tools\", json=TEST_TOOL)\n    \n        if response.status_code == 200:\n            tool_id = response.json()[\"data\"][\"tool_id\"]\n            yield tool_id\n    \n            # Cleanup: delete test tool\n            try:\n                await authenticated_client.delete(\n                    f\"{API_BASE_URL}/tools/{TEST_TOOL['name']}\"\n                )\n            except Exception:\n                pass  # Ignore cleanup errors\n        else:\n>           pytest.fail(f\"Failed to register test tool: {response.text}\")\nE           Failed: Failed to register test tool: {\"detail\":\"errors.not_found\",\"status_code\":404}\n\ntests/blackbox/conftest.py:138: Failed\n_____ ERROR at setup of TestEndToEndWorkflows.test_complete_user_workflow ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_________ ERROR at setup of TestEndToEndWorkflows.test_admin_workflow __________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestEndToEndWorkflows.test_error_handling_workflow _____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestEndToEndWorkflows.test_concurrent_operations ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n________ ERROR at setup of TestEndToEndWorkflows.test_data_consistency _________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestEndToEndWorkflows.test_performance_workflow _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__ ERROR at setup of TestCrossComponentIntegration.test_auth_tool_integration __\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestCrossComponentIntegration.test_search_tool_integration _\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____ ERROR at setup of TestCrossComponentIntegration.test_error_propagation ____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestDataPersistence.test_data_persistence_workflow _____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestPerformanceBenchmarks.test_authentication_performance __\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestPerformanceBenchmarks.test_tool_registration_performance _\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___ ERROR at setup of TestPerformanceBenchmarks.test_tool_search_performance ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestPerformanceBenchmarks.test_cache_performance ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestPerformanceBenchmarks.test_circuit_breaker_performance _\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__ ERROR at setup of TestPerformanceBenchmarks.test_rate_limiter_performance ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestLoadTesting.test_concurrent_user_registration ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestLoadTesting.test_concurrent_tool_registration ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestLoadTesting.test_concurrent_search_operations ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_______ ERROR at setup of TestStressTesting.test_memory_usage_under_load _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n________ ERROR at setup of TestStressTesting.test_cpu_usage_under_load _________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__ ERROR at setup of TestPerformanceRegression.test_authentication_benchmark ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__ ERROR at setup of TestPerformanceRegression.test_tool_operations_benchmark __\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestResourceMonitoring.test_memory_leak_detection ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_________ ERROR at setup of TestResourceMonitoring.test_cpu_efficiency _________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestAuthenticationSecurity.test_password_hashing_security __\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_______ ERROR at setup of TestAuthenticationSecurity.test_token_security _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___ ERROR at setup of TestAuthenticationSecurity.test_brute_force_protection ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestAuthenticationSecurity.test_account_lockout _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___ ERROR at setup of TestAuthorizationSecurity.test_permission_based_access ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____ ERROR at setup of TestAuthorizationSecurity.test_inactive_user_access _____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_____ ERROR at setup of TestAuthorizationSecurity.test_resource_ownership ______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestInputValidationSecurity.test_sql_injection_protection __\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestInputValidationSecurity.test_xss_protection _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_ ERROR at setup of TestInputValidationSecurity.test_path_traversal_protection _\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____ ERROR at setup of TestInputValidationSecurity.test_input_sanitization _____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___ ERROR at setup of TestInputValidationSecurity.test_parameter_validation ____\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___ ERROR at setup of TestRateLimitingSecurity.test_rate_limiting_protection ___\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_______ ERROR at setup of TestRateLimitingSecurity.test_ddos_protection ________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__________ ERROR at setup of TestTokenSecurity.test_token_revocation ___________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n_________ ERROR at setup of TestTokenSecurity.test_token_blacklisting __________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n__________ ERROR at setup of TestTokenSecurity.test_token_expiration ___________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n______ ERROR at setup of TestDataSecurity.test_sensitive_data_encryption _______\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____________ ERROR at setup of TestDataSecurity.test_data_isolation ____________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____________ ERROR at setup of TestDataSecurity.test_cache_security ____________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n____________ ERROR at setup of TestDataSecurity.test_audit_logging _____________\n\n    @pytest.fixture(scope=\"session\")\n    def test_settings() -> Settings:\n        \"\"\"Provide test settings with overrides.\"\"\"\n>       return Settings(\n            # Database\n            database_url=\"sqlite:///./test.db\",\n            # Vector Database\n            vector_database_url=\"http://localhost:8080\",\n            # Security\n            secret_key=\"test-secret-key-for-testing-only\",\n            algorithm=\"HS256\",\n            access_token_expire_minutes=30,\n            # Logging\n            log_level=\"DEBUG\",\n            # Testing\n            testing=True,\n            # Rate Limiting\n            rate_limit_enabled=True,\n            rate_limit_requests_per_minute=100,\n            # Cache\n            cache_enabled=True,\n            cache_ttl_seconds=300,\n            # Circuit Breaker\n            circuit_breaker_enabled=True,\n            circuit_breaker_failure_threshold=5,\n            circuit_breaker_recovery_timeout=60,\n            # Admin UI\n            admin_ui_enabled=True,\n            admin_ui_port=8081,\n        )\n\ntests/conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Settings(), _case_sensitive = None\n_nested_model_default_partial_update = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None\n_env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None\n_cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None\n_cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _cli_shortcuts = None\n_secrets_dir = None\nvalues = {'access_token_expire_minutes': 30, 'admin_ui_enabled': True, 'admin_ui_port': 8081, 'algorithm': 'HS256', ...}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 11 validation errors for Settings\nE       vector_database_url\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='http://localhost:8080', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       testing\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       rate_limit_requests_per_minute\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=100, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       cache_ttl_seconds\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=300, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_failure_threshold\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=5, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       circuit_breaker_recovery_timeout\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=60, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_enabled\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=True, input_type=bool]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       admin_ui_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value=8081, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.13/site-packages/pydantic_settings/main.py:188: ValidationError\n___________ ERROR at setup of TestEnvironmentCommands.test_env_show ____________\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 103\n      def test_env_show(self, temp_env_files):\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 83\n      @pytest.fixture\n      def temp_env_files(self, temp_project):\nE       fixture 'temp_project' not found\n>       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, admin_token, anyio_backend, anyio_backend_name, anyio_backend_options, app, async_client, auth_service, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, circuit_breaker, class_mocker, cleanup_test_data, client, cov, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, httpx_mock, load_test_config, mock_httpx_client, mock_llm_service, mock_vector_client, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_metrics, pytestconfig, rate_limiter, record_property, record_testsuite_property, record_xml_attribute, recwarn, registered_tool, sample_search_query, sample_tool_data, sample_user_data, search_service, security_test_data, session_mocker, temp_env_files, test_config, test_data_factory, test_engine, test_environment, test_session, test_settings, test_user_token, test_utils, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, tool_service, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py:83\n___________ ERROR at setup of TestEnvironmentCommands.test_env_diff ____________\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 125\n      def test_env_diff(self, temp_env_files):\nfile /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py, line 83\n      @pytest.fixture\n      def temp_env_files(self, temp_project):\nE       fixture 'temp_project' not found\n>       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, _session_faker, admin_token, anyio_backend, anyio_backend_name, anyio_backend_options, app, async_client, auth_service, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, circuit_breaker, class_mocker, cleanup_test_data, client, cov, doctest_namespace, event_loop, event_loop_policy, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, httpx_mock, load_test_config, mock_httpx_client, mock_llm_service, mock_vector_client, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_metrics, pytestconfig, rate_limiter, record_property, record_testsuite_property, record_xml_attribute, recwarn, registered_tool, sample_search_query, sample_tool_data, sample_user_data, search_service, security_test_data, session_mocker, temp_env_files, test_config, test_data_factory, test_engine, test_environment, test_session, test_settings, test_user_token, test_utils, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, tool_service, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/johannes/PycharmProjects/MetaMCP/tests/unit/test_cli.py:83\n=================================== FAILURES ===================================\n________________ TestUserWorkflows.test_complete_tool_lifecycle ________________\n\nself = <tests.blackbox.integration.test_workflows.TestUserWorkflows object at 0x7a2714832490>\nhttp_client = <httpx.AsyncClient object at 0x7a2714353cb0>\n\n    @pytest.mark.asyncio\n    async def test_complete_tool_lifecycle(self, http_client: AsyncClient):\n        \"\"\"Test complete tool lifecycle: register -> search -> execute -> delete.\"\"\"\n        # Step 1: Login\n        login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\", json=TEST_USER\n        )\n        assert login_response.status_code == 200\n        token_data = login_response.json()\n        access_token = token_data[\"access_token\"]\n    \n        # Set authentication header\n        http_client.headers[\"Authorization\"] = f\"Bearer {access_token}\"\n    \n        # Step 2: Register tool\n        tool_data = TEST_TOOL.copy()\n        tool_data[\"name\"] = f\"workflow_test_tool_{int(time.time())}\"\n    \n        register_response = await http_client.post(\n            f\"{API_BASE_URL}tools\", json=tool_data\n        )\n>       assert register_response.status_code in [200, 201]\nE       assert 307 in [200, 201]\nE        +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/integration/test_workflows.py:39: AssertionError\n________________ TestUserWorkflows.test_authentication_workflow ________________\n\nself = <tests.blackbox.integration.test_workflows.TestUserWorkflows object at 0x7a2714832990>\nhttp_client = <httpx.AsyncClient object at 0x7a2714363890>\n\n    @pytest.mark.asyncio\n    async def test_authentication_workflow(self, http_client: AsyncClient):\n        \"\"\"Test complete authentication workflow: login -> access protected -> logout.\"\"\"\n        # Step 1: Login\n        login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\", json=TEST_USER\n        )\n        assert login_response.status_code == 200\n        token_data = login_response.json()\n        access_token = token_data[\"access_token\"]\n    \n        # Set authentication header\n        http_client.headers[\"Authorization\"] = f\"Bearer {access_token}\"\n    \n        # Step 2: Access protected endpoint\n        me_response = await http_client.get(f\"{API_BASE_URL}auth/me\")\n        assert me_response.status_code == 200\n        me_data = me_response.json()\n>       assert \"user_id\" in me_data\nE       AssertionError: assert 'user_id' in {'display_name': None, 'email': 'admin@example.com', 'first_name': 'Admin', 'id': 'eb16c71e-21ce-4a82-a659-57cc2268c06e', ...}\n\ntests/blackbox/integration/test_workflows.py:108: AssertionError\n____________________ TestUserWorkflows.test_admin_workflow _____________________\n\nself = <tests.blackbox.integration.test_workflows.TestUserWorkflows object at 0x7a271483b100>\nhttp_client = <httpx.AsyncClient object at 0x7a2714279e50>\n\n    @pytest.mark.asyncio\n    async def test_admin_workflow(self, http_client: AsyncClient):\n        \"\"\"Test admin workflow: login as admin -> access admin dashboard.\"\"\"\n        # Step 1: Login as admin\n        admin_login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\",\n            json={\"username\": \"admin\", \"password\": \"admin123\"},\n        )\n        assert admin_login_response.status_code == 200\n        admin_token_data = admin_login_response.json()\n        admin_access_token = admin_token_data[\"access_token\"]\n    \n        # Set authentication header\n        http_client.headers[\"Authorization\"] = f\"Bearer {admin_access_token}\"\n    \n        # Step 2: Access admin dashboard\n        dashboard_response = await http_client.get(f\"{API_BASE_URL}admin/dashboard\")\n>       assert dashboard_response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/integration/test_workflows.py:149: AssertionError\n_______ TestErrorHandlingWorkflows.test_authentication_failure_workflow ________\n\nself = <tests.blackbox.integration.test_workflows.TestErrorHandlingWorkflows object at 0x7a2714832850>\nhttp_client = <httpx.AsyncClient object at 0x7a271391e2c0>\n\n    @pytest.mark.asyncio\n    async def test_authentication_failure_workflow(self, http_client: AsyncClient):\n        \"\"\"Test workflow with authentication failures.\"\"\"\n        # Try to access protected endpoint without authentication\n        protected_endpoints = [\n            f\"{API_BASE_URL}tools\",\n            f\"{API_BASE_URL}admin/dashboard\",\n            f\"{API_BASE_URL}auth/me\",\n        ]\n    \n        for endpoint in protected_endpoints:\n            response = await http_client.get(endpoint)\n>           assert response.status_code in [401, 403]\nE           assert 307 in [401, 403]\nE            +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/integration/test_workflows.py:169: AssertionError\n__________ TestErrorHandlingWorkflows.test_tool_workflow_with_errors ___________\n\nself = <tests.blackbox.integration.test_workflows.TestErrorHandlingWorkflows object at 0x7a2714832ad0>\nhttp_client = <httpx.AsyncClient object at 0x7a2713944770>\n\n    @pytest.mark.asyncio\n    async def test_tool_workflow_with_errors(self, http_client: AsyncClient):\n        \"\"\"Test tool workflow with various error conditions.\"\"\"\n        # Login first\n        login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\", json=TEST_USER\n        )\n        assert login_response.status_code == 200\n        token_data = login_response.json()\n        access_token = token_data[\"access_token\"]\n        http_client.headers[\"Authorization\"] = f\"Bearer {access_token}\"\n    \n        # Try to register tool with missing fields\n        incomplete_tool = {\"name\": \"incomplete_tool\"}\n        register_response = await http_client.post(\n            f\"{API_BASE_URL}tools\", json=incomplete_tool\n        )\n>       assert register_response.status_code in [400, 422]\nE       assert 307 in [400, 422]\nE        +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/integration/test_workflows.py:201: AssertionError\n____________ TestConcurrentWorkflows.test_concurrent_user_sessions _____________\n\nself = <tests.blackbox.integration.test_workflows.TestConcurrentWorkflows object at 0x7a2714832c10>\nhttp_client = <httpx.AsyncClient object at 0x7a271433b770>\n\n    @pytest.mark.asyncio\n    async def test_concurrent_user_sessions(self, http_client: AsyncClient):\n        \"\"\"Test multiple concurrent user sessions.\"\"\"\n    \n        async def user_session(user_id: int):\n            # Login\n            login_response = await http_client.post(\n                f\"{API_BASE_URL}auth/login\", json=TEST_USER\n            )\n            if login_response.status_code != 200:\n                return False\n    \n            token_data = login_response.json()\n            access_token = token_data[\"access_token\"]\n    \n            # Create authenticated client\n            auth_headers = {\"Authorization\": f\"Bearer {access_token}\"}\n    \n            # Access protected endpoint\n            me_response = await http_client.get(\n                f\"{API_BASE_URL}auth/me\", headers=auth_headers\n            )\n            if me_response.status_code != 200:\n                return False\n    \n            # List tools\n            tools_response = await http_client.get(\n                f\"{API_BASE_URL}tools\", headers=auth_headers\n            )\n            if tools_response.status_code not in [200, 404]:\n                return False\n    \n            return True\n    \n        # Run multiple concurrent sessions\n        import asyncio\n    \n        tasks = [user_session(i) for i in range(5)]\n        results = await asyncio.gather(*tasks, return_exceptions=True)\n    \n        # Most sessions should succeed\n        success_count = sum(1 for r in results if r is True)\n>       assert (\n            success_count >= 3\n        ), f\"Only {success_count}/5 concurrent sessions succeeded\"\nE       AssertionError: Only 0/5 concurrent sessions succeeded\nE       assert 0 >= 3\n\ntests/blackbox/integration/test_workflows.py:260: AssertionError\n___________ TestConcurrentWorkflows.test_concurrent_tool_operations ____________\n\nself = <tests.blackbox.integration.test_workflows.TestConcurrentWorkflows object at 0x7a2714832d50>\nhttp_client = <httpx.AsyncClient object at 0x7a2713933bd0>\n\n    @pytest.mark.asyncio\n    async def test_concurrent_tool_operations(self, http_client: AsyncClient):\n        \"\"\"Test concurrent tool operations.\"\"\"\n        # Login first\n        login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\", json=TEST_USER\n        )\n        assert login_response.status_code == 200\n        token_data = login_response.json()\n        access_token = token_data[\"access_token\"]\n        auth_headers = {\"Authorization\": f\"Bearer {access_token}\"}\n    \n        async def tool_operation(operation_id: int):\n            tool_data = {\n                \"name\": f\"concurrent_tool_{operation_id}_{int(pytest.time.time())}\",\n                \"description\": f\"Concurrent test tool {operation_id}\",\n                \"endpoint\": f\"http://localhost:900{operation_id}\",\n                \"category\": \"concurrent\",\n                \"capabilities\": [\"read\"],\n                \"security_level\": 1,\n            }\n    \n            # Register tool\n            register_response = await http_client.post(\n                f\"{API_BASE_URL}tools\", json=tool_data, headers=auth_headers\n            )\n    \n            if register_response.status_code not in [200, 201]:\n                return False\n    \n            # Get tool details\n            get_response = await http_client.get(\n                f\"{API_BASE_URL}tools/{tool_data['name']}\", headers=auth_headers\n            )\n    \n            if get_response.status_code != 200:\n                return False\n    \n            return True\n    \n        # Run concurrent tool operations\n        import asyncio\n    \n        tasks = [tool_operation(i) for i in range(3)]\n        results = await asyncio.gather(*tasks, return_exceptions=True)\n    \n        # Most operations should succeed\n        success_count = sum(1 for r in results if r is True)\n>       assert (\n            success_count >= 2\n        ), f\"Only {success_count}/3 concurrent tool operations succeeded\"\nE       AssertionError: Only 0/3 concurrent tool operations succeeded\nE       assert 0 >= 2\n\ntests/blackbox/integration/test_workflows.py:312: AssertionError\n___________ TestDataConsistencyWorkflows.test_tool_data_consistency ____________\n\nself = <tests.blackbox.integration.test_workflows.TestDataConsistencyWorkflows object at 0x7a2714832e90>\nhttp_client = <httpx.AsyncClient object at 0x7a27139319d0>\n\n    @pytest.mark.asyncio\n    async def test_tool_data_consistency(self, http_client: AsyncClient):\n        \"\"\"Test that tool data remains consistent across operations.\"\"\"\n        # Login\n        login_response = await http_client.post(\n            f\"{API_BASE_URL}auth/login\", json=TEST_USER\n        )\n        assert login_response.status_code == 200\n        token_data = login_response.json()\n        access_token = token_data[\"access_token\"]\n        http_client.headers[\"Authorization\"] = f\"Bearer {access_token}\"\n    \n        # Register tool\n        tool_data = TEST_TOOL.copy()\n>       tool_data[\"name\"] = f\"consistency_test_tool_{int(pytest.time.time())}\"\n                                                         ^^^^^^^^^^^\nE       AttributeError: module 'pytest' has no attribute 'time'\n\ntests/blackbox/integration/test_workflows.py:334: AttributeError\n_________________ TestMCPConnection.test_websocket_connection __________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPConnection object at 0x7a2714833110>\n\n    @pytest.mark.asyncio\n    async def test_websocket_connection(self):\n        \"\"\"Test basic WebSocket connection.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2714204c20>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n__________________ TestMCPConnection.test_mcp_initialization ___________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPConnection object at 0x7a2714833250>\n\n    @pytest.mark.asyncio\n    async def test_mcp_initialization(self):\n        \"\"\"Test MCP protocol initialization.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713921f90>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n__________ TestMCPConnection.test_mcp_initialization_invalid_version ___________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPConnection object at 0x7a271483b230>\n\n    @pytest.mark.asyncio\n    async def test_mcp_initialization_invalid_version(self):\n        \"\"\"Test MCP initialization with invalid protocol version.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713921d10>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n___________ TestMCPConnection.test_mcp_initialization_missing_params ___________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPConnection object at 0x7a271483b360>\n\n    @pytest.mark.asyncio\n    async def test_mcp_initialization_missing_params(self):\n        \"\"\"Test MCP initialization with missing parameters.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713947100>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n_______________________ TestMCPTools.test_mcp_list_tools _______________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPTools object at 0x7a2714833390>\n\n    @pytest.mark.asyncio\n    async def test_mcp_list_tools(self):\n        \"\"\"Test MCP tools/list method.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713946c40>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n_______________________ TestMCPTools.test_mcp_call_tool ________________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPTools object at 0x7a27148334d0>\n\n    @pytest.mark.asyncio\n    async def test_mcp_call_tool(self):\n        \"\"\"Test MCP tools/call method.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2714253bf0>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n_____________________ TestMCPTools.test_mcp_invalid_method _____________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPTools object at 0x7a271483b490>\n\n    @pytest.mark.asyncio\n    async def test_mcp_invalid_method(self):\n        \"\"\"Test MCP with invalid method.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713933f00>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n_________________ TestMCPErrorHandling.test_mcp_malformed_json _________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPErrorHandling object at 0x7a2714833610>\n\n    @pytest.mark.asyncio\n    async def test_mcp_malformed_json(self):\n        \"\"\"Test MCP with malformed JSON.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:261: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2713932250>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n________________ TestMCPErrorHandling.test_mcp_missing_jsonrpc _________________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPErrorHandling object at 0x7a2714833750>\n\n    @pytest.mark.asyncio\n    async def test_mcp_missing_jsonrpc(self):\n        \"\"\"Test MCP message without jsonrpc field.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:277: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2714297a50>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n______________ TestMCPErrorHandling.test_mcp_concurrent_requests _______________\n\nself = <tests.blackbox.mcp_api.test_protocol.TestMCPErrorHandling object at 0x7a271483b5c0>\n\n    @pytest.mark.asyncio\n    async def test_mcp_concurrent_requests(self):\n        \"\"\"Test MCP with concurrent requests.\"\"\"\n>       async with websockets.connect(WS_URL, timeout=30.0) as websocket:\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/blackbox/mcp_api/test_protocol.py:293: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:587: in __aenter__\n    return await self\n           ^^^^^^^^^^\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:541: in __await_impl__\n    self.connection = await self.create_connection()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.asyncio.client.connect object at 0x7a2714297350>\n\n    async def create_connection(self) -> ClientConnection:\n        \"\"\"Create TCP or Unix connection.\"\"\"\n        loop = asyncio.get_running_loop()\n        kwargs = self.connection_kwargs.copy()\n    \n        ws_uri = parse_uri(self.uri)\n    \n        proxy = self.proxy\n        if kwargs.get(\"unix\", False):\n            proxy = None\n        if kwargs.get(\"sock\") is not None:\n            proxy = None\n        if proxy is True:\n            proxy = get_proxy(ws_uri)\n    \n        def factory() -> ClientConnection:\n            return self.protocol_factory(ws_uri)\n    \n        if ws_uri.secure:\n            kwargs.setdefault(\"ssl\", True)\n            kwargs.setdefault(\"server_hostname\", ws_uri.host)\n            if kwargs.get(\"ssl\") is None:\n                raise ValueError(\"ssl=None is incompatible with a wss:// URI\")\n        else:\n            if kwargs.get(\"ssl\") is not None:\n                raise ValueError(\"ssl argument is incompatible with a ws:// URI\")\n    \n        if kwargs.pop(\"unix\", False):\n            _, connection = await loop.create_unix_connection(factory, **kwargs)\n        elif proxy is not None:\n            proxy_parsed = parse_proxy(proxy)\n            if proxy_parsed.scheme[:5] == \"socks\":\n                # Connect to the server through the proxy.\n                sock = await connect_socks_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    local_addr=kwargs.pop(\"local_addr\", None),\n                )\n                # Initialize WebSocket connection via the proxy.\n                _, connection = await loop.create_connection(\n                    factory,\n                    sock=sock,\n                    **kwargs,\n                )\n            elif proxy_parsed.scheme[:4] == \"http\":\n                # Split keyword arguments between the proxy and the server.\n                all_kwargs, proxy_kwargs, kwargs = kwargs, {}, {}\n                for key, value in all_kwargs.items():\n                    if key.startswith(\"ssl\") or key == \"server_hostname\":\n                        kwargs[key] = value\n                    elif key.startswith(\"proxy_\"):\n                        proxy_kwargs[key[6:]] = value\n                    else:\n                        proxy_kwargs[key] = value\n                # Validate the proxy_ssl argument.\n                if proxy_parsed.scheme == \"https\":\n                    proxy_kwargs.setdefault(\"ssl\", True)\n                    if proxy_kwargs.get(\"ssl\") is None:\n                        raise ValueError(\n                            \"proxy_ssl=None is incompatible with an https:// proxy\"\n                        )\n                else:\n                    if proxy_kwargs.get(\"ssl\") is not None:\n                        raise ValueError(\n                            \"proxy_ssl argument is incompatible with an http:// proxy\"\n                        )\n                # Connect to the server through the proxy.\n                transport = await connect_http_proxy(\n                    proxy_parsed,\n                    ws_uri,\n                    user_agent_header=self.user_agent_header,\n                    **proxy_kwargs,\n                )\n                # Initialize WebSocket connection via the proxy.\n                connection = factory()\n                transport.set_protocol(connection)\n                ssl = kwargs.pop(\"ssl\", None)\n                if ssl is True:\n                    ssl = ssl_module.create_default_context()\n                if ssl is not None:\n                    new_transport = await loop.start_tls(\n                        transport, connection, ssl, **kwargs\n                    )\n                    assert new_transport is not None  # help mypy\n                    transport = new_transport\n                connection.connection_made(transport)\n            else:\n                raise AssertionError(\"unsupported proxy\")\n        else:\n            # Connect to the server directly.\n            if kwargs.get(\"sock\") is None:\n                kwargs.setdefault(\"host\", ws_uri.host)\n                kwargs.setdefault(\"port\", ws_uri.port)\n            # Initialize WebSocket connection.\n>           _, connection = await loop.create_connection(factory, **kwargs)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'timeout'\n\n.venv/lib/python3.13/site-packages/websockets/asyncio/client.py:467: TypeError\n___________ TestPerformanceEndpoints.test_concurrent_health_requests ___________\n\nself = <tests.blackbox.performance.test_load.TestPerformanceEndpoints object at 0x7a27148339d0>\nhttp_client = <httpx.AsyncClient object at 0x7a2714297950>\n\n    @pytest.mark.asyncio\n    async def test_concurrent_health_requests(self, http_client: AsyncClient):\n        \"\"\"Test multiple concurrent health requests.\"\"\"\n    \n        async def make_request():\n            return await http_client.get(f\"{API_BASE_URL}health/\")\n    \n        # Make 10 concurrent requests\n        tasks = [make_request() for _ in range(10)]\n        responses = await asyncio.gather(*tasks)\n    \n        for response in responses:\n            assert response.status_code == 200\n            data = response.json()\n>           assert \"healthy\" in data\nE           AssertionError: assert 'healthy' in {'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'healthy', 'version': '1.0.0'}\n\ntests/blackbox/performance/test_load.py:44: AssertionError\n_________ TestPerformanceEndpoints.test_tool_registration_performance __________\n\nself = <tests.blackbox.performance.test_load.TestPerformanceEndpoints object at 0x7a271483aea0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a271423fa70>\n\n    @pytest.mark.asyncio\n    async def test_tool_registration_performance(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test tool registration performance.\"\"\"\n        tool_data = {\n            \"name\": f\"perf_test_tool_{int(time.time())}\",\n            \"description\": \"Performance test tool\",\n            \"endpoint\": \"http://localhost:9000\",\n            \"category\": \"performance\",\n            \"capabilities\": [\"read\"],\n            \"security_level\": 1,\n        }\n    \n        start_time = time.time()\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}tools/\", json=tool_data\n        )\n        end_time = time.time()\n    \n>       assert response.status_code in [200, 201]\nE       assert 403 in [200, 201]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/performance/test_load.py:66: AssertionError\n___________ TestPerformanceEndpoints.test_concurrent_tool_operations ___________\n\nself = <tests.blackbox.performance.test_load.TestPerformanceEndpoints object at 0x7a271483a9e0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a27138f7980>\n\n    @pytest.mark.asyncio\n    async def test_concurrent_tool_operations(self, authenticated_client: AsyncClient):\n        \"\"\"Test concurrent tool registration and retrieval.\"\"\"\n    \n        async def register_tool(i: int):\n            tool_data = {\n                \"name\": f\"concurrent_tool_{i}_{int(time.time())}\",\n                \"description\": f\"Concurrent test tool {i}\",\n                \"endpoint\": f\"http://localhost:900{i}\",\n                \"category\": \"concurrent\",\n                \"capabilities\": [\"read\"],\n                \"security_level\": 1,\n            }\n            return await authenticated_client.post(\n                f\"{API_BASE_URL}tools/\", json=tool_data\n            )\n    \n        # Register 5 tools concurrently\n        tasks = [register_tool(i) for i in range(5)]\n        responses = await asyncio.gather(*tasks)\n    \n        for response in responses:\n>           assert response.status_code in [200, 201]\nE           assert 403 in [200, 201]\nE            +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/performance/test_load.py:92: AssertionError\n_______________ TestPerformanceEndpoints.test_search_performance _______________\n\nself = <tests.blackbox.performance.test_load.TestPerformanceEndpoints object at 0x7a27148c2210>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713942c10>\n\n    @pytest.mark.asyncio\n    async def test_search_performance(self, authenticated_client: AsyncClient):\n        \"\"\"Test search endpoint performance.\"\"\"\n        start_time = time.time()\n        response = await authenticated_client.get(\n            f\"{API_BASE_URL}tools/search/?q=test&max_results=10\"\n        )\n        end_time = time.time()\n    \n        # Search might not be implemented yet, so accept 404\n>       assert response.status_code in [200, 404]\nE       assert 307 in [200, 404]\nE        +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/performance/test_load.py:104: AssertionError\n_____________________ TestLoadTesting.test_mixed_workload ______________________\n\nself = <tests.blackbox.performance.test_load.TestLoadTesting object at 0x7a2714833c50>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2712845710>\n\n    @pytest.mark.asyncio\n    async def test_mixed_workload(self, authenticated_client: AsyncClient):\n        \"\"\"Test mixed workload of different operations.\"\"\"\n    \n        async def health_check():\n            return await authenticated_client.get(f\"{API_BASE_URL}health/\")\n    \n        async def list_tools():\n            return await authenticated_client.get(f\"{API_BASE_URL}tools/\")\n    \n        async def search_tools():\n            return await authenticated_client.get(f\"{API_BASE_URL}tools/search/?q=test\")\n    \n        # Mix of different operations\n        tasks = []\n        for i in range(10):\n            tasks.append(health_check())\n            tasks.append(list_tools())\n            tasks.append(search_tools())\n    \n        responses = await asyncio.gather(*tasks, return_exceptions=True)\n    \n        # Check that most requests succeeded (accept 404 for search endpoint)\n        success_count = sum(\n            1\n            for r in responses\n            if not isinstance(r, Exception) and r.status_code in [200, 404]\n        )\n>       assert (\n            success_count >= len(responses) * 0.6\n        ), f\"Too many failures: {success_count}/{len(responses)}\"\nE       AssertionError: Too many failures: 10/30\nE       assert 10 >= (30 * 0.6)\nE        +  where 30 = len([<Response [200 OK]>, <Response [403 Forbidden]>, <Response [307 Temporary Redirect]>, <Response [200 OK]>, <Response [403 Forbidden]>, <Response [307 Temporary Redirect]>, ...])\n\ntests/blackbox/performance/test_load.py:155: AssertionError\n________________ TestStressTesting.test_large_payload_handling _________________\n\nself = <tests.blackbox.performance.test_load.TestStressTesting object at 0x7a2714833d90>\nauthenticated_client = <httpx.AsyncClient object at 0x7a27139cc350>\n\n    @pytest.mark.asyncio\n    async def test_large_payload_handling(self, authenticated_client: AsyncClient):\n        \"\"\"Test handling of large payloads.\"\"\"\n        large_tool = {\n            \"name\": \"large_test_tool\",\n            \"description\": \"A\" * 1000,  # Large description\n            \"endpoint\": \"http://localhost:9000\",\n            \"category\": \"stress\",\n            \"capabilities\": [\"read\", \"write\", \"execute\"]\n            * 100,  # Large capabilities list\n            \"security_level\": 1,\n            \"metadata\": {\"large_data\": \"x\" * 5000},  # Large metadata\n        }\n    \n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}tools/\", json=large_tool\n        )\n    \n        # Should either succeed or fail gracefully\n>       assert response.status_code in [200, 201, 400, 413]\nE       assert 403 in [200, 201, 400, 413]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/performance/test_load.py:182: AssertionError\n_________________ TestAdminEndpoints.test_get_admin_dashboard __________________\n\nself = <tests.blackbox.rest_api.test_admin.TestAdminEndpoints object at 0x7a2714700050>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2712831610>\n\n    @pytest.mark.asyncio\n    async def test_get_admin_dashboard(self, authenticated_client: AsyncClient):\n        \"\"\"Test getting the admin dashboard data.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}admin/dashboard\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_admin.py:20: AssertionError\n___________ TestAdminEndpoints.test_get_admin_dashboard_unauthorized ___________\n\nself = <tests.blackbox.rest_api.test_admin.TestAdminEndpoints object at 0x7a2714700190>\nhttp_client = <httpx.AsyncClient object at 0x7a2712831550>\n\n    @pytest.mark.asyncio\n    async def test_get_admin_dashboard_unauthorized(self, http_client: AsyncClient):\n        \"\"\"Test getting the admin dashboard without authentication (should fail).\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}admin/dashboard\")\n>       assert response.status_code in [401, 403]\nE       assert 404 in [401, 403]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_admin.py:29: AssertionError\n_____________________ TestAuthentication.test_me_endpoint ______________________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthentication object at 0x7a271483b950>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2712831850>\n\n    @pytest.mark.asyncio\n    async def test_me_endpoint(self, authenticated_client: AsyncClient):\n        \"\"\"Test /auth/me endpoint with valid token.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}auth/me\")\n>       assert response.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:53: AssertionError\n_______________ TestAuthentication.test_me_endpoint_unauthorized _______________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthentication object at 0x7a27148e2210>\nhttp_client = <httpx.AsyncClient object at 0x7a2713907650>\n\n    @pytest.mark.asyncio\n    async def test_me_endpoint_unauthorized(self, http_client: AsyncClient):\n        \"\"\"Test /auth/me endpoint without authentication.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}auth/me\")\n>       assert response.status_code == 401\nE       assert 403 == 401\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:65: AssertionError\n_________________ TestAuthentication.test_permissions_endpoint _________________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthentication object at 0x7a271487dd00>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713905c10>\n\n    @pytest.mark.asyncio\n    async def test_permissions_endpoint(self, authenticated_client: AsyncClient):\n        \"\"\"Test /auth/permissions endpoint.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}auth/permissions\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:73: AssertionError\n____________________ TestAuthentication.test_refresh_token _____________________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthentication object at 0x7a271483f850>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906690>\n\n    @pytest.mark.asyncio\n    async def test_refresh_token(self, authenticated_client: AsyncClient):\n        \"\"\"Test token refresh endpoint.\"\"\"\n        response = await authenticated_client.post(f\"{API_BASE_URL}auth/refresh\")\n>       assert response.status_code == 200\nE       assert 422 == 200\nE        +  where 422 = <Response [422 Unprocessable Entity]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:92: AssertionError\n_____________ TestAuthorization.test_protected_endpoint_with_token _____________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthorization object at 0x7a2714700690>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713905610>\n\n    @pytest.mark.asyncio\n    async def test_protected_endpoint_with_token(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test accessing protected endpoint with valid token.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}tools/\")\n>       assert response.status_code in [200, 404]\nE       assert 403 in [200, 404]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:109: AssertionError\n___________ TestAuthorization.test_protected_endpoint_without_token ____________\n\nself = <tests.blackbox.rest_api.test_auth.TestAuthorization object at 0x7a27147007d0>\nhttp_client = <httpx.AsyncClient object at 0x7a2713906510>\n\n    @pytest.mark.asyncio\n    async def test_protected_endpoint_without_token(self, http_client: AsyncClient):\n        \"\"\"Test accessing protected endpoint without token.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}tools/\")\n>       assert response.status_code == 401\nE       assert 403 == 401\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_auth.py:115: AssertionError\n_______________ TestCompositionEndpoints.test_register_workflow ________________\n\nself = <tests.blackbox.rest_api.test_composition.TestCompositionEndpoints object at 0x7a2714700550>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906810>\n\n    @pytest.mark.asyncio\n    async def test_register_workflow(self, authenticated_client: AsyncClient):\n        \"\"\"Test registering a new workflow.\"\"\"\n        request_data = {\"workflow\": WORKFLOW}\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}composition/workflows\", json=request_data\n        )\n>       assert response.status_code in [200, 201]\nE       assert 404 in [200, 201]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_composition.py:32: AssertionError\n_________________ TestCompositionEndpoints.test_list_workflows _________________\n\nself = <tests.blackbox.rest_api.test_composition.TestCompositionEndpoints object at 0x7a2714700a50>\nauthenticated_client = <httpx.AsyncClient object at 0x7a27139071d0>\n\n    @pytest.mark.asyncio\n    async def test_list_workflows(self, authenticated_client: AsyncClient):\n        \"\"\"Test listing all registered workflows.\"\"\"\n        response = await authenticated_client.get(\n            f\"{API_BASE_URL}composition/workflows\"\n        )\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_composition.py:44: AssertionError\n_________ TestCompositionEndpoints.test_register_workflow_unauthorized _________\n\nself = <tests.blackbox.rest_api.test_composition.TestCompositionEndpoints object at 0x7a271483bbb0>\nhttp_client = <httpx.AsyncClient object at 0x7a2713907e90>\n\n    @pytest.mark.asyncio\n    async def test_register_workflow_unauthorized(self, http_client: AsyncClient):\n        \"\"\"Test registering a workflow without authentication (should fail).\"\"\"\n        request_data = {\"workflow\": WORKFLOW}\n        response = await http_client.post(\n            f\"{API_BASE_URL}composition/workflows\", json=request_data\n        )\n>       assert response.status_code in [401, 403]\nE       assert 404 in [401, 403]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_composition.py:57: AssertionError\n____________________ TestHealthEndpoints.test_health_check _____________________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a2714700910>\nhttp_client = <httpx.AsyncClient object at 0x7a2713907590>\n\n    @pytest.mark.asyncio\n    async def test_health_check(self, http_client: AsyncClient):\n        \"\"\"Test basic health check endpoint (should return 'healthy': true).\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/\")\n        assert response.status_code == 200\n        data = response.json()\n>       assert \"healthy\" in data\nE       AssertionError: assert 'healthy' in {'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'healthy', 'version': '1.0.0'}\n\ntests/blackbox/rest_api/test_health.py:22: AssertionError\n___________________ TestHealthEndpoints.test_detailed_health ___________________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a2714700b90>\nhttp_client = <httpx.AsyncClient object at 0x7a2713904e90>\n\n    @pytest.mark.asyncio\n    async def test_detailed_health(self, http_client: AsyncClient):\n        \"\"\"Test detailed health status endpoint (should return health details).\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/detailed\")\n        assert response.status_code == 200\n        data = response.json()\n>       assert \"overall_healthy\" in data\nE       AssertionError: assert 'overall_healthy' in {'components': {'cache': {'details': {'connected_clients': 2, 'keyspace_hits': 0, 'keyspace_misses': 0, 'status': 'con..., 'status': 'unhealthy'}}, 'environment': 'development', 'service': 'ai-assistant-platform', 'status': 'degraded', ...}\n\ntests/blackbox/rest_api/test_health.py:34: AssertionError\n____________________ TestHealthEndpoints.test_health_ready _____________________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a271483bce0>\nhttp_client = <httpx.AsyncClient object at 0x7a2713905910>\n\n    @pytest.mark.asyncio\n    async def test_health_ready(self, http_client: AsyncClient):\n        \"\"\"Test readiness probe endpoint (should return 'ready': true).\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/ready\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_health.py:44: AssertionError\n_____________________ TestHealthEndpoints.test_health_live _____________________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a271483be10>\nhttp_client = <httpx.AsyncClient object at 0x7a2713907290>\n\n    @pytest.mark.asyncio\n    async def test_health_live(self, http_client: AsyncClient):\n        \"\"\"Test liveness probe endpoint (should return 'alive': true).\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/live\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_health.py:53: AssertionError\n__________________ TestHealthEndpoints.test_health_components __________________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a27148e32f0>\nhttp_client = <httpx.AsyncClient object at 0x7a2713907dd0>\n\n    @pytest.mark.asyncio\n    async def test_health_components(self, http_client: AsyncClient):\n        \"\"\"Test that health components are properly structured.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/detailed\")\n        assert response.status_code == 200\n        data = response.json()\n        components = data[\"components\"]\n>       assert isinstance(components, list)\nE       AssertionError: assert False\nE        +  where False = isinstance({'cache': {'details': {'connected_clients': 2, 'keyspace_hits': 0, 'keyspace_misses': 0, 'status': 'connected', ...}, ...: {'error': 'Weaviate client not initialized. Call init_weaviate() first.', 'status': 'error'}, 'status': 'unhealthy'}}, list)\n\ntests/blackbox/rest_api/test_health.py:65: AssertionError\n_______________ TestHealthEndpoints.test_health_uptime_increases _______________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a271487e580>\nhttp_client = <httpx.AsyncClient object at 0x7a27139068d0>\n\n    @pytest.mark.asyncio\n    async def test_health_uptime_increases(self, http_client: AsyncClient):\n        \"\"\"Test that uptime increases over time.\"\"\"\n        response1 = await http_client.get(f\"{API_BASE_URL}health/detailed\")\n        assert response1.status_code == 200\n        data1 = response1.json()\n>       uptime1 = data1[\"uptime\"]\n                  ^^^^^^^^^^^^^^^\nE       KeyError: 'uptime'\n\ntests/blackbox/rest_api/test_health.py:80: KeyError\n_______________ TestHealthEndpoints.test_health_timestamp_format _______________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a271483fa50>\nhttp_client = <httpx.AsyncClient object at 0x7a27139065d0>\n\n    @pytest.mark.asyncio\n    async def test_health_timestamp_format(self, http_client: AsyncClient):\n        \"\"\"Test that timestamps are in correct ISO 8601 format.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/\")\n        assert response.status_code == 200\n        data = response.json()\n>       timestamp = data[\"timestamp\"]\n                    ^^^^^^^^^^^^^^^^^\nE       KeyError: 'timestamp'\n\ntests/blackbox/rest_api/test_health.py:107: KeyError\n_____________ TestHealthEndpoints.test_health_endpoints_accessible _____________\n\nself = <tests.blackbox.rest_api.test_health.TestHealthEndpoints object at 0x7a271483fb50>\nhttp_client = <httpx.AsyncClient object at 0x7a2713905a90>\n\n    @pytest.mark.asyncio\n    async def test_health_endpoints_accessible(self, http_client: AsyncClient):\n        \"\"\"Test that all health endpoints are accessible without authentication.\"\"\"\n        endpoints = [\"health/\", \"health/detailed\", \"health/ready\", \"health/live\"]\n        for endpoint in endpoints:\n            response = await http_client.get(f\"{API_BASE_URL}{endpoint}\")\n>           assert (\n                response.status_code == 200\n            ), f\"Endpoint {endpoint} should be accessible\"\nE           AssertionError: Endpoint health/ready should be accessible\nE           assert 404 == 200\nE            +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_health.py:123: AssertionError\n___________________ TestOAuthEndpoints.test_get_oauth_config ___________________\n\nself = <tests.blackbox.rest_api.test_oauth.TestOAuthEndpoints object at 0x7a2714700cd0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713907950>\n\n    @pytest.mark.asyncio\n    async def test_get_oauth_config(self, authenticated_client: AsyncClient):\n        \"\"\"Test getting OAuth configuration.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}oauth/config\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_oauth.py:20: AssertionError\n____________ TestOAuthEndpoints.test_oauth_callback_missing_params _____________\n\nself = <tests.blackbox.rest_api.test_oauth.TestOAuthEndpoints object at 0x7a2714724050>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713907890>\n\n    @pytest.mark.asyncio\n    async def test_oauth_callback_missing_params(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test OAuth callback with missing parameters (should fail).\"\"\"\n        response = await authenticated_client.get(\n            f\"{API_BASE_URL}oauth/callback/google\"\n        )\n>       assert response.status_code in [400, 422]\nE       assert 404 in [400, 422]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_oauth.py:45: AssertionError\n________________ TestProxyEndpoints.test_register_proxy_server _________________\n\nself = <tests.blackbox.rest_api.test_proxy.TestProxyEndpoints object at 0x7a2714701090>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714277c50>\n\n    @pytest.mark.asyncio\n    async def test_register_proxy_server(self, authenticated_client: AsyncClient):\n        \"\"\"Test registering a new proxy server.\"\"\"\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}proxy/servers\", json=PROXY_SERVER\n        )\n>       assert response.status_code in [200, 201]\nE       assert 404 in [200, 201]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_proxy.py:35: AssertionError\n__________________ TestProxyEndpoints.test_list_proxy_servers __________________\n\nself = <tests.blackbox.rest_api.test_proxy.TestProxyEndpoints object at 0x7a27147011d0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714277dd0>\n\n    @pytest.mark.asyncio\n    async def test_list_proxy_servers(self, authenticated_client: AsyncClient):\n        \"\"\"Test listing all registered proxy servers.\"\"\"\n        response = await authenticated_client.get(f\"{API_BASE_URL}proxy/servers\")\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_proxy.py:44: AssertionError\n________________ TestProxyEndpoints.test_discover_proxy_servers ________________\n\nself = <tests.blackbox.rest_api.test_proxy.TestProxyEndpoints object at 0x7a27147242b0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906750>\n\n    @pytest.mark.asyncio\n    async def test_discover_proxy_servers(self, authenticated_client: AsyncClient):\n        \"\"\"Test discovering proxy servers.\"\"\"\n        discovery_config = {\n            \"network_discovery\": True,\n            \"service_discovery\": False,\n            \"file_discovery\": False,\n            \"ports\": [9000],\n            \"base_urls\": [\"http://localhost\"],\n            \"config_paths\": [],\n            \"service_endpoints\": [],\n            \"timeout\": 2,\n            \"max_concurrent\": 2,\n        }\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}proxy/discovery\", json=discovery_config\n        )\n>       assert response.status_code in [200, 201]\nE       assert 404 in [200, 201]\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_proxy.py:75: AssertionError\n_____________ TestProxyEndpoints.test_get_discovered_proxy_servers _____________\n\nself = <tests.blackbox.rest_api.test_proxy.TestProxyEndpoints object at 0x7a27148c3530>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713906150>\n\n    @pytest.mark.asyncio\n    async def test_get_discovered_proxy_servers(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test getting all discovered proxy servers.\"\"\"\n        response = await authenticated_client.get(\n            f\"{API_BASE_URL}proxy/discovery/servers\"\n        )\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/blackbox/rest_api/test_proxy.py:89: AssertionError\n_______________ TestToolRegistration.test_register_tool_success ________________\n\nself = <tests.blackbox.rest_api.test_tools.TestToolRegistration object at 0x7a2714701310>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714277c50>\n\n    @pytest.mark.asyncio\n    async def test_register_tool_success(self, authenticated_client: AsyncClient):\n        \"\"\"Test successful tool registration.\"\"\"\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}tools/\", json=TEST_TOOL\n        )\n>       assert response.status_code in [200, 201]\nE       assert 403 in [200, 201]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_tools.py:25: AssertionError\n______________ TestToolRegistration.test_register_tool_duplicate _______________\n\nself = <tests.blackbox.rest_api.test_tools.TestToolRegistration object at 0x7a2714701590>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713907950>\n\n    @pytest.mark.asyncio\n    async def test_register_tool_duplicate(self, authenticated_client: AsyncClient):\n        \"\"\"Test registering duplicate tool.\"\"\"\n        # Register tool first time\n        response1 = await authenticated_client.post(\n            f\"{API_BASE_URL}tools/\", json=TEST_TOOL\n        )\n>       assert response1.status_code in [200, 201]\nE       assert 403 in [200, 201]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_tools.py:38: AssertionError\n____________ TestToolRegistration.test_register_tool_missing_fields ____________\n\nself = <tests.blackbox.rest_api.test_tools.TestToolRegistration object at 0x7a27147243e0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713905e50>\n\n    @pytest.mark.asyncio\n    async def test_register_tool_missing_fields(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test registering tool with missing required fields.\"\"\"\n        incomplete_tool = {\n            \"name\": \"incomplete_tool\"\n            # Missing description and endpoint\n        }\n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}tools/\", json=incomplete_tool\n        )\n>       assert response.status_code in [400, 422]\nE       assert 403 in [400, 422]\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_tools.py:59: AssertionError\n_____________ TestToolRegistration.test_register_tool_unauthorized _____________\n\nself = <tests.blackbox.rest_api.test_tools.TestToolRegistration object at 0x7a2714724510>\nhttp_client = <httpx.AsyncClient object at 0x7a2714277f50>\n\n    @pytest.mark.asyncio\n    async def test_register_tool_unauthorized(self, http_client: AsyncClient):\n        \"\"\"Test registering tool without authentication.\"\"\"\n        response = await http_client.post(f\"{API_BASE_URL}tools/\", json=TEST_TOOL)\n>       assert response.status_code == 401\nE       assert 403 == 401\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_tools.py:65: AssertionError\n__________________ TestToolRetrieval.test_get_tool_not_found ___________________\n\nself = <tests.blackbox.rest_api.test_tools.TestToolRetrieval object at 0x7a2714701810>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2714277c50>\n\n    @pytest.mark.asyncio\n    async def test_get_tool_not_found(self, authenticated_client: AsyncClient):\n        \"\"\"Test getting non-existent tool.\"\"\"\n        response = await authenticated_client.get(\n            f\"{API_BASE_URL}tools/nonexistent_tool\"\n        )\n>       assert response.status_code == 404\nE       assert 403 == 404\nE        +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/rest_api/test_tools.py:94: AssertionError\n_________ TestAuthorizationSecurity.test_unauthorized_access_attempts __________\n\nself = <test_security.TestAuthorizationSecurity object at 0x7a2714702350>\nhttp_client = <httpx.AsyncClient object at 0x7a27139068d0>\n\n    @pytest.mark.asyncio\n    async def test_unauthorized_access_attempts(self, http_client: AsyncClient):\n        \"\"\"Test unauthorized access to protected endpoints.\"\"\"\n        protected_endpoints = [\n            f\"{API_BASE_URL}tools\",\n            f\"{API_BASE_URL}admin/dashboard\",\n            f\"{API_BASE_URL}auth/me\",\n            f\"{API_BASE_URL}proxy/servers\",\n        ]\n    \n        for endpoint in protected_endpoints:\n            response = await http_client.get(endpoint)\n>           assert response.status_code in [401, 403]\nE           assert 307 in [401, 403]\nE            +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/security/test_security.py:78: AssertionError\n____________ TestAuthorizationSecurity.test_invalid_token_handling _____________\n\nself = <test_security.TestAuthorizationSecurity object at 0x7a2714702490>\nhttp_client = <httpx.AsyncClient object at 0x7a2713904e90>\n\n    @pytest.mark.asyncio\n    async def test_invalid_token_handling(self, http_client: AsyncClient):\n        \"\"\"Test handling of invalid authentication tokens.\"\"\"\n        http_client.headers[\"Authorization\"] = \"Bearer invalid_token\"\n    \n        protected_endpoints = [\n            f\"{API_BASE_URL}tools\",\n            f\"{API_BASE_URL}auth/me\",\n        ]\n    \n        for endpoint in protected_endpoints:\n            response = await http_client.get(endpoint)\n>           assert response.status_code in [401, 403]\nE           assert 307 in [401, 403]\nE            +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/security/test_security.py:92: AssertionError\n_______ TestInputValidationSecurity.test_xss_injection_tool_registration _______\n\nself = <test_security.TestInputValidationSecurity object at 0x7a27147025d0>\nauthenticated_client = <httpx.AsyncClient object at 0x7a27139062d0>\n\n    @pytest.mark.asyncio\n    async def test_xss_injection_tool_registration(\n        self, authenticated_client: AsyncClient\n    ):\n        \"\"\"Test XSS injection resistance in tool registration.\"\"\"\n        xss_payloads = [\n            {\n                \"name\": \"<script>alert('xss')</script>\",\n                \"description\": \"XSS test\",\n                \"endpoint\": \"http://localhost:9000\",\n            },\n            {\n                \"name\": \"test_tool\",\n                \"description\": \"<img src=x onerror=alert('xss')>\",\n                \"endpoint\": \"http://localhost:9000\",\n            },\n            {\n                \"name\": \"test_tool\",\n                \"description\": \"Normal description\",\n                \"endpoint\": \"javascript:alert('xss')\",\n            },\n        ]\n    \n        for payload in xss_payloads:\n            response = await authenticated_client.post(\n                f\"{API_BASE_URL}tools\", json=payload\n            )\n            # Should reject or sanitize XSS payloads\n>           assert response.status_code in [400, 422, 201]\nE           assert 307 in [400, 422, 201]\nE            +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/security/test_security.py:146: AssertionError\n___________ TestInputValidationSecurity.test_path_traversal_attempts ___________\n\nself = <test_security.TestInputValidationSecurity object at 0x7a2714702710>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2713905fd0>\n\n    @pytest.mark.asyncio\n    async def test_path_traversal_attempts(self, authenticated_client: AsyncClient):\n        \"\"\"Test path traversal attack resistance.\"\"\"\n        traversal_payloads = [\n            \"../../../etc/passwd\",\n            \"..\\\\..\\\\..\\\\windows\\\\system32\\\\config\\\\sam\",\n            \"%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd\",\n        ]\n    \n        for payload in traversal_payloads:\n            response = await authenticated_client.get(f\"{API_BASE_URL}tools/{payload}\")\n            # Should not allow path traversal\n>           assert response.status_code in [400, 404, 422]\nE           assert 403 in [400, 404, 422]\nE            +  where 403 = <Response [403 Forbidden]>.status_code\n\ntests/blackbox/security/test_security.py:160: AssertionError\n______________ TestSecurityHeaders.test_security_headers_present _______________\n\nself = <test_security.TestSecurityHeaders object at 0x7a2714702850>\nhttp_client = <httpx.AsyncClient object at 0x7a27139056d0>\n\n    @pytest.mark.asyncio\n    async def test_security_headers_present(self, http_client: AsyncClient):\n        \"\"\"Test presence of important security headers.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/\")\n    \n        # Check for security headers\n        headers = response.headers\n        security_headers = [\n            \"X-Content-Type-Options\",\n            \"X-Frame-Options\",\n            \"X-XSS-Protection\",\n            \"Strict-Transport-Security\",\n            \"Content-Security-Policy\",\n        ]\n    \n        # At least some security headers should be present\n        present_headers = [h for h in security_headers if h in headers]\n>       assert (\n            len(present_headers) > 0\n        ), f\"No security headers found. Present: {list(headers.keys())}\"\nE       AssertionError: No security headers found. Present: ['date', 'server', 'content-length', 'content-type', 'content-language']\nE       assert 0 > 0\nE        +  where 0 = len([])\n\ntests/blackbox/security/test_security.py:201: AssertionError\n____________________ TestSecurityHeaders.test_cors_headers _____________________\n\nself = <test_security.TestSecurityHeaders object at 0x7a2714702990>\nhttp_client = <httpx.AsyncClient object at 0x7a2713906a50>\n\n    @pytest.mark.asyncio\n    async def test_cors_headers(self, http_client: AsyncClient):\n        \"\"\"Test CORS header configuration.\"\"\"\n        response = await http_client.get(f\"{API_BASE_URL}health/\")\n        headers = response.headers\n    \n        # Check CORS headers\n        cors_headers = [\"Access-Control-Allow-Origin\", \"Access-Control-Allow-Methods\"]\n        present_cors = [h for h in cors_headers if h in headers]\n>       assert len(present_cors) > 0, \"No CORS headers found\"\nE       AssertionError: No CORS headers found\nE       assert 0 > 0\nE        +  where 0 = len([])\n\ntests/blackbox/security/test_security.py:214: AssertionError\n__________ TestDataValidationSecurity.test_oversized_payload_handling __________\n\nself = <test_security.TestDataValidationSecurity object at 0x7a2714702d50>\nauthenticated_client = <httpx.AsyncClient object at 0x7a27128316d0>\n\n    @pytest.mark.asyncio\n    async def test_oversized_payload_handling(self, authenticated_client: AsyncClient):\n        \"\"\"Test handling of oversized payloads.\"\"\"\n        # Create an oversized tool definition\n        oversized_tool = {\n            \"name\": \"oversized_tool\",\n            \"description\": \"A\" * 10000,  # Very large description\n            \"endpoint\": \"http://localhost:9000\",\n            \"category\": \"test\",\n            \"capabilities\": [\"read\"],\n            \"security_level\": 1,\n            \"metadata\": {\"large_data\": \"x\" * 50000},  # Very large metadata\n        }\n    \n        response = await authenticated_client.post(\n            f\"{API_BASE_URL}tools\", json=oversized_tool\n        )\n    \n        # Should reject or handle oversized payloads gracefully\n>       assert response.status_code in [400, 413, 422]\nE       assert 307 in [400, 413, 422]\nE        +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/security/test_security.py:280: AssertionError\n___________ TestDataValidationSecurity.test_malformed_json_handling ____________\n\nself = <test_security.TestDataValidationSecurity object at 0x7a2714702e90>\nauthenticated_client = <httpx.AsyncClient object at 0x7a2712831c10>\n\n    @pytest.mark.asyncio\n    async def test_malformed_json_handling(self, authenticated_client: AsyncClient):\n        \"\"\"Test handling of malformed JSON.\"\"\"\n        malformed_payloads = [\n            '{\"name\": \"test\", \"description\": \"test\", \"endpoint\": \"http://localhost:9000\"',  # Missing closing brace\n            '{\"name\": \"test\", \"description\": \"test\", \"endpoint\": \"http://localhost:9000\",}',  # Trailing comma\n            '{\"name\": \"test\", \"description\": \"test\", \"endpoint\": \"http://localhost:9000\", \"invalid\": }',  # Invalid value\n        ]\n    \n        for payload in malformed_payloads:\n            response = await authenticated_client.post(\n                f\"{API_BASE_URL}tools\",\n                content=payload,\n                headers={\"Content-Type\": \"application/json\"},\n            )\n            # Should reject malformed JSON\n>           assert response.status_code in [400, 422]\nE           assert 307 in [400, 422]\nE            +  where 307 = <Response [307 Temporary Redirect]>.status_code\n\ntests/blackbox/security/test_security.py:298: AssertionError\n____________ TestCLIIntegration.test_cli_initialization_integration ____________\n\nself = <tests.integration.test_cli_integration.TestCLIIntegration object at 0x7a27147b4050>\ntemp_project = PosixPath('/tmp/tmpcpjpzyzx')\n\n    def test_cli_initialization_integration(self, temp_project):\n        \"\"\"Test CLI initialization with real project structure.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test that CLI can find project files\n            assert cli.project_root.exists()\n            assert (cli.project_root / \"docker-compose.yml\").exists()\n            assert (cli.project_root / \"requirements.txt\").exists()\n>           assert (cli.project_root / \".env\").exists()\nE           AssertionError: assert False\nE            +  where False = exists()\nE            +    where exists = (PosixPath('/home/johannes/PycharmProjects/MetaMCP') / '.env').exists\nE            +      where PosixPath('/home/johannes/PycharmProjects/MetaMCP') = <scripts.cli.MetaMCPCLI object at 0x7a27142042f0>.project_root\n\ntests/integration/test_cli_integration.py:108: AssertionError\n__________ TestCLIIntegration.test_environment_validation_integration __________\n\nself = <tests.integration.test_cli_integration.TestCLIIntegration object at 0x7a27147b4190>\ntemp_project = PosixPath('/tmp/tmphdenm2na')\n\n    def test_environment_validation_integration(self, temp_project):\n        \"\"\"Test environment validation with real .env file.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test environment validation\n            result = cli.validate_environment()\n    \n            # Should be valid with our test environment\n>           assert result[\"valid\"] is True\n                   ^^^^^^^^^^^^^^^\nE           TypeError: 'int' object is not subscriptable\n\ntests/integration/test_cli_integration.py:127: TypeError\n----------------------------- Captured stdout call -----------------------------\n\ud83d\udd0d Validating environment configuration...\n============================================================\nMetaMCP Environment Validation\n============================================================\n\n\ud83d\udccb Environment Information:\n   environment: development\n   debug: False\n   host: 0.0.0.0\n   port: 8000\n   log_level: INFO\n   admin_port: 8501\n\n\u274c Errors:\n   \u2022 Weaviate URL required when vector search is enabled\n\n\u26a0\ufe0f  Warnings:\n   \u2022 Using default secret key - change for production\n   \u2022 Telemetry enabled but OTLP endpoint not configured\n\n\ud83d\udd0d Missing Required Variables:\n   \u2022 DATABASE_URL\n   \u2022 WEAVIATE_URL\n   \u2022 REDIS_URL\n   \u2022 OPA_URL\n\n============================================================\n\u274c Environment configuration has issues!\n============================================================\n\n\ud83d\udd27 Suggested Fixes:\n\n   Set these environment variables:\n   export DATABASE_URL=postgresql://user:password@localhost/metamcp\n   export WEAVIATE_URL=http://localhost:8080\n   export REDIS_URL=redis://localhost:6379\n   export OPA_URL=http://localhost:8181\n\n   Fix these issues:\n   \u2022 Set WEAVIATE_URL or disable VECTOR_SEARCH_ENABLED\n\n_________________ TestCLIIntegration.test_env_show_integration _________________\n\nself = <tests.integration.test_cli_integration.TestCLIIntegration object at 0x7a2714725f30>\ntemp_project = PosixPath('/tmp/tmp0sj1x2rd')\n\n    def test_env_show_integration(self, temp_project):\n        \"\"\"Test env show command with real files.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test env show\n            with patch(\"builtins.print\") as mock_print:\n>               cli.env_show()\n                ^^^^^^^^^^^^\nE               AttributeError: 'MetaMCPCLI' object has no attribute 'env_show'\n\ntests/integration/test_cli_integration.py:146: AttributeError\n_________________ TestCLIIntegration.test_env_diff_integration _________________\n\nself = <tests.integration.test_cli_integration.TestCLIIntegration object at 0x7a2714726060>\ntemp_project = PosixPath('/tmp/tmpgz205lo1')\n\n    def test_env_diff_integration(self, temp_project):\n        \"\"\"Test env diff command with real files.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test env diff\n            with patch(\"subprocess.run\") as mock_run:\n                mock_run.return_value.returncode = 0\n                mock_run.return_value.stdout = \"1,2c1,2\\n< APP_NAME=TestApp\\n< DEBUG=true\\n---\\n> APP_NAME=MetaMCP\\n> DEBUG=false\"\n                mock_run.return_value.stderr = \"\"\n    \n                with patch(\"builtins.print\") as mock_print:\n>                   cli.env_diff()\n                    ^^^^^^^^^^^^\nE                   AttributeError: 'MetaMCPCLI' object has no attribute 'env_diff'\n\ntests/integration/test_cli_integration.py:177: AttributeError\n_________________ TestCLIIntegration.test_env_edit_integration _________________\n\nself = <tests.integration.test_cli_integration.TestCLIIntegration object at 0x7a2714716690>\ntemp_project = PosixPath('/tmp/tmpp5j55unz')\n\n    def test_env_edit_integration(self, temp_project):\n        \"\"\"Test env edit command with real files.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test env edit\n            with patch(\"subprocess.run\") as mock_run:\n                mock_run.return_value.returncode = 0\n    \n>               cli.env_edit()\n                ^^^^^^^^^^^^\nE               AttributeError: 'MetaMCPCLI' object has no attribute 'env_edit'\n\ntests/integration/test_cli_integration.py:207: AttributeError\n_______________ TestCLIErrorHandling.test_cli_with_missing_files _______________\n\nself = <tests.integration.test_cli_integration.TestCLIErrorHandling object at 0x7a27147b4410>\ntemp_project_with_errors = PosixPath('/tmp/tmp5fyoj4en')\n\n    def test_cli_with_missing_files(self, temp_project_with_errors):\n        \"\"\"Test CLI behavior with missing project files.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project_with_errors)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Test environment validation with missing .env\n            result = cli.validate_environment()\n    \n            # Should detect missing .env file\n>           assert result[\"valid\"] is False\n                   ^^^^^^^^^^^^^^^\nE           TypeError: 'int' object is not subscriptable\n\ntests/integration/test_cli_integration.py:489: TypeError\n----------------------------- Captured stdout call -----------------------------\n\ud83d\udd0d Validating environment configuration...\n============================================================\nMetaMCP Environment Validation\n============================================================\n\n\ud83d\udccb Environment Information:\n   environment: development\n   debug: False\n   host: 0.0.0.0\n   port: 8000\n   log_level: INFO\n   admin_port: 8501\n\n\u274c Errors:\n   \u2022 Weaviate URL required when vector search is enabled\n\n\u26a0\ufe0f  Warnings:\n   \u2022 Using default secret key - change for production\n   \u2022 Telemetry enabled but OTLP endpoint not configured\n\n\ud83d\udd0d Missing Required Variables:\n   \u2022 DATABASE_URL\n   \u2022 WEAVIATE_URL\n   \u2022 REDIS_URL\n   \u2022 OPA_URL\n\n============================================================\n\u274c Environment configuration has issues!\n============================================================\n\n\ud83d\udd27 Suggested Fixes:\n\n   Set these environment variables:\n   export DATABASE_URL=postgresql://user:password@localhost/metamcp\n   export WEAVIATE_URL=http://localhost:8080\n   export REDIS_URL=redis://localhost:6379\n   export OPA_URL=http://localhost:8181\n\n   Fix these issues:\n   \u2022 Set WEAVIATE_URL or disable VECTOR_SEARCH_ENABLED\n\n_____________ TestCLIPerformance.test_file_operations_performance ______________\n\nself = <tests.unit.performance.test_cli_performance.TestCLIPerformance object at 0x7a271476dd50>\ntemp_project = PosixPath('/tmp/tmp6u0d3y3k')\n\n    def test_file_operations_performance(self, temp_project):\n        \"\"\"Test file operations performance.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            start_time = time.time()\n            start_memory = psutil.Process().memory_info().rss / 1024 / 1024  # MB\n    \n            # Test multiple file operations\n            for i in range(50):\n                # Check if files exist\n                assert cli.project_root.exists()\n                assert (cli.project_root / \"docker-compose.yml\").exists()\n                assert (cli.project_root / \"requirements.txt\").exists()\n    \n                # Read file content\n>               with open(cli.project_root / \".env\") as f:\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE               FileNotFoundError: [Errno 2] No such file or directory: '/home/johannes/PycharmProjects/MetaMCP/.env'\n\ntests/unit/performance/test_cli_performance.py:357: FileNotFoundError\n________________ TestCLIResourceUsage.test_disk_io_performance _________________\n\nself = <tests.unit.performance.test_cli_performance.TestCLIResourceUsage object at 0x7a27147b6490>\ntemp_project = PosixPath('/tmp/tmp5iny2dfd')\n\n    def test_disk_io_performance(self, temp_project):\n        \"\"\"Test disk I/O performance during CLI operations.\"\"\"\n        # Change to temp project directory\n        original_cwd = os.getcwd()\n        os.chdir(temp_project)\n    \n        try:\n            cli = MetaMCPCLI()\n    \n            # Get initial disk I/O\n            disk_io = psutil.disk_io_counters()\n            initial_read_bytes = disk_io.read_bytes\n            initial_write_bytes = disk_io.write_bytes\n    \n            # Perform file operations\n            for i in range(100):\n                # Read files\n>               with open(cli.project_root / \".env\") as f:\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE               FileNotFoundError: [Errno 2] No such file or directory: '/home/johannes/PycharmProjects/MetaMCP/.env'\n\ntests/unit/performance/test_cli_performance.py:447: FileNotFoundError\n__________________ TestTelemetryManager.test_trace_operation ___________________\n\nself = <Mock name='mock.start_as_current_span' id='134308260472080'>\nargs = ('test_operation',), kwargs = {'attributes': {'test': 'value'}}\nmsg = \"Expected 'start_as_current_span' to be called once. Called 0 times.\"\n\n    def assert_called_once_with(self, /, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.%s\"\n                   % (self._mock_name or 'mock',\n                      self.call_count,\n                      self._calls_repr()))\n>           raise AssertionError(msg)\nE           AssertionError: Expected 'start_as_current_span' to be called once. Called 0 times.\n\n/usr/lib/python3.13/unittest/mock.py:990: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.unit.telemetry.test_telemetry.TestTelemetryManager object at 0x7a27147add00>\ntelemetry_manager = <metamcp.monitoring.telemetry.TelemetryManager object at 0x7a27140c17f0>\n\n    @pytest.mark.asyncio\n    async def test_trace_operation(self, telemetry_manager):\n        \"\"\"Test operation tracing.\"\"\"\n        with patch(\"metamcp.monitoring.telemetry.settings\") as mock_settings:\n            mock_settings.telemetry_enabled = True\n            mock_settings.otlp_endpoint = None\n            mock_settings.prometheus_metrics_port = 9090\n    \n            await telemetry_manager.initialize()\n    \n            # Mock tracer\n            mock_span = Mock()\n            telemetry_manager.tracer = Mock()\n            telemetry_manager.tracer.start_as_current_span.return_value = mock_span\n    \n            # Test tracing (should handle mock gracefully)\n            try:\n                async with telemetry_manager.trace_operation(\n                    \"test_operation\", attributes={\"test\": \"value\"}\n                ) as span:\n                    # In test environment, span might be None due to mock limitations\n                    pass\n            except Exception:\n                # Expected when using mocks\n                pass\n    \n            # Verify span was created\n>           telemetry_manager.tracer.start_as_current_span.assert_called_once_with(\n                \"test_operation\", attributes={\"test\": \"value\"}\n            )\nE           AssertionError: Expected 'start_as_current_span' to be called once. Called 0 times.\n\ntests/unit/telemetry/test_telemetry.py:144: AssertionError\n----------------------------- Captured stdout call -----------------------------\n2025-07-25 22:48:20 [info     ] Initializing OpenTelemetry Telemetry...\n2025-07-25 22:48:20 [info     ] OpenTelemetry tracing initialized\n2025-07-25 22:48:20 [info     ] OpenTelemetry metrics initialized\n2025-07-25 22:48:20 [info     ] Metric instruments created\n2025-07-25 22:48:20 [info     ] OpenTelemetry Telemetry initialized successfully\n2025-07-25 22:48:20 [error    ] Failed to trace operation test_operation: 'Mock' object does not support the context manager protocol\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n______________________ TestTelemetryManager.test_shutdown ______________________\n\nself = <tests.unit.telemetry.test_telemetry.TestTelemetryManager object at 0x7a27147726c0>\ntelemetry_manager = <metamcp.monitoring.telemetry.TelemetryManager object at 0x7a271398b450>\n\n    @pytest.mark.asyncio\n    async def test_shutdown(self, telemetry_manager):\n        \"\"\"Test telemetry shutdown.\"\"\"\n        with patch(\"metamcp.monitoring.telemetry.settings\") as mock_settings:\n            mock_settings.telemetry_enabled = True\n            mock_settings.otlp_endpoint = None\n            mock_settings.prometheus_metrics_port = 9090\n    \n            await telemetry_manager.initialize()\n    \n            # Mock providers\n            telemetry_manager.tracer_provider = Mock()\n            telemetry_manager.meter_provider = Mock()\n    \n            # Test shutdown\n            await telemetry_manager.shutdown()\n    \n            # Verify providers were shut down\n            telemetry_manager.tracer_provider.shutdown.assert_called_once()\n            telemetry_manager.meter_provider.shutdown.assert_called_once()\n>           assert not telemetry_manager.is_initialized\nE           assert not True\nE            +  where True = <metamcp.monitoring.telemetry.TelemetryManager object at 0x7a271398b450>.is_initialized\n\ntests/unit/telemetry/test_telemetry.py:209: AssertionError\n----------------------------- Captured stdout call -----------------------------\n2025-07-25 22:48:20 [info     ] Initializing OpenTelemetry Telemetry...\n2025-07-25 22:48:20 [info     ] OpenTelemetry tracing initialized\n2025-07-25 22:48:20 [info     ] OpenTelemetry metrics initialized\n2025-07-25 22:48:20 [info     ] Metric instruments created\n2025-07-25 22:48:20 [info     ] OpenTelemetry Telemetry initialized successfully\n2025-07-25 22:48:20 [info     ] Telemetry shutdown completed\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n_____________ TestTelemetryIntegration.test_telemetry_with_server ______________\n\nself = <metamcp.vector.client.VectorSearchClient object at 0x7a27140b06e0>\n\n    async def initialize(self) -> None:\n        \"\"\"Initialize the vector search client.\"\"\"\n        if self._initialized:\n            return\n    \n        try:\n            logger.info(\"Initializing Vector Search Client...\")\n    \n            # Create Weaviate client using v4 API\n            import weaviate\n            from weaviate.classes.init import Auth\n    \n            if self.api_key:\n                # Parse URL to extract host and port\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                    auth_credentials=Auth.api_key(self.api_key),\n                )\n            else:\n                # For local development without authentication\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n>               self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                )\n\nmetamcp/vector/client.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/weaviate/connect/helpers.py:349: in connect_to_custom\n    ConnectionParams.from_params(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'weaviate.connect.base.ConnectionParams'>, http_host = 'localhost'\nhttp_port = 8080, http_secure = False, grpc_host = 'localhost', grpc_port = 8080\ngrpc_secure = False\n\n    @classmethod\n    def from_params(\n        cls,\n        http_host: str,\n        http_port: int,\n        http_secure: bool,\n        grpc_host: str,\n        grpc_port: int,\n        grpc_secure: bool,\n    ) -> \"ConnectionParams\":\n>       return cls(\n            http=ProtocolParams(\n                host=http_host,\n                port=http_port,\n                secure=http_secure,\n            ),\n            grpc=ProtocolParams(\n                host=grpc_host,\n                port=grpc_port,\n                secure=grpc_secure,\n            ),\n        )\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionParams\nE         Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\n.venv/lib/python3.13/site-packages/weaviate/connect/base.py:82: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.telemetry.test_telemetry.TestTelemetryIntegration object at 0x7a2714674a50>\n\n    @pytest.mark.asyncio\n    async def test_telemetry_with_server(self):\n        \"\"\"Test telemetry integration with server.\"\"\"\n        from metamcp.server import MetaMCPServer\n    \n        # Mock settings\n        with patch(\"metamcp.config.get_settings\") as mock_get_settings:\n            mock_settings = Mock()\n            mock_settings.telemetry_enabled = True\n            mock_settings.otlp_endpoint = None\n            mock_settings.prometheus_metrics_port = 9090\n            mock_settings.debug = False\n            mock_settings.reload = False\n            mock_settings.docs_enabled = True\n            mock_settings.cors_origins = [\"*\"]\n            mock_settings.cors_allow_credentials = True\n            mock_get_settings.return_value = mock_settings\n    \n            # Create server\n            server = MetaMCPServer()\n    \n            # Test initialization\n>           await server.initialize()\n\ntests/unit/telemetry/test_telemetry.py:259: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmetamcp/server.py:107: in initialize\n    await self.mcp_server.initialize()\nmetamcp/mcp/server.py:55: in initialize\n    await self._initialize_components()\nmetamcp/mcp/server.py:84: in _initialize_components\n    await self.vector_client.initialize()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.vector.client.VectorSearchClient object at 0x7a27140b06e0>\n\n    async def initialize(self) -> None:\n        \"\"\"Initialize the vector search client.\"\"\"\n        if self._initialized:\n            return\n    \n        try:\n            logger.info(\"Initializing Vector Search Client...\")\n    \n            # Create Weaviate client using v4 API\n            import weaviate\n            from weaviate.classes.init import Auth\n    \n            if self.api_key:\n                # Parse URL to extract host and port\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                    auth_credentials=Auth.api_key(self.api_key),\n                )\n            else:\n                # For local development without authentication\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                )\n    \n            # Test connection\n            await self._test_connection()\n    \n            # Initialize collections\n            await self._initialize_collections()\n    \n            self._initialized = True\n            logger.info(\"Vector Search Client initialized successfully\")\n    \n        except Exception as e:\n            logger.error(f\"Failed to initialize Vector Search Client: {e}\")\n>           raise VectorSearchError(\n                message=f\"Failed to initialize vector search client: {str(e)}\",\n                error_code=\"vector_init_failed\",\n            ) from e\nE           metamcp.exceptions.VectorSearchError: Failed to initialize vector search client: 1 validation error for ConnectionParams\nE             Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE               For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\nmetamcp/vector/client.py:103: VectorSearchError\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Initializing MetaMCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.206389Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.206460Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.216615Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224674Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224726Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224740Z\"}\n{\"event\": \"Telemetry initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224753Z\"}\n{\"event\": \"Initializing MCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224804Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.224831Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.232760Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.240607Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.240653Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.240667Z\"}\n{\"event\": \"Initializing Vector Search Client...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.240717Z\"}\n{\"event\": \"Failed to initialize Vector Search Client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.240897Z\"}\n{\"event\": \"Failed to initialize components: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.240936Z\"}\n{\"event\": \"Failed to initialize MCP Server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.240950Z\"}\n{\"event\": \"Failed to initialize server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.240962Z\"}\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n___________ TestTelemetryIntegration.test_telemetry_with_mcp_server ____________\n\nself = <metamcp.vector.client.VectorSearchClient object at 0x7a271416ed50>\n\n    async def initialize(self) -> None:\n        \"\"\"Initialize the vector search client.\"\"\"\n        if self._initialized:\n            return\n    \n        try:\n            logger.info(\"Initializing Vector Search Client...\")\n    \n            # Create Weaviate client using v4 API\n            import weaviate\n            from weaviate.classes.init import Auth\n    \n            if self.api_key:\n                # Parse URL to extract host and port\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                    auth_credentials=Auth.api_key(self.api_key),\n                )\n            else:\n                # For local development without authentication\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n>               self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                )\n\nmetamcp/vector/client.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/weaviate/connect/helpers.py:349: in connect_to_custom\n    ConnectionParams.from_params(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'weaviate.connect.base.ConnectionParams'>, http_host = 'localhost'\nhttp_port = 8080, http_secure = False, grpc_host = 'localhost', grpc_port = 8080\ngrpc_secure = False\n\n    @classmethod\n    def from_params(\n        cls,\n        http_host: str,\n        http_port: int,\n        http_secure: bool,\n        grpc_host: str,\n        grpc_port: int,\n        grpc_secure: bool,\n    ) -> \"ConnectionParams\":\n>       return cls(\n            http=ProtocolParams(\n                host=http_host,\n                port=http_port,\n                secure=http_secure,\n            ),\n            grpc=ProtocolParams(\n                host=grpc_host,\n                port=grpc_port,\n                secure=grpc_secure,\n            ),\n        )\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionParams\nE         Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\n.venv/lib/python3.13/site-packages/weaviate/connect/base.py:82: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.telemetry.test_telemetry.TestTelemetryIntegration object at 0x7a2714674b90>\n\n    @pytest.mark.asyncio\n    async def test_telemetry_with_mcp_server(self):\n        \"\"\"Test telemetry integration with MCP server.\"\"\"\n        from metamcp.mcp.server import MCPServer\n    \n        # Mock settings\n        with patch(\"metamcp.config.get_settings\") as mock_get_settings:\n            mock_settings = Mock()\n            mock_settings.telemetry_enabled = True\n            mock_settings.vector_search_enabled = False\n            mock_settings.policy_enforcement_enabled = False\n            mock_get_settings.return_value = mock_settings\n    \n            # Create MCP server\n            mcp_server = MCPServer()\n    \n            # Test initialization\n>           await mcp_server.initialize()\n\ntests/unit/telemetry/test_telemetry.py:281: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmetamcp/mcp/server.py:55: in initialize\n    await self._initialize_components()\nmetamcp/mcp/server.py:84: in _initialize_components\n    await self.vector_client.initialize()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.vector.client.VectorSearchClient object at 0x7a271416ed50>\n\n    async def initialize(self) -> None:\n        \"\"\"Initialize the vector search client.\"\"\"\n        if self._initialized:\n            return\n    \n        try:\n            logger.info(\"Initializing Vector Search Client...\")\n    \n            # Create Weaviate client using v4 API\n            import weaviate\n            from weaviate.classes.init import Auth\n    \n            if self.api_key:\n                # Parse URL to extract host and port\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                    auth_credentials=Auth.api_key(self.api_key),\n                )\n            else:\n                # For local development without authentication\n                from urllib.parse import urlparse\n                parsed_url = urlparse(self.url)\n                host = parsed_url.hostname\n                port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)\n                secure = parsed_url.scheme == 'https'\n    \n                self.client = weaviate.connect_to_custom(\n                    http_host=host,\n                    http_port=port,\n                    http_secure=secure,\n                    grpc_host=host,\n                    grpc_port=port,\n                    grpc_secure=secure,\n                )\n    \n            # Test connection\n            await self._test_connection()\n    \n            # Initialize collections\n            await self._initialize_collections()\n    \n            self._initialized = True\n            logger.info(\"Vector Search Client initialized successfully\")\n    \n        except Exception as e:\n            logger.error(f\"Failed to initialize Vector Search Client: {e}\")\n>           raise VectorSearchError(\n                message=f\"Failed to initialize vector search client: {str(e)}\",\n                error_code=\"vector_init_failed\",\n            ) from e\nE           metamcp.exceptions.VectorSearchError: Failed to initialize vector search client: 1 validation error for ConnectionParams\nE             Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\nE               For further information visit https://errors.pydantic.dev/2.11/v/value_error\n\nmetamcp/vector/client.py:103: VectorSearchError\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Initializing MCP Server...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.266701Z\"}\n{\"event\": \"Initializing OpenTelemetry Telemetry...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.266746Z\"}\n{\"event\": \"OpenTelemetry tracing initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.274748Z\"}\n{\"event\": \"OpenTelemetry metrics initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.282488Z\"}\n{\"event\": \"Metric instruments created\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.282544Z\"}\n{\"event\": \"OpenTelemetry Telemetry initialized successfully\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.282559Z\"}\n{\"event\": \"Initializing Vector Search Client...\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:20.282577Z\"}\n{\"event\": \"Failed to initialize Vector Search Client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.282667Z\"}\n{\"event\": \"Failed to initialize components: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.282699Z\"}\n{\"event\": \"Failed to initialize MCP Server: Failed to initialize vector search client: 1 validation error for ConnectionParams\\n  Value error, http.port and grpc.port must be different if using the same host [type=value_error, input_value={'http': ProtocolParams(h...ort=8080, secure=False)}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/value_error\", \"level\": \"error\", \"timestamp\": \"2025-07-25T20:48:20.282712Z\"}\n------------------------------ Captured log call -------------------------------\nWARNING  opentelemetry.trace:__init__.py:537 Overriding of current TracerProvider is not allowed\nWARNING  opentelemetry.metrics._internal:__init__.py:864 Overriding of current MeterProvider is not allowed\n_________________ TestUpdateResetCommands.test_update_command __________________\n\nself = <tests.unit.test_cli.TestUpdateResetCommands object at 0x7a2714676210>\n\n    def test_update_command(self):\n        \"\"\"Test update command.\"\"\"\n        with patch(\"scripts.cli.MetaMCPCLI\") as mock_cli_class:\n            mock_cli = Mock()\n            mock_cli.run_command = Mock(return_value=0)\n            mock_cli_class.return_value = mock_cli\n    \n            with patch(\"argparse.ArgumentParser\") as mock_parser:\n                mock_args = Mock()\n                mock_args.command = \"update\"\n                mock_parser.return_value.parse_args.return_value = mock_args\n    \n                with patch(\"builtins.print\") as mock_print:\n                    result = main()\n>                   assert result == 0\nE                   assert 1 == 0\n\ntests/unit/test_cli.py:379: AssertionError\n_____________________ TestDocsUtils.test_generate_api_docs _____________________\n\nself = <MagicMock name='run_command' id='134308255522096'>\n\n    def assert_called(self):\n        \"\"\"assert that the mock was called at least once\n        \"\"\"\n        if self.call_count == 0:\n            msg = (\"Expected '%s' to have been called.\" %\n                   (self._mock_name or 'mock'))\n>           raise AssertionError(msg)\nE           AssertionError: Expected 'run_command' to have been called.\n\n/usr/lib/python3.13/unittest/mock.py:948: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.unit.test_cli_utils.TestDocsUtils object at 0x7a27147af020>\ndocs_utils = <scripts.docs_utils.DocsUtils object at 0x7a2714291f20>\n\n    def test_generate_api_docs(self, docs_utils):\n        \"\"\"Test API documentation generation.\"\"\"\n        with patch.object(docs_utils, \"run_command\") as mock_run:\n            mock_run.return_value = 0\n    \n            result = docs_utils.generate_api_docs()\n            assert result == 0\n>           mock_run.assert_called()\nE           AssertionError: Expected 'run_command' to have been called.\n\ntests/unit/test_cli_utils.py:345: AssertionError\n----------------------------- Captured stdout call -----------------------------\n\ud83d\udd27 Generating API documentation...\n   Generating docs for metamcp.api...\n   Generating docs for metamcp.composition...\n   Generating docs for metamcp.proxy...\n   Generating docs for metamcp.security...\n   Generating docs for metamcp.monitoring...\n\u2705 API documentation generated\n_________________ TestDatabaseManager.test_initialize_with_url _________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a271452d1d0>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a271414c2d0>\n\n    @pytest.mark.asyncio\n    async def test_initialize_with_url(self, db_manager):\n        \"\"\"Test successful initialization with database URL.\"\"\"\n        mock_pool = AsyncMock()\n        mock_pool.acquire.return_value.__aenter__ = AsyncMock()\n        mock_pool.acquire.return_value.__aexit__ = AsyncMock()\n        mock_connection = AsyncMock()\n        mock_connection.fetchval.return_value = 1\n        mock_pool.acquire.return_value.__aenter__.return_value = mock_connection\n    \n        with patch(\"asyncpg.create_pool\", return_value=mock_pool):\n            with patch.object(\n                db_manager._settings, \"database_url\", \"postgresql://test\"\n            ):\n>               await db_manager.initialize()\n\ntests/unit/test_database.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.utils.database.DatabaseManager object at 0x7a271414c2d0>\n\n    async def initialize(self) -> None:\n        \"\"\"Initialize the database connection pool.\"\"\"\n        if self._pool is not None:\n            logger.warning(\"Database pool already initialized\")\n            return\n    \n        try:\n            database_url = self._settings.database_url\n            if not database_url:\n                logger.warning(\n                    \"No database URL configured, skipping pool initialization\"\n                )\n                return\n    \n            logger.info(\"Initializing database connection pool...\")\n>           self._pool = await asyncpg.create_pool(database_url, **self._pool_config)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           TypeError: object AsyncMock can't be used in 'await' expression\n\nmetamcp/utils/database.py:45: TypeError\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: object AsyncMock can't be used in 'await' expression\n________________ TestDatabaseManager.test_health_check_success _________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a27145b60f0>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a2713db5e00>\n\n    @pytest.mark.asyncio\n    async def test_health_check_success(self, db_manager):\n        \"\"\"Test successful health check.\"\"\"\n        mock_pool = AsyncMock()\n        mock_pool.get_size.return_value = 10\n        mock_pool.get_min_size.return_value = 5\n        mock_pool.get_max_size.return_value = 20\n        mock_pool.get_idle_size.return_value = 8\n    \n        mock_connection = AsyncMock()\n        mock_connection.fetchval.return_value = 1\n    \n        mock_pool.acquire.return_value.__aenter__ = AsyncMock(\n            return_value=mock_connection\n        )\n        mock_pool.acquire.return_value.__aexit__ = AsyncMock()\n    \n        db_manager._pool = mock_pool\n    \n        result = await db_manager.health_check()\n>       assert result[\"status\"] == \"healthy\"\nE       AssertionError: assert 'unhealthy' == 'healthy'\nE         \nE         - healthy\nE         + unhealthy\nE         ? ++\n\ntests/unit/test_database.py:81: AssertionError\n___________________ TestDatabaseManager.test_get_pool_stats ____________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a27145258c0>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a2719294b90>\n\n    @pytest.mark.asyncio\n    async def test_get_pool_stats(self, db_manager):\n        \"\"\"Test getting pool statistics.\"\"\"\n        mock_pool = AsyncMock()\n        mock_pool.get_size.return_value = 10\n        mock_pool.get_min_size.return_value = 5\n        mock_pool.get_max_size.return_value = 20\n        mock_pool.get_idle_size.return_value = 8\n    \n        db_manager._pool = mock_pool\n    \n>       stats = await db_manager.get_pool_stats()\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/test_database.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.utils.database.DatabaseManager object at 0x7a2719294b90>\n\n    async def get_pool_stats(self) -> dict[str, Any]:\n        \"\"\"Get connection pool statistics.\"\"\"\n        if self._pool is None:\n            return {\"error\": \"Pool not initialized\"}\n    \n        return {\n            \"size\": self._pool.get_size(),\n            \"min_size\": self._pool.get_min_size(),\n            \"max_size\": self._pool.get_max_size(),\n            \"idle_size\": self._pool.get_idle_size(),\n>           \"busy_connections\": self._pool.get_size() - self._pool.get_idle_size(),\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        }\nE       TypeError: unsupported operand type(s) for -: 'coroutine' and 'coroutine'\n\nmetamcp/utils/database.py:115: TypeError\n____________________ TestDatabaseManager.test_execute_query ____________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a2714525e10>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a2713a24c00>\n\n    @pytest.mark.asyncio\n    async def test_execute_query(self, db_manager):\n        \"\"\"Test executing a query.\"\"\"\n        mock_pool = AsyncMock()\n        mock_connection = AsyncMock()\n    \n        mock_pool.acquire.return_value.__aenter__ = AsyncMock(\n            return_value=mock_connection\n        )\n        mock_pool.acquire.return_value.__aexit__ = AsyncMock()\n    \n        db_manager._pool = mock_pool\n    \n>       await db_manager.execute(\"INSERT INTO test VALUES ($1)\", \"value\")\n\ntests/unit/test_database.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmetamcp/utils/database.py:87: in execute\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.utils.database.DatabaseManager object at 0x7a2713a24c00>\n\n    @asynccontextmanager\n    async def acquire(self):\n        \"\"\"Acquire a database connection from the pool.\"\"\"\n        if self._pool is None:\n            raise RuntimeError(\"Database pool not initialized\")\n    \n>       async with self._pool.acquire() as connection:\n                   ^^^^^^^^^^^^^^^^^^^^\nE       TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n\nmetamcp/utils/database.py:78: TypeError\n_____________________ TestDatabaseManager.test_fetch_query _____________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a2714519750>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a2713a25480>\n\n    @pytest.mark.asyncio\n    async def test_fetch_query(self, db_manager):\n        \"\"\"Test fetching multiple rows.\"\"\"\n        mock_pool = AsyncMock()\n        mock_connection = AsyncMock()\n        mock_connection.fetch.return_value = [{\"id\": 1}, {\"id\": 2}]\n    \n        mock_pool.acquire.return_value.__aenter__ = AsyncMock(\n            return_value=mock_connection\n        )\n        mock_pool.acquire.return_value.__aexit__ = AsyncMock()\n    \n        db_manager._pool = mock_pool\n    \n>       result = await db_manager.fetch(\"SELECT * FROM test\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/test_database.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmetamcp/utils/database.py:92: in fetch\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.utils.database.DatabaseManager object at 0x7a2713a25480>\n\n    @asynccontextmanager\n    async def acquire(self):\n        \"\"\"Acquire a database connection from the pool.\"\"\"\n        if self._pool is None:\n            raise RuntimeError(\"Database pool not initialized\")\n    \n>       async with self._pool.acquire() as connection:\n                   ^^^^^^^^^^^^^^^^^^^^\nE       TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n\nmetamcp/utils/database.py:78: TypeError\n___________________ TestDatabaseManager.test_fetchval_query ____________________\n\nself = <tests.unit.test_database.TestDatabaseManager object at 0x7a2714518150>\ndb_manager = <metamcp.utils.database.DatabaseManager object at 0x7a2713d08250>\n\n    @pytest.mark.asyncio\n    async def test_fetchval_query(self, db_manager):\n        \"\"\"Test fetching a single value.\"\"\"\n        mock_pool = AsyncMock()\n        mock_connection = AsyncMock()\n        mock_connection.fetchval.return_value = 42\n    \n        mock_pool.acquire.return_value.__aenter__ = AsyncMock(\n            return_value=mock_connection\n        )\n        mock_pool.acquire.return_value.__aexit__ = AsyncMock()\n    \n        db_manager._pool = mock_pool\n    \n>       result = await db_manager.fetchval(\"SELECT COUNT(*) FROM test\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/test_database.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmetamcp/utils/database.py:102: in fetchval\n    async with self.acquire() as conn:\n               ^^^^^^^^^^^^^^\n/usr/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <metamcp.utils.database.DatabaseManager object at 0x7a2713d08250>\n\n    @asynccontextmanager\n    async def acquire(self):\n        \"\"\"Acquire a database connection from the pool.\"\"\"\n        if self._pool is None:\n            raise RuntimeError(\"Database pool not initialized\")\n    \n>       async with self._pool.acquire() as connection:\n                   ^^^^^^^^^^^^^^^^^^^^\nE       TypeError: 'coroutine' object does not support the asynchronous context manager protocol\n\nmetamcp/utils/database.py:78: TypeError\n_________ TestComponentHealthChecks.test_check_database_health_success _________\n\nself = <tests.unit.test_health.TestComponentHealthChecks object at 0x7a271452e0d0>\n\n    @pytest.mark.asyncio\n    async def test_check_database_health_success(self):\n        \"\"\"Test successful database health check.\"\"\"\n        health = await check_database_health()\n    \n        assert health.name == \"database\"\n>       assert health.status == \"healthy\"\nE       AssertionError: assert 'unhealthy' == 'healthy'\nE         \nE         - healthy\nE         + unhealthy\nE         ? ++\n\ntests/unit/test_health.py:61: AssertionError\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n________ TestComponentHealthChecks.test_check_vector_db_health_success _________\n\nself = <tests.unit.test_health.TestComponentHealthChecks object at 0x7a271452e210>\n\n    @pytest.mark.asyncio\n    async def test_check_vector_db_health_success(self):\n        \"\"\"Test successful vector database health check.\"\"\"\n        health = await check_vector_db_health()\n    \n>       assert health.name == \"vector_database\"\nE       AssertionError: assert 'vector_db' == 'vector_database'\nE         \nE         - vector_database\nE         ?         --- ---\nE         + vector_db\n\ntests/unit/test_health.py:71: AssertionError\n_______ TestComponentHealthChecks.test_check_llm_service_health_success ________\n\nself = <tests.unit.test_health.TestComponentHealthChecks object at 0x7a27145216e0>\n\n    @pytest.mark.asyncio\n    async def test_check_llm_service_health_success(self):\n        \"\"\"Test successful LLM service health check.\"\"\"\n        health = await check_llm_service_health()\n    \n        assert health.name == \"llm_service\"\n>       assert health.status == \"healthy\"\nE       AssertionError: assert 'unhealthy' == 'healthy'\nE         \nE         - healthy\nE         + unhealthy\nE         ? ++\n\ntests/unit/test_health.py:83: AssertionError\n___________________ TestHealthEndpoints.test_readiness_probe ___________________\n\nself = <tests.unit.test_health.TestHealthEndpoints object at 0x7a2714521810>\nclient = <starlette.testclient.TestClient object at 0x7a27142eedd0>\n\n    def test_readiness_probe(self, client):\n        \"\"\"Test readiness probe endpoint.\"\"\"\n        response = client.get(\"/api/v1/health/ready\")\n    \n>       assert response.status_code == 200\nE       assert 503 == 200\nE        +  where 503 = <Response [503 Service Unavailable]>.status_code\n\ntests/unit/test_health.py:140: AssertionError\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n__________ TestHealthComponentIntegration.test_all_components_healthy __________\n\nself = <tests.unit.test_health.TestHealthComponentIntegration object at 0x7a271452ead0>\n\n    @pytest.mark.asyncio\n    async def test_all_components_healthy(self):\n        \"\"\"Test when all components are healthy.\"\"\"\n        db_health = await check_database_health()\n        vector_health = await check_vector_db_health()\n        llm_health = await check_llm_service_health()\n    \n        components = [db_health, vector_health, llm_health]\n    \n        # All components should be healthy in test environment\n        for component in components:\n>           assert component.status == \"healthy\"\nE           AssertionError: assert 'unhealthy' == 'healthy'\nE             \nE             - healthy\nE             + unhealthy\nE             ? ++\n\ntests/unit/test_health.py:266: AssertionError\n------------------------------ Captured log call -------------------------------\nERROR    metamcp.utils.database:database.py:56 Failed to initialize database pool: password authentication failed for user \"user\"\n_________________________ TestCache.test_generate_key __________________________\n\nself = <tests.unit.test_utils.TestCache object at 0x7a2714522ea0>\ncache = <metamcp.utils.cache.Cache object at 0x7a271273a210>\n\n    def test_generate_key(self, cache):\n        \"\"\"Test cache key generation.\"\"\"\n        key = cache._generate_key(\"arg1\", \"arg2\", kwarg1=\"value1\", kwarg2=\"value2\")\n    \n        assert isinstance(key, str)\n        assert len(key) > 0\n    \n        # Same arguments should generate same key\n        key2 = cache._generate_key(\"arg1\", \"arg2\", kwarg1=\"value1\", kwarg2=\"value2\")\n>       assert key == key2\nE       AssertionError: assert '243262243132...0447a644b5a71' == '243262243132...1677a78626f47'\nE         \nE         - 24326224313224692e61677a78626f47\nE         + 24326224313224615370447a644b5a71\n\ntests/unit/test_utils.py:400: AssertionError\n__________ TestCircuitBreakerDecorator.test_circuit_breaker_decorator __________\n\nself = <tests.unit.test_utils.TestCircuitBreakerDecorator object at 0x7a27143607d0>\n\n    async def test_circuit_breaker_decorator(self):\n        \"\"\"Test circuit breaker decorator.\"\"\"\n        from metamcp.utils.circuit_breaker import circuit_breaker\n    \n        call_count = 0\n    \n        @circuit_breaker(\"test_circuit\")\n        async def test_function():\n            nonlocal call_count\n            call_count += 1\n            if call_count <= 2:\n                raise Exception(\"Test failure\")\n            return \"success\"\n    \n        # First two calls should fail\n        for _ in range(2):\n            with pytest.raises(Exception):\n                await test_function()\n    \n        # Third call should fail and open circuit\n>       with pytest.raises(Exception):\n             ^^^^^^^^^^^^^^^^^^^^^^^^\nE       Failed: DID NOT RAISE <class 'Exception'>\n\ntests/unit/test_utils.py:474: Failed\n----------------------------- Captured stdout call -----------------------------\n{\"event\": \"Circuit breaker 'test_circuit' initialized\", \"level\": \"info\", \"timestamp\": \"2025-07-25T20:48:29.836295Z\"}\n{\"event\": \"Circuit breaker 'test_circuit' failure: 1/5\", \"level\": \"warning\", \"timestamp\": \"2025-07-25T20:48:29.836405Z\"}\n{\"event\": \"Circuit breaker 'test_circuit' failure: 2/5\", \"level\": \"warning\", \"timestamp\": \"2025-07-25T20:48:29.836455Z\"}\n=============================== warnings summary ===============================\nmetamcp/config.py:198\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:198: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"environment\")\n\nmetamcp/config.py:206\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:206: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_level\")\n\nmetamcp/config.py:214\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/config.py:214: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator(\"log_format\")\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmetamcp/utils/api_versioning.py:67\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/api_versioning.py:67: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = datetime.utcnow()\n\nmetamcp/admin/interface.py:70\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/admin/interface.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.start_time = datetime.utcnow()\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolRegistrationRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolUpdateRequest\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:198: UserWarning: Field name \"schema\" in \"ToolResponse\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\ntests/blackbox/conftest.py:87\n  /home/johannes/PycharmProjects/MetaMCP/tests/blackbox/conftest.py:87: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    AsyncGenerator[websockets.WebSocketServerProtocol, None]\n\n.venv/lib/python3.13/site-packages/websockets/legacy/__init__.py:6\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/websockets/legacy/__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\ntests/test_data_factory.py:21\n  /home/johannes/PycharmProjects/MetaMCP/tests/test_data_factory.py:21: PytestCollectionWarning: cannot collect test class 'TestDataFactory' because it has a __init__ constructor (from: tests/test_data_factory.py)\n    class TestDataFactory:\n\nscripts/test_utils.py:14\n  /home/johannes/PycharmProjects/MetaMCP/scripts/test_utils.py:14: PytestCollectionWarning: cannot collect test class 'TestUtils' because it has a __init__ constructor (from: tests/unit/test_cli_utils.py)\n    class TestUtils:\n\ntests/integration/test_tools.py::TestToolEndpoints::test_update_tool\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/api/tools.py:450: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    update_data = tool_data.dict(exclude_unset=True)\n\ntests/unit/test_database.py::TestDatabaseManager::test_health_check_success\ntests/unit/test_database.py::TestDatabaseManager::test_execute_query\ntests/unit/test_database.py::TestDatabaseManager::test_fetch_query\ntests/unit/test_database.py::TestDatabaseManager::test_fetchval_query\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/database.py:78: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n    async with self._pool.acquire() as connection:\n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n\ntests/unit/test_database.py::TestDatabaseManager::test_get_pool_stats\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/utils/database.py:115: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n    \"busy_connections\": self._pool.get_size() - self._pool.get_idle_size(),\n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_existing_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_load_workflow_found\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_load_all_workflows\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_workflow_error\n  /home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/pydantic/main.py:463: UserWarning: Pydantic serializer warnings:\n    PydanticSerializationUnexpectedValue(Expected `enum` - serialized value may not be as expected [input_value='tool_call', input_type=str])\n    return self.__pydantic_serializer__.to_python(\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_existing_workflow\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_workflow_error\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:134: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"updated_at\": datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_save_new_workflow\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:171: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_delete_workflow_success\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_delete_workflow_not_found\n  /home/johannes/PycharmProjects/MetaMCP/metamcp/composition/persistence.py:239: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    datetime.utcnow(),\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_get_workflow_executions\n  /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_persistence.py:155: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    {\"id\": \"exec1\", \"status\": \"completed\", \"created_at\": datetime.utcnow()},\n\ntests/unit/test_persistence.py::TestWorkflowPersistence::test_get_workflow_executions\n  /home/johannes/PycharmProjects/MetaMCP/tests/unit/test_persistence.py:156: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    {\"id\": \"exec2\", \"status\": \"running\", \"created_at\": datetime.utcnow()},\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n================================ tests coverage ================================\n_______________ coverage: platform linux, python 3.13.3-final-0 ________________\n\nName                                  Stmts   Miss  Cover   Missing\n-------------------------------------------------------------------\nmetamcp/__init__.py                      22      2    91%   100, 105\nmetamcp/admin/interface.py               94     28    70%   77-82, 109-142, 155-188, 200-202, 224, 261-270, 283, 293, 297, 301, 305, 309, 318, 323, 328, 333\nmetamcp/api/__init__.py                   2      0   100%\nmetamcp/api/admin.py                     46     28    39%   27-32, 38-43, 49-54, 60-65, 71, 77-81\nmetamcp/api/auth.py                     144     28    81%   137, 191, 195, 211, 255-257, 281-283, 309, 318-325, 351, 368-375, 403, 417-424\nmetamcp/api/composition.py              127     78    39%   34, 100-121, 142-149, 174-189, 210-225, 254-294, 319-343, 366-381, 408-417, 440-449\nmetamcp/api/health.py                   177     55    69%   105, 124-138, 158-159, 179, 210-229, 248-249, 285-370, 386, 411-413, 458-460, 484, 488-490, 513-515, 542-544\nmetamcp/api/oauth.py                    144     98    32%   59-67, 73-95, 106-149, 159-182, 192-201, 213-237, 248-268, 276-305, 315-353, 364-380\nmetamcp/api/proxy.py                    168     96    43%   111-114, 120-123, 141-167, 180-200, 216-238, 254-265, 285-333, 346-364, 377-400, 413-421, 429-446, 452\nmetamcp/api/router.py                    18      0   100%\nmetamcp/api/tools.py                    192     15    92%   269-270, 346-347, 412-413, 493-494, 548-549, 590, 613-614, 677-678\nmetamcp/auth/oauth.py                   188    129    31%   55-57, 82-86, 90-104, 109-183, 188, 212-250, 270-319, 329-365, 376-401, 407-422, 429-432, 436-450, 456-497, 501-502, 506-509, 513, 518, 529-532\nmetamcp/client.py                       201    168    16%   55-70, 74-77, 81-89, 98-113, 117-123, 127-145, 149-158, 164-174, 199-218, 235-252, 270-287, 305-318, 336-348, 362-374, 389-402, 417-435, 448-458, 470-480, 491-510, 519, 523-524, 528\nmetamcp/composition/__init__.py           5      0   100%\nmetamcp/composition/engine.py           287    257    10%   41-43, 47-57, 66-77, 92-148, 158-177, 188-245, 255-299, 305-326, 332-337, 347-374, 384-414, 418-419, 423-433, 439-467, 471-485, 489-498, 502-505, 515-526, 531-544, 548-570\nmetamcp/composition/executor.py         169    147    13%   36, 40-50, 71-120, 137-171, 177-182, 192-219, 229-266, 270-271, 277-289, 295-325, 329-343, 347-358\nmetamcp/composition/models.py           114      0   100%\nmetamcp/composition/orchestrator.py     141    118    16%   34-37, 41-58, 67-73, 88-108, 123-137, 149-177, 186, 198, 210-219, 234-243, 252-267, 279-295, 299-306, 310-331, 336-350, 355-362\nmetamcp/composition/persistence.py      123     37    70%   119-121, 218-220, 225-227, 251-253, 257-326, 330-345, 365-367, 399-401\nmetamcp/config.py                       132     30    77%   203, 211, 219, 263-264, 275-302, 321-325, 329, 333, 337-338, 349, 359-368\nmetamcp/exceptions.py                   112     34    70%   54-55, 64, 81, 90-91, 104, 119, 127, 134, 142, 149, 186-187, 200-201, 214, 222, 230, 240-241, 254-255, 268, 280-281, 294-296, 309, 317, 325-326, 339\nmetamcp/llm/service.py                   96     78    19%   33-42, 46-64, 70-95, 112-124, 130-139, 143-161, 177-190, 197-208, 215-224, 229\nmetamcp/main.py                          92     52    43%   40-83, 136, 153-156, 170-171, 186-191, 201-227, 236-248\nmetamcp/mcp/server.py                   178    122    31%   58-64, 87-110, 120-135, 139-189, 195-204, 210-245, 254, 260, 266, 272, 278-310, 314-340, 345\nmetamcp/monitoring/__init__.py            2      0   100%\nmetamcp/monitoring/health.py             96     75    22%   22-23, 27-37, 41, 45-57, 61-75, 85-103, 111-119, 127-145, 158-160, 165, 176-179, 190-220\nmetamcp/monitoring/metrics.py            51     32    37%   23-35, 43-44, 48-58, 64-67, 73, 79-86, 90, 94, 98-100, 105, 116-119\nmetamcp/monitoring/telemetry.py         198     76    62%   28-62, 101, 105-109, 125-128, 133-134, 143-148, 158-160, 165-166, 178-183, 196-198, 203, 247-248, 260-263, 274-275, 279-289, 293-303, 348-349, 374-375, 390, 406-407\nmetamcp/proxy/__init__.py                 5      0   100%\nmetamcp/proxy/discovery.py              235    183    22%   38-45, 62-67, 81-82, 86-96, 108-135, 141-183, 189-204, 210-255, 259-270, 274-308, 312-339, 346-351, 362-381, 385-405, 414, 418, 432, 444-445, 450\nmetamcp/proxy/interceptor.py            129     80    38%   33-36, 50-51, 65-68, 72-86, 91-101, 110, 119, 128, 143-161, 169-179, 183-193, 199-203, 207, 217-226, 231, 239-240, 244, 252, 258, 268, 295, 307-308, 313\nmetamcp/proxy/manager.py                259    218    16%   44-46, 50-67, 73-96, 108-136, 140-166, 178-241, 253-267, 276-285, 297, 306, 318-339, 343-372, 376-402, 406-430, 434-451, 460-482, 486-500, 504-512, 516-523, 527-532, 537\nmetamcp/proxy/wrapper.py                221    171    23%   52-57, 61-93, 105-122, 126-136, 140-150, 154-160, 166-182, 188-200, 206-220, 226-243, 249-252, 268-287, 294-299, 306-309, 319-331, 337-355, 361-384, 388-404, 410-429, 434, 439, 443-444, 449\nmetamcp/security/auth.py                 99     71    28%   36-55, 59-74, 80, 84, 88, 101-109, 124, 137-144, 159-174, 189-205, 217-221, 234-235, 251-261, 284, 296-300, 308-313, 318\nmetamcp/security/policies.py            132    108    18%   35-48, 52-71, 78-95, 102, 116-128, 132-151, 157-178, 183-188, 203-214, 231, 244-261, 267-283, 292, 300-309, 314\nmetamcp/server.py                       140     90    36%   34-35, 39-66, 91-93, 110-112, 121-149, 155-182, 187-217, 229-256, 260-272, 277-283, 287-314, 324-325, 330-331\nmetamcp/services/__init__.py              4      0   100%\nmetamcp/services/auth_service.py        168     29    83%   98-99, 113-116, 140, 153-155, 190, 221, 225, 228, 234-236, 260, 286, 320, 358-360, 383, 396-399, 421, 436\nmetamcp/services/search_service.py      133     18    86%   158, 179-181, 231-233, 261, 271-273, 291-293, 318, 325-327, 388\nmetamcp/services/tool_service.py        139     23    83%   88-90, 288-290, 331-332, 373-380, 392-418\nmetamcp/tools/registry.py               190    166    13%   44-55, 59-81, 89-133, 148-184, 191-220, 232-246, 267-318, 324-355, 375-421, 430-524, 531-545, 550\nmetamcp/utils/__init__.py                 3      0   100%\nmetamcp/utils/api_versioning.py         160     96    40%   45, 47, 49, 103, 107-117, 121-126, 132, 136, 140-146, 151-154, 160-185, 189-200, 208-209, 214-240, 245-261, 267-275, 290-291, 297-323, 329-342, 351, 356, 361, 366\nmetamcp/utils/cache.py                  240    104    57%   84-86, 121-123, 133-137, 146-148, 170-171, 187, 199-203, 207-217, 221-235, 239-254, 258-265, 269-276, 280-286, 290-309, 356, 360, 364, 401-403, 407, 425-445, 454, 470-471\nmetamcp/utils/circuit_breaker.py        157     31    80%   105, 115-118, 167, 269-272, 276-279, 283-314, 383, 388\nmetamcp/utils/database.py                92     28    70%   33-34, 48-51, 76, 79-83, 88, 93, 97-98, 103, 108, 126-131, 156-157, 162-163, 170-172\nmetamcp/utils/error_handler.py          111     63    43%   60-73, 77-103, 109-139, 143-174, 178-217, 221, 233-244, 248, 254-256, 276-278, 283\nmetamcp/utils/helpers.py                117     99    15%   35-69, 88-142, 155-165, 180-186, 200-224, 237-240, 253-255, 270-293, 307, 321-329, 345-363\nmetamcp/utils/logging.py                 46     19    59%   50, 64, 76-93, 123, 145, 175, 207, 240, 264, 284, 311, 338\nmetamcp/utils/rate_limiter.py            96     58    40%   48, 63-83, 92-105, 125-128, 134-137, 142-156, 160-161, 171-172, 184-185, 189-237\nmetamcp/vector/client.py                107     69    36%   49, 60-66, 93-99, 110-116, 123-149, 166-193, 217-264, 276-288, 295-307, 312\n-------------------------------------------------------------------\nTOTAL                                  6302   3507    44%\nCoverage HTML written to dir test-results/coverage/html\nCoverage XML written to file test-results/coverage.xml\n=========================== short test summary info ============================\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_get_tool_success\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_list_tools\nERROR tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_list_tools_with_category_filter\nERROR tests/blackbox/rest_api/test_tools.py::TestToolExecution::test_execute_tool_success\nERROR tests/blackbox/rest_api/test_tools.py::TestToolExecution::test_execute_tool_invalid_arguments\nERROR tests/blackbox/rest_api/test_tools.py::TestToolSearch::test_search_tools\nERROR tests/blackbox/rest_api/test_tools.py::TestToolSearch::test_search_tools_with_filters\nERROR tests/blackbox/rest_api/test_tools.py::TestToolManagement::test_update_tool\nERROR tests/blackbox/rest_api/test_tools.py::TestToolManagement::test_delete_tool\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_complete_user_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_admin_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_error_handling_workflow\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_concurrent_operations\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_data_consistency\nERROR tests/integration/test_end_to_end.py::TestEndToEndWorkflows::test_performance_workflow\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_auth_tool_integration\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_search_tool_integration\nERROR tests/integration/test_end_to_end.py::TestCrossComponentIntegration::test_error_propagation\nERROR tests/integration/test_end_to_end.py::TestDataPersistence::test_data_persistence_workflow\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_authentication_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_registration_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_tool_search_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_cache_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_circuit_breaker_performance\nERROR tests/unit/performance/test_performance.py::TestPerformanceBenchmarks::test_rate_limiter_performance\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_user_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_tool_registration\nERROR tests/unit/performance/test_performance.py::TestLoadTesting::test_concurrent_search_operations\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_memory_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestStressTesting::test_cpu_usage_under_load\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_authentication_benchmark\nERROR tests/unit/performance/test_performance.py::TestPerformanceRegression::test_tool_operations_benchmark\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_memory_leak_detection\nERROR tests/unit/performance/test_performance.py::TestResourceMonitoring::test_cpu_efficiency\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_password_hashing_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_token_security\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_brute_force_protection\nERROR tests/unit/security/test_security.py::TestAuthenticationSecurity::test_account_lockout\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_permission_based_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_inactive_user_access\nERROR tests/unit/security/test_security.py::TestAuthorizationSecurity::test_resource_ownership\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_sql_injection_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_xss_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_path_traversal_protection\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_input_sanitization\nERROR tests/unit/security/test_security.py::TestInputValidationSecurity::test_parameter_validation\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_rate_limiting_protection\nERROR tests/unit/security/test_security.py::TestRateLimitingSecurity::test_ddos_protection\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_revocation\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_blacklisting\nERROR tests/unit/security/test_security.py::TestTokenSecurity::test_token_expiration\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_sensitive_data_encryption\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_data_isolation\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_cache_security\nERROR tests/unit/security/test_security.py::TestDataSecurity::test_audit_logging\nERROR tests/unit/test_cli.py::TestEnvironmentCommands::test_env_show\nERROR tests/unit/test_cli.py::TestEnvironmentCommands::test_env_diff\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_complete_tool_lifecycle\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_authentication_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestUserWorkflows::test_admin_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestErrorHandlingWorkflows::test_authentication_failure_workflow\nFAILED tests/blackbox/integration/test_workflows.py::TestErrorHandlingWorkflows::test_tool_workflow_with_errors\nFAILED tests/blackbox/integration/test_workflows.py::TestConcurrentWorkflows::test_concurrent_user_sessions\nFAILED tests/blackbox/integration/test_workflows.py::TestConcurrentWorkflows::test_concurrent_tool_operations\nFAILED tests/blackbox/integration/test_workflows.py::TestDataConsistencyWorkflows::test_tool_data_consistency\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_websocket_connection\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization_invalid_version\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPConnection::test_mcp_initialization_missing_params\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_list_tools\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_call_tool\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPTools::test_mcp_invalid_method\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_malformed_json\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_missing_jsonrpc\nFAILED tests/blackbox/mcp_api/test_protocol.py::TestMCPErrorHandling::test_mcp_concurrent_requests\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_concurrent_health_requests\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_tool_registration_performance\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_concurrent_tool_operations\nFAILED tests/blackbox/performance/test_load.py::TestPerformanceEndpoints::test_search_performance\nFAILED tests/blackbox/performance/test_load.py::TestLoadTesting::test_mixed_workload\nFAILED tests/blackbox/performance/test_load.py::TestStressTesting::test_large_payload_handling\nFAILED tests/blackbox/rest_api/test_admin.py::TestAdminEndpoints::test_get_admin_dashboard\nFAILED tests/blackbox/rest_api/test_admin.py::TestAdminEndpoints::test_get_admin_dashboard_unauthorized\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_me_endpoint\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_me_endpoint_unauthorized\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_permissions_endpoint\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthentication::test_refresh_token\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthorization::test_protected_endpoint_with_token\nFAILED tests/blackbox/rest_api/test_auth.py::TestAuthorization::test_protected_endpoint_without_token\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_register_workflow\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_list_workflows\nFAILED tests/blackbox/rest_api/test_composition.py::TestCompositionEndpoints::test_register_workflow_unauthorized\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_check\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_detailed_health\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_ready\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_live\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_components\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_uptime_increases\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_timestamp_format\nFAILED tests/blackbox/rest_api/test_health.py::TestHealthEndpoints::test_health_endpoints_accessible\nFAILED tests/blackbox/rest_api/test_oauth.py::TestOAuthEndpoints::test_get_oauth_config\nFAILED tests/blackbox/rest_api/test_oauth.py::TestOAuthEndpoints::test_oauth_callback_missing_params\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_register_proxy_server\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_list_proxy_servers\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_discover_proxy_servers\nFAILED tests/blackbox/rest_api/test_proxy.py::TestProxyEndpoints::test_get_discovered_proxy_servers\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_success\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_duplicate\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_missing_fields\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRegistration::test_register_tool_unauthorized\nFAILED tests/blackbox/rest_api/test_tools.py::TestToolRetrieval::test_get_tool_not_found\nFAILED tests/blackbox/security/test_security.py::TestAuthorizationSecurity::test_unauthorized_access_attempts\nFAILED tests/blackbox/security/test_security.py::TestAuthorizationSecurity::test_invalid_token_handling\nFAILED tests/blackbox/security/test_security.py::TestInputValidationSecurity::test_xss_injection_tool_registration\nFAILED tests/blackbox/security/test_security.py::TestInputValidationSecurity::test_path_traversal_attempts\nFAILED tests/blackbox/security/test_security.py::TestSecurityHeaders::test_security_headers_present\nFAILED tests/blackbox/security/test_security.py::TestSecurityHeaders::test_cors_headers\nFAILED tests/blackbox/security/test_security.py::TestDataValidationSecurity::test_oversized_payload_handling\nFAILED tests/blackbox/security/test_security.py::TestDataValidationSecurity::test_malformed_json_handling\nFAILED tests/integration/test_cli_integration.py::TestCLIIntegration::test_cli_initialization_integration\nFAILED tests/integration/test_cli_integration.py::TestCLIIntegration::test_environment_validation_integration\nFAILED tests/integration/test_cli_integration.py::TestCLIIntegration::test_env_show_integration\nFAILED tests/integration/test_cli_integration.py::TestCLIIntegration::test_env_diff_integration\nFAILED tests/integration/test_cli_integration.py::TestCLIIntegration::test_env_edit_integration\nFAILED tests/integration/test_cli_integration.py::TestCLIErrorHandling::test_cli_with_missing_files\nFAILED tests/unit/performance/test_cli_performance.py::TestCLIPerformance::test_file_operations_performance\nFAILED tests/unit/performance/test_cli_performance.py::TestCLIResourceUsage::test_disk_io_performance\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryManager::test_trace_operation\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryManager::test_shutdown\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryIntegration::test_telemetry_with_server\nFAILED tests/unit/telemetry/test_telemetry.py::TestTelemetryIntegration::test_telemetry_with_mcp_server\nFAILED tests/unit/test_cli.py::TestUpdateResetCommands::test_update_command\nFAILED tests/unit/test_cli_utils.py::TestDocsUtils::test_generate_api_docs - ...\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_initialize_with_url\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_health_check_success\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_get_pool_stats\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_execute_query\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_fetch_query - T...\nFAILED tests/unit/test_database.py::TestDatabaseManager::test_fetchval_query\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_database_health_success\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_vector_db_health_success\nFAILED tests/unit/test_health.py::TestComponentHealthChecks::test_check_llm_service_health_success\nFAILED tests/unit/test_health.py::TestHealthEndpoints::test_readiness_probe\nFAILED tests/unit/test_health.py::TestHealthComponentIntegration::test_all_components_healthy\nFAILED tests/unit/test_utils.py::TestCache::test_generate_key - AssertionErro...\nFAILED tests/unit/test_utils.py::TestCircuitBreakerDecorator::test_circuit_breaker_decorator\n89 failed, 280 passed, 33 warnings, 57 errors in 22.64s\n",
      "stderr": "/home/johannes/PycharmProjects/MetaMCP/.venv/lib/python3.13/site-packages/coverage/control.py:915: CoverageWarning: No data was collected. (no-data-collected)\n  self._warn(\"No data was collected.\", slug=\"no-data-collected\")\n",
      "execution_time": 25.91170382499695,
      "success": false
    },
    "linting": {
      "return_code": 1,
      "stdout": "metamcp/api/health.py:141:89: E501 line too long (90 > 88 characters)\nmetamcp/api/health.py:336:89: E501 line too long (104 > 88 characters)\nmetamcp/api/tools.py:603:89: E501 line too long (95 > 88 characters)\nmetamcp/api/tools.py:656:89: E501 line too long (98 > 88 characters)\nmetamcp/auth/oauth.py:130:89: E501 line too long (96 > 88 characters)\nmetamcp/auth/oauth.py:155:89: E501 line too long (96 > 88 characters)\nmetamcp/auth/oauth.py:180:89: E501 line too long (99 > 88 characters)\nmetamcp/client.py:51:89: E501 line too long (90 > 88 characters)\nmetamcp/composition/persistence.py:103:89: E501 line too long (105 > 88 characters)\nmetamcp/composition/persistence.py:108:89: E501 line too long (95 > 88 characters)\nmetamcp/composition/persistence.py:113:89: E501 line too long (117 > 88 characters)\nmetamcp/composition/persistence.py:163:89: E501 line too long (110 > 88 characters)\nmetamcp/llm/service.py:185:89: E501 line too long (90 > 88 characters)\nmetamcp/main.py:96:89: E501 line too long (91 > 88 characters)\nmetamcp/mcp/server.py:304:89: E501 line too long (91 > 88 characters)\nmetamcp/proxy/discovery.py:224:89: E501 line too long (93 > 88 characters)\nmetamcp/security/middleware.py:203:89: E501 line too long (129 > 88 characters)\nmetamcp/services/auth_service.py:325:89: E501 line too long (90 > 88 characters)\nmetamcp/services/search_service.py:206:89: E501 line too long (108 > 88 characters)\nmetamcp/services/search_service.py:311:89: E501 line too long (104 > 88 characters)\nmetamcp/services/tool_service.py:404:89: E501 line too long (90 > 88 characters)\nmetamcp/services/tool_service.py:408:89: E501 line too long (96 > 88 characters)\nmetamcp/tools/registry.py:110:89: E501 line too long (89 > 88 characters)\nmetamcp/tools/registry.py:510:89: E501 line too long (90 > 88 characters)\nmetamcp/tools/registry.py:514:89: E501 line too long (96 > 88 characters)\nmetamcp/utils/api_versioning.py:173:89: E501 line too long (118 > 88 characters)\nmetamcp/utils/api_versioning.py:182:89: E501 line too long (119 > 88 characters)\nmetamcp/utils/api_versioning.py:196:89: E501 line too long (96 > 88 characters)\nmetamcp/utils/circuit_breaker.py:140:89: E501 line too long (106 > 88 characters)\nmetamcp/utils/database.py:52:89: E501 line too long (125 > 88 characters)\nmetamcp/utils/helpers.py:108:89: E501 line too long (95 > 88 characters)\nmetamcp/utils/rate_limiter.py:5:89: E501 line too long (89 > 88 characters)\nmetamcp/vector/client.py:65:1: W293 blank line contains whitespace\nmetamcp/vector/client.py:82:1: W293 blank line contains whitespace\nmetamcp/vector/client.py:131:1: W293 blank line contains whitespace\n",
      "stderr": "",
      "execution_time": 0.20896649360656738,
      "success": false
    },
    "type_checking": {
      "return_code": 1,
      "stdout": "metamcp/utils/helpers.py:93: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:99: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:107: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:114: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:121: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:131: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:138: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/utils/helpers.py:258: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/helpers.py:270: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/utils/helpers.py:272: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/utils/helpers.py:289: error: Exception must be derived from BaseException  [misc]\nmetamcp/utils/helpers.py:363: error: Returning Any from function declared to return \"float\"  [no-any-return]\nmetamcp/utils/logging.py:54: error: Argument \"processors\" to \"configure\" has incompatible type \"list[object]\"; expected \"Iterable[Callable[[Any, str, MutableMapping[str, Any]], Mapping[str, Any] | str | bytes | bytearray | tuple[Any, ...]]] | None\"  [arg-type]\nmetamcp/utils/logging.py:106: error: Returning Any from function declared to return \"BoundLogger\"  [no-any-return]\nmetamcp/utils/logging.py:125: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:155: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:185: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:218: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:266: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:293: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/logging.py:320: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/error_handler.py:51: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/error_handler.py:51: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/error_handler.py:98: error: Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"bool | str | None\")  [assignment]\nmetamcp/utils/error_handler.py:101: error: Incompatible types in assignment (expression has type \"int\", target has type \"bool | str | None\")  [assignment]\nmetamcp/utils/error_handler.py:191: error: Unsupported target for indexed assignment (\"object\")  [index]\nmetamcp/utils/error_handler.py:192: error: \"object\" has no attribute \"get\"  [attr-defined]\nmetamcp/utils/error_handler.py:194: error: Unsupported target for indexed assignment (\"object\")  [index]\nmetamcp/utils/error_handler.py:195: error: \"object\" has no attribute \"get\"  [attr-defined]\nmetamcp/utils/error_handler.py:197: error: Unsupported target for indexed assignment (\"object\")  [index]\nmetamcp/utils/error_handler.py:198: error: \"object\" has no attribute \"get\"  [attr-defined]\nmetamcp/utils/error_handler.py:204: error: Item \"None\" of \"ErrorContext | None\" has no attribute \"timestamp\"  [union-attr]\nmetamcp/utils/error_handler.py:211: error: Item \"None\" of \"ErrorContext | None\" has no attribute \"timestamp\"  [union-attr]\nmetamcp/utils/error_handler.py:212: error: Item \"None\" of \"ErrorContext | None\" has no attribute \"correlation_id\"  [union-attr]\nmetamcp/utils/error_handler.py:219: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/error_handler.py:219: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/error_handler.py:227: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/error_handler.py:227: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/error_handler.py:248: error: Returning Any from function declared to return \"float\"  [no-any-return]\nmetamcp/utils/circuit_breaker.py:74: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:109: error: Returning Any from function declared to return \"T\"  [no-any-return]\nmetamcp/utils/circuit_breaker.py:111: error: Exception type must be derived from BaseException (or be a tuple of exception classes)  [misc]\nmetamcp/utils/circuit_breaker.py:120: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:120: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:130: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:130: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:143: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:143: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:150: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:150: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:157: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:157: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:196: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:196: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:218: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:218: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:267: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:267: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:274: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:274: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:281: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:281: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/circuit_breaker.py:364: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:379: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:382: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/circuit_breaker.py:383: error: Incompatible return value type (got \"Coroutine[Any, Any, T]\", expected \"T\")  [return-value]\nmetamcp/utils/circuit_breaker.py:383: note: Maybe you forgot to use \"await\"?\nmetamcp/utils/circuit_breaker.py:386: error: Incompatible return value type (got \"Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T]]\", expected \"Callable[..., T]\")  [return-value]\nmetamcp/utils/cache.py:184: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:205: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:212: error: \"None\" has no attribute \"ping\"  [attr-defined]\nmetamcp/utils/cache.py:261: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/utils/cache.py:282: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/utils/cache.py:325: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/cache.py:366: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/cache.py:407: error: Incompatible return value type (got \"Task[dict[str, Any]]\", expected \"dict[str, Any]\")  [return-value]\nmetamcp/utils/cache.py:407: note: Maybe you forgot to use \"await\"?\nmetamcp/utils/cache.py:410: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:422: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:423: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:447: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/utils/cache.py:475: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/search_service.py:26: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/search_service.py:26: note: Use \"-> None\" if function does not return a value\nmetamcp/services/search_service.py:163: error: Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]\nmetamcp/services/search_service.py:163: error: Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]\nmetamcp/services/search_service.py:169: error: Value of type \"object\" is not indexable  [index]\nmetamcp/services/search_service.py:170: error: Value of type \"object\" is not indexable  [index]\nmetamcp/services/search_service.py:171: error: Value of type \"object\" is not indexable  [index]\nmetamcp/services/search_service.py:172: error: \"object\" has no attribute \"get\"  [attr-defined]\nmetamcp/proxy/interceptor.py:29: error: Incompatible types in assignment (expression has type \"None\", variable has type \"datetime\")  [assignment]\nmetamcp/proxy/interceptor.py:30: error: Incompatible types in assignment (expression has type \"None\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/interceptor.py:32: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/interceptor.py:32: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/interceptor.py:34: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/interceptor.py:36: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/interceptor.py:47: error: Incompatible types in assignment (expression has type \"None\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/interceptor.py:49: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/interceptor.py:49: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/interceptor.py:51: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/interceptor.py:63: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/interceptor.py:63: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/api_versioning.py:42: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/api_versioning.py:42: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/api_versioning.py:55: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/api_versioning.py:55: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/api_versioning.py:65: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/api_versioning.py:65: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/api_versioning.py:94: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/api_versioning.py:211: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/api_versioning.py:211: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/api_versioning.py:253: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/utils/api_versioning.py:258: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/utils/api_versioning.py:264: error: Incompatible default for argument \"supported_versions\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nmetamcp/utils/api_versioning.py:264: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nmetamcp/utils/api_versioning.py:264: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nmetamcp/utils/api_versioning.py:315: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nmetamcp/client.py:66: error: Name \"websockets.WebSocketServerProtocol\" is not defined  [name-defined]\nmetamcp/client.py:113: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:113: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:141: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:141: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:150: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:150: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:158: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:158: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:165: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:165: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:171: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:174: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:174: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:182: error: Missing return statement  [return]\nmetamcp/client.py:212: error: Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]\nmetamcp/client.py:222: error: Missing return statement  [return]\nmetamcp/client.py:244: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:256: error: Missing return statement  [return]\nmetamcp/client.py:276: error: Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]\nmetamcp/client.py:281: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:292: error: Missing return statement  [return]\nmetamcp/client.py:312: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/client.py:323: error: Missing return statement  [return]\nmetamcp/client.py:342: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:352: error: Missing return statement  [return]\nmetamcp/client.py:398: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:398: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:402: error: Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]\nmetamcp/client.py:431: error: Unexpected keyword argument \"operation\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:431: error: Unexpected keyword argument \"reason\" for \"MCPProtocolError\"  [call-arg]\nmetamcp/client.py:435: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:454: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:476: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/client.py:521: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/client.py:526: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/services/tool_service.py:26: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/tool_service.py:26: note: Use \"-> None\" if function does not return a value\nmetamcp/services/tool_service.py:446: error: Need type annotation for \"categories\" (hint: \"categories: dict[<type>, <type>] = ...\")  [var-annotated]\nmetamcp/composition/executor.py:34: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/executor.py:34: note: Use \"-> None\" if function does not return a value\nmetamcp/composition/executor.py:93: error: Function does not return a value (it only ever returns None)  [func-returns-value]\nmetamcp/composition/executor.py:105: error: Missing named argument \"error\" for \"StepExecutionResult\"  [call-arg]\nmetamcp/composition/executor.py:120: error: Missing named argument \"result\" for \"StepExecutionResult\"  [call-arg]\nmetamcp/composition/executor.py:199: error: Need type annotation for \"tasks\" (hint: \"tasks: list[<type>] = ...\")  [var-annotated]\nmetamcp/composition/executor.py:287: error: Argument 2 to \"request\" of \"AsyncClient\" has incompatible type \"Any | None\"; expected \"URL | str\"  [arg-type]\nmetamcp/composition/executor.py:300: error: Argument 1 to \"_get_variable_value\" of \"WorkflowExecutor\" has incompatible type \"Any | None\"; expected \"str\"  [arg-type]\nmetamcp/composition/executor.py:309: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/executor.py:311: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/executor.py:313: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/executor.py:315: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/engine.py:39: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/engine.py:39: note: Use \"-> None\" if function does not return a value\nmetamcp/composition/engine.py:80: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:80: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:123: error: Missing named argument \"error\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/engine.py:130: error: Argument \"started_at\" to \"WorkflowExecutionResult\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]\nmetamcp/composition/engine.py:155: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:155: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:184: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:184: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:191: error: Need type annotation for \"executed_steps\" (hint: \"executed_steps: set[<type>] = ...\")  [var-annotated]\nmetamcp/composition/engine.py:252: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:252: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:282: error: Function does not return a value (it only ever returns None)  [func-returns-value]\nmetamcp/composition/engine.py:302: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:302: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:318: error: callable? not callable  [misc]\nmetamcp/composition/engine.py:344: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:344: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:354: error: Need type annotation for \"tasks\" (hint: \"tasks: list[<type>] = ...\")  [var-annotated]\nmetamcp/composition/engine.py:381: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/engine.py:381: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/engine.py:431: error: Argument 2 to \"request\" of \"AsyncClient\" has incompatible type \"Any | None\"; expected \"URL | str\"  [arg-type]\nmetamcp/composition/engine.py:444: error: Argument 1 to \"_get_variable_value\" of \"WorkflowEngine\" has incompatible type \"Any | None\"; expected \"str\"  [arg-type]\nmetamcp/composition/engine.py:451: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/engine.py:453: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/engine.py:455: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/composition/engine.py:457: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/config.py:199: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/config.py:207: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/config.py:215: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/config.py:363: error: \"FieldInfo\" has no attribute \"field_info\"  [attr-defined]\nmetamcp/config.py:364: error: \"FieldInfo\" has no attribute \"field_info\"  [attr-defined]\nmetamcp/utils/rate_limiter.py:46: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/rate_limiter.py:46: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/rate_limiter.py:54: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/rate_limiter.py:54: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/rate_limiter.py:158: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/rate_limiter.py:158: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/rate_limiter.py:187: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/rate_limiter.py:187: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/database.py:20: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/database.py:20: note: Use \"-> None\" if function does not return a value\nmetamcp/utils/database.py:73: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/utils/database.py:85: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/database.py:90: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/database.py:93: error: Returning Any from function declared to return \"list[Any]\"  [no-any-return]\nmetamcp/utils/database.py:95: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/database.py:100: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/utils/database.py:168: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/auth_service.py:26: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/auth_service.py:26: note: Use \"-> None\" if function does not return a value\nmetamcp/services/auth_service.py:35: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/services/auth_service.py:35: note: Use \"-> None\" if function does not return a value\nmetamcp/services/auth_service.py:151: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/services/auth_service.py:155: error: Unexpected keyword argument \"error_code\" for \"AuthenticationError\"  [call-arg]\nmetamcp/services/auth_service.py:192: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/services/auth_service.py:260: error: Unexpected keyword argument \"error_code\" for \"AuthenticationError\"  [call-arg]\nmetamcp/services/auth_service.py:360: error: Unexpected keyword argument \"error_code\" for \"ValidationError\"  [call-arg]\nmetamcp/services/auth_service.py:383: error: Unexpected keyword argument \"error_code\" for \"AuthenticationError\"  [call-arg]\nmetamcp/services/auth_service.py:421: error: Unexpected keyword argument \"error_code\" for \"AuthenticationError\"  [call-arg]\nmetamcp/services/auth_service.py:472: error: Need type annotation for \"roles\" (hint: \"roles: dict[<type>, <type>] = ...\")  [var-annotated]\nmetamcp/security/policies.py:63: error: Statement is unreachable  [unreachable]\nmetamcp/security/policies.py:71: error: Unexpected keyword argument \"error_code\" for \"PolicyViolationError\"  [call-arg]\nmetamcp/security/policies.py:79: error: Unexpected keyword argument \"error_code\" for \"PolicyViolationError\"  [call-arg]\nmetamcp/security/policies.py:87: error: Unexpected keyword argument \"error_code\" for \"PolicyViolationError\"  [call-arg]\nmetamcp/security/policies.py:95: error: Unexpected keyword argument \"error_code\" for \"PolicyViolationError\"  [call-arg]\nmetamcp/security/policies.py:147: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/security/policies.py:279: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/security/middleware.py:30: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:30: note: Use \"-> None\" if function does not return a value\nmetamcp/security/middleware.py:82: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:82: note: Use \"-> None\" if function does not return a value\nmetamcp/security/middleware.py:88: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:88: note: Use \"-> None\" if function does not return a value\nmetamcp/security/middleware.py:107: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:144: error: Value of type \"dict[str, Any] | None\" is not indexable  [index]\nmetamcp/security/middleware.py:152: error: Returning Any from function declared to return \"int | None\"  [no-any-return]\nmetamcp/security/middleware.py:152: error: Value of type \"dict[str, Any] | None\" is not indexable  [index]\nmetamcp/security/middleware.py:158: error: Incompatible default for argument \"allowed_ips\" (default has type \"None\", argument has type \"set[str]\")  [assignment]\nmetamcp/security/middleware.py:158: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nmetamcp/security/middleware.py:158: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nmetamcp/security/middleware.py:164: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:170: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:191: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:191: note: Use \"-> None\" if function does not return a value\nmetamcp/security/middleware.py:196: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:226: error: Argument 1 to \"IPWhitelistManager\" has incompatible type \"set[str] | None\"; expected \"set[str]\"  [arg-type]\nmetamcp/security/middleware.py:229: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/security/middleware.py:229: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/security/middleware.py:324: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/security/middleware.py:329: error: Incompatible default for argument \"details\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]\nmetamcp/security/middleware.py:329: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nmetamcp/security/middleware.py:329: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nmetamcp/security/auth.py:29: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/security/auth.py:80: error: Returning Any from function declared to return \"bool\"  [no-any-return]\nmetamcp/security/auth.py:84: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/security/auth.py:174: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/security/auth.py:221: error: Returning Any from function declared to return \"list[Any]\"  [no-any-return]\nmetamcp/monitoring/metrics.py:16: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/monitoring/metrics.py:41: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/metrics.py:41: note: Use \"-> None\" if function does not return a value\nmetamcp/llm/service.py:26: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/llm/service.py:131: error: Item \"None\" of \"Any | None\" has no attribute \"embeddings\"  [union-attr]\nmetamcp/llm/service.py:135: error: Returning Any from function declared to return \"list[float]\"  [no-any-return]\nmetamcp/llm/service.py:198: error: Item \"None\" of \"Any | None\" has no attribute \"chat\"  [union-attr]\nmetamcp/auth/oauth.py:80: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/auth/oauth.py:80: note: Use \"-> None\" if function does not return a value\nmetamcp/auth/oauth.py:113: error: \"Settings\" has no attribute \"google_oauth_client_secret\"  [attr-defined]\nmetamcp/auth/oauth.py:138: error: \"Settings\" has no attribute \"github_oauth_client_secret\"  [attr-defined]\nmetamcp/auth/oauth.py:163: error: \"Settings\" has no attribute \"microsoft_oauth_client_secret\"  [attr-defined]\nmetamcp/auth/oauth.py:299: error: Argument \"provider_user_id\" to \"OAuthUser\" has incompatible type \"Any | None\"; expected \"str\"  [arg-type]\nmetamcp/auth/oauth.py:401: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/auth/oauth.py:418: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nmetamcp/monitoring/health.py:20: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/health.py:20: note: Use \"-> None\" if function does not return a value\nmetamcp/monitoring/health.py:182: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/monitoring/health.py:196: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/health.py:202: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/health.py:208: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/health.py:214: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/persistence.py:23: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/persistence.py:23: note: Use \"-> None\" if function does not return a value\nmetamcp/composition/persistence.py:232: error: Function does not return a value (it only ever returns None)  [func-returns-value]\nmetamcp/composition/persistence.py:243: error: Right operand of \"and\" is never evaluated  [unreachable]\nmetamcp/composition/persistence.py:245: error: Statement is unreachable  [unreachable]\nmetamcp/composition/persistence.py:249: error: Incompatible return value type (got \"None\", expected \"bool\")  [return-value]\nmetamcp/composition/persistence.py:259: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:267: error: \"WorkflowExecutionResult\" has no attribute \"input_data\"  [attr-defined]\nmetamcp/composition/persistence.py:270: error: \"WorkflowExecutionResult\" has no attribute \"output_data\"  [attr-defined]\nmetamcp/composition/persistence.py:273: error: \"WorkflowExecutionResult\" has no attribute \"error_data\"  [attr-defined]\nmetamcp/composition/persistence.py:282: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:294: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:301: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:311: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:322: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:325: error: \"WorkflowExecutionResult\" has no attribute \"id\"  [attr-defined]\nmetamcp/composition/persistence.py:372: error: Function does not return a value (it only ever returns None)  [func-returns-value]\nmetamcp/composition/persistence.py:383: error: Function does not return a value (it only ever returns None)  [func-returns-value]\nmetamcp/composition/persistence.py:393: error: Right operand of \"and\" is never evaluated  [unreachable]\nmetamcp/composition/persistence.py:394: error: Statement is unreachable  [unreachable]\nmetamcp/api/tools.py:43: error: Incompatible types in assignment (expression has type \"dict[str, Any] | None\", base class \"BaseModel\" defined the type as \"Callable[[bool, str], dict[str, Any]]\")  [assignment]\nmetamcp/api/tools.py:60: error: Incompatible types in assignment (expression has type \"dict[str, Any] | None\", base class \"BaseModel\" defined the type as \"Callable[[bool, str], dict[str, Any]]\")  [assignment]\nmetamcp/api/tools.py:96: error: Incompatible types in assignment (expression has type \"dict[str, Any] | None\", base class \"BaseModel\" defined the type as \"Callable[[bool, str], dict[str, Any]]\")  [assignment]\nmetamcp/api/tools.py:188: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:188: note: Use \"-> None\" if function does not return a value\nmetamcp/api/tools.py:205: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:205: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:283: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:283: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:362: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:362: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:426: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:426: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:509: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:509: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:562: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:562: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/tools.py:627: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/tools.py:627: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/api/auth.py:111: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/api/auth.py:139: error: Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]\nmetamcp/api/auth.py:188: error: Incompatible types in assignment (expression has type \"Any | None\", variable has type \"str\")  [assignment]\nmetamcp/api/auth.py:197: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/api/auth.py:208: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/auth.py:208: note: Use \"-> None\" if function does not return a value\nmetamcp/api/auth.py:220: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/auth.py:264: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/auth.py:290: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/auth.py:332: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/auth.py:384: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/admin/interface.py:66: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/admin/interface.py:66: note: Use \"-> None\" if function does not return a value\nmetamcp/admin/interface.py:276: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/admin/interface.py:276: note: Use \"-> None\" if function does not return a value\nmetamcp/monitoring/telemetry.py:33: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:37: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:40: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:43: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:46: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:50: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:53: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:57: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:61: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:80: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:80: note: Use \"-> None\" if function does not return a value\nmetamcp/monitoring/telemetry.py:183: error: Argument 1 to \"append\" of \"list\" has incompatible type \"PeriodicExportingMetricReader\"; expected \"PrometheusMetricReader\"  [arg-type]\nmetamcp/monitoring/telemetry.py:250: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/monitoring/telemetry.py:378: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/orchestrator.py:32: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/composition/orchestrator.py:32: note: Use \"-> None\" if function does not return a value\nmetamcp/composition/orchestrator.py:76: error: Function \"builtins.callable\" is not valid as a type  [valid-type]\nmetamcp/composition/orchestrator.py:76: note: Perhaps you meant \"typing.Callable\" instead of \"callable\"?\nmetamcp/composition/orchestrator.py:125: error: Missing named argument \"result\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:125: error: Missing named argument \"execution_time\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:131: error: Argument \"started_at\" to \"WorkflowExecutionResult\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]\nmetamcp/composition/orchestrator.py:156: error: Missing named argument \"result\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:156: error: Missing named argument \"execution_time\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:162: error: Argument \"started_at\" to \"WorkflowExecutionResult\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]\nmetamcp/composition/orchestrator.py:255: error: Missing named argument \"result\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:255: error: Missing named argument \"execution_time\" for \"WorkflowExecutionResult\"  [call-arg]\nmetamcp/composition/orchestrator.py:261: error: Argument \"started_at\" to \"WorkflowExecutionResult\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]\nmetamcp/composition/orchestrator.py:318: error: \"WorkflowPersistence\" has no attribute \"_initialized\"; maybe \"initialize\"?  [attr-defined]\nmetamcp/composition/orchestrator.py:325: error: \"WorkflowOrchestrator\" has no attribute \"_workflows\"; maybe \"list_workflows\" or \"get_workflow\"?  [attr-defined]\nmetamcp/composition/orchestrator.py:344: error: \"WorkflowPersistence\" has no attribute \"_initialized\"; maybe \"initialize\"?  [attr-defined]\nmetamcp/api/oauth.py:63: error: Dict entry 1 has incompatible type \"str\": \"int\"; expected \"str\": \"list[str]\"  [dict-item]\nmetamcp/api/oauth.py:87: error: Dict entry 2 has incompatible type \"str\": \"bool\"; expected \"str\": \"str\"  [dict-item]\nmetamcp/api/oauth.py:110: error: Missing named argument \"user\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:110: error: Missing named argument \"access_token\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:115: error: Missing named argument \"user\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:115: error: Missing named argument \"access_token\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:125: error: Module \"metamcp.security.auth\" has no attribute \"get_auth_manager\"  [attr-defined]\nmetamcp/api/oauth.py:140: error: Missing named argument \"error\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:146: error: Missing named argument \"user\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:146: error: Missing named argument \"access_token\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:149: error: Missing named argument \"user\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/oauth.py:149: error: Missing named argument \"access_token\" for \"OAuthCallbackResponse\"  [call-arg]\nmetamcp/api/admin.py:25: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/admin.py:36: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/admin.py:47: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/admin.py:58: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/admin.py:69: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/admin.py:75: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/vector/client.py:67: error: Argument \"http_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/vector/client.py:70: error: Argument \"grpc_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/vector/client.py:84: error: Argument \"http_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/vector/client.py:87: error: Argument \"grpc_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/vector/client.py:112: error: Item \"None\" of \"WeaviateClient | None\" has no attribute \"get_meta\"  [union-attr]\nmetamcp/vector/client.py:126: error: Item \"None\" of \"WeaviateClient | None\" has no attribute \"collections\"  [union-attr]\nmetamcp/vector/client.py:132: error: Item \"None\" of \"WeaviateClient | None\" has no attribute \"collections\"  [union-attr]\nmetamcp/vector/client.py:185: error: Unexpected keyword argument \"data_object\" for \"insert\" of \"_DataCollection\"  [call-arg]\nmetamcp/vector/client.py:241: error: \"Object[Mapping[str, WeaviateField], None]\" has no attribute \"score\"  [attr-defined]\nmetamcp/vector/client.py:245: error: \"Object[Mapping[str, WeaviateField], None]\" has no attribute \"score\"  [attr-defined]\nmetamcp/api/health.py:201: error: Argument \"http_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/api/health.py:204: error: Argument \"grpc_host\" to \"connect_to_custom\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]\nmetamcp/api/health.py:334: error: Incompatible types in assignment (expression has type \"Anthropic\", variable has type \"OpenAI\")  [assignment]\nmetamcp/api/health.py:383: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/health.py:383: note: Use \"-> None\" if function does not return a value\nmetamcp/api/health.py:395: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/health.py:424: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/health.py:467: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/health.py:497: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/api/health.py:522: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/tools/registry.py:180: error: Returning Any from function declared to return \"str\"  [no-any-return]\nmetamcp/tools/registry.py:376: error: Unexpected keyword argument \"message\" for \"ToolNotFoundError\"  [call-arg]\nmetamcp/proxy/wrapper.py:37: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nmetamcp/proxy/wrapper.py:39: error: Incompatible types in assignment (expression has type \"None\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/wrapper.py:50: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/wrapper.py:50: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/wrapper.py:83: error: \"FastMCP[Any]\" has no attribute \"list_tools\"; maybe \"_list_tools\" or \"_mcp_list_tools\"?  [attr-defined]\nmetamcp/proxy/wrapper.py:84: error: \"FastMCP[Any]\" has no attribute \"call_tool\"; maybe \"_call_tool\" or \"_mcp_call_tool\"?  [attr-defined]\nmetamcp/proxy/wrapper.py:85: error: \"FastMCP[Any]\" has no attribute \"list_resources\"; maybe \"_list_resources\" or \"get_resources\"?  [attr-defined]\nmetamcp/proxy/wrapper.py:86: error: \"FastMCP[Any]\" has no attribute \"read_resource\"; maybe \"_read_resource\", \"add_resource\", or \"get_resource\"?  [attr-defined]\nmetamcp/proxy/wrapper.py:174: error: Item \"None\" of \"FastMCP[Any] | None\" has no attribute \"tool\"  [union-attr]\nmetamcp/proxy/wrapper.py:174: error: No overload variant of \"tool\" of \"FastMCP\" matches argument types \"Any\", \"Any\", \"Any\"  [call-overload]\nmetamcp/proxy/wrapper.py:174: note: Possible overload variants:\nmetamcp/proxy/wrapper.py:174: note:     def tool(self, name_or_fn: Callable[..., Any], *, name: str | None = ..., title: str | None = ..., description: str | None = ..., tags: set[str] | None = ..., output_schema: dict[str, Any] | EllipsisType | None = ..., annotations: ToolAnnotations | dict[str, Any] | None = ..., exclude_args: list[str] | None = ..., enabled: bool | None = ...) -> FunctionTool\nmetamcp/proxy/wrapper.py:174: note:     def tool(self, name_or_fn: str | None = ..., *, name: str | None = ..., title: str | None = ..., description: str | None = ..., tags: set[str] | None = ..., output_schema: dict[str, Any] | EllipsisType | None = ..., annotations: ToolAnnotations | dict[str, Any] | None = ..., exclude_args: list[str] | None = ..., enabled: bool | None = ...) -> Callable[[Callable[..., Any]], FunctionTool]\nmetamcp/proxy/wrapper.py:220: error: Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]\nmetamcp/proxy/wrapper.py:243: error: Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]\nmetamcp/proxy/wrapper.py:263: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/wrapper.py:295: error: \"PolicyEngine\" has no attribute \"validate_tool_access\"  [attr-defined]\nmetamcp/proxy/wrapper.py:299: error: \"TelemetryManager\" has no attribute \"record_tool_call_start\"  [attr-defined]\nmetamcp/proxy/wrapper.py:307: error: \"TelemetryManager\" has no attribute \"record_tool_call_end\"  [attr-defined]\nmetamcp/mcp/server.py:36: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/mcp/server.py:36: note: Use \"-> None\" if function does not return a value\nmetamcp/mcp/server.py:124: error: \"FastMCP[Any]\" has no attribute \"list_tools\"; maybe \"_list_tools\" or \"_mcp_list_tools\"?  [attr-defined]\nmetamcp/mcp/server.py:125: error: \"FastMCP[Any]\" has no attribute \"call_tool\"; maybe \"_call_tool\" or \"_mcp_call_tool\"?  [attr-defined]\nmetamcp/mcp/server.py:126: error: \"FastMCP[Any]\" has no attribute \"list_resources\"; maybe \"_list_resources\" or \"get_resources\"?  [attr-defined]\nmetamcp/mcp/server.py:127: error: \"FastMCP[Any]\" has no attribute \"read_resource\"; maybe \"_read_resource\", \"add_resource\", or \"get_resource\"?  [attr-defined]\nmetamcp/mcp/server.py:128: error: \"FastMCP[Any]\" has no attribute \"list_prompts\"; maybe \"_list_prompts\" or \"get_prompts\"?  [attr-defined]\nmetamcp/mcp/server.py:129: error: \"FastMCP[Any]\" has no attribute \"show_prompt\"  [attr-defined]\nmetamcp/mcp/server.py:142: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/mcp/server.py:150: error: Item \"FastMCP[Any]\" of \"FastMCP[Any] | None\" has no attribute \"handle_websocket\"  [union-attr]\nmetamcp/mcp/server.py:150: error: Item \"None\" of \"FastMCP[Any] | None\" has no attribute \"handle_websocket\"  [union-attr]\nmetamcp/mcp/server.py:159: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/mcp/server.py:170: error: Argument \"details\" to \"MetaMCPException\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]\nmetamcp/mcp/server.py:174: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/mcp/server.py:185: error: Argument \"details\" to \"MetaMCPException\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]\nmetamcp/mcp/server.py:190: error: \"BaseRoute\" has no attribute \"path\"  [attr-defined]\nmetamcp/mcp/server.py:199: error: Missing positional argument \"user_id\" in call to \"list_tools\" of \"ToolRegistry\"  [call-arg]\nmetamcp/mcp/server.py:200: error: Incompatible return value type (got \"list[dict[str, Any]]\", expected \"list[Tool]\")  [return-value]\nmetamcp/mcp/server.py:220: error: Unexpected keyword argument \"input_data\" for \"execute_tool\" of \"ToolRegistry\"  [call-arg]\nmetamcp/tools/registry.py:357: note: \"execute_tool\" of \"ToolRegistry\" defined here\nmetamcp/mcp/server.py:286: error: Missing positional argument \"user_id\" in call to \"search_tools\" of \"ToolRegistry\"  [call-arg]\nmetamcp/server.py:33: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/server.py:37: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:37: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nmetamcp/server.py:77: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:77: note: Use \"-> None\" if function does not return a value\nmetamcp/server.py:122: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:170: error: Argument 1 to \"add_middleware\" of \"Starlette\" has incompatible type \"type[RateLimitMiddleware]\"; expected \"_MiddlewareFactory[[RateLimiter]]\"  [arg-type]\nmetamcp/server.py:170: note: Following member(s) of \"RateLimitMiddleware\" have conflicts:\nmetamcp/server.py:170: note:     Expected:\nmetamcp/server.py:170: note:         def __call__(self, Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]], /, rate_limiter: RateLimiter) -> Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]\nmetamcp/server.py:170: note:     Got:\nmetamcp/server.py:170: note:         def __init__(rate_limiter: RateLimiter) -> RateLimitMiddleware\nmetamcp/server.py:170: note: \"_MiddlewareFactory[[RateLimiter]].__call__\" has type \"Callable[[Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]], Arg(RateLimiter, 'rate_limiter')], Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]]\"\nmetamcp/server.py:188: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:209: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:230: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:239: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:244: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:277: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/server.py:296: error: Argument \"app\" to \"Config\" has incompatible type \"FastAPI | None\"; expected \"type[ASGI2Protocol] | Callable[[HTTPScope | WebSocketScope | LifespanScope, Callable[[], Awaitable[HTTPRequestEvent | HTTPDisconnectEvent | WebSocketConnectEvent | _WebSocketReceiveEventBytes | _WebSocketReceiveEventText | WebSocketDisconnectEvent | LifespanStartupEvent | LifespanShutdownEvent]], Callable[[HTTPResponseStartEvent | HTTPResponseBodyEvent | HTTPResponseTrailersEvent | HTTPServerPushEvent | HTTPDisconnectEvent | <9 more items>], Awaitable[None]]], Awaitable[None]] | Callable[..., Any] | str\"  [arg-type]\nmetamcp/server.py:325: error: Incompatible return value type (got \"FastAPI | None\", expected \"FastAPI\")  [return-value]\nmetamcp/server.py:328: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/server.py:328: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/manager.py:42: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/manager.py:42: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/manager.py:204: error: Returning Any from function declared to return \"int\"  [no-any-return]\nmetamcp/proxy/manager.py:211: error: Subclass of \"dict[Any, Any]\" and \"list[Any]\" cannot exist: would have incompatible method signatures  [unreachable]\nmetamcp/proxy/manager.py:212: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/manager.py:215: error: Returning Any from function declared to return \"int\"  [no-any-return]\nmetamcp/proxy/manager.py:356: error: Incompatible types in assignment (expression has type \"WrappedServerConfig\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/manager.py:364: error: Argument 1 to \"register_server\" of \"ProxyManager\" has incompatible type \"dict[str, Any]\"; expected \"WrappedServerConfig\"  [arg-type]\nmetamcp/proxy/manager.py:376: error: Need type annotation for \"discovered\" (hint: \"discovered: list[<type>] = ...\")  [var-annotated]\nmetamcp/proxy/manager.py:386: error: Incompatible types in assignment (expression has type \"WrappedServerConfig\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/manager.py:394: error: Argument 1 to \"register_server\" of \"ProxyManager\" has incompatible type \"dict[str, Any]\"; expected \"WrappedServerConfig\"  [arg-type]\nmetamcp/proxy/manager.py:421: error: Incompatible types in assignment (expression has type \"WrappedServerConfig\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/manager.py:422: error: Argument 1 to \"register_server\" of \"ProxyManager\" has incompatible type \"dict[str, Any]\"; expected \"WrappedServerConfig\"  [arg-type]\nmetamcp/proxy/discovery.py:30: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[int]\")  [assignment]\nmetamcp/proxy/discovery.py:31: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nmetamcp/proxy/discovery.py:32: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nmetamcp/proxy/discovery.py:33: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nmetamcp/proxy/discovery.py:37: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/discovery.py:37: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/discovery.py:39: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:41: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:43: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:45: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:56: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nmetamcp/proxy/discovery.py:58: error: Incompatible types in assignment (expression has type \"None\", variable has type \"datetime\")  [assignment]\nmetamcp/proxy/discovery.py:59: error: Incompatible types in assignment (expression has type \"None\", variable has type \"dict[str, Any]\")  [assignment]\nmetamcp/proxy/discovery.py:61: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/discovery.py:61: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/discovery.py:63: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:65: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:67: error: Statement is unreachable  [unreachable]\nmetamcp/proxy/discovery.py:79: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/proxy/discovery.py:79: note: Use \"-> None\" if function does not return a value\nmetamcp/proxy/discovery.py:171: error: Argument 2 to \"limited_test\" has incompatible type \"Coroutine[Any, Any, bool]\"; expected \"Task[Any]\"  [arg-type]\nmetamcp/proxy/discovery.py:210: error: Need type annotation for \"discovered\" (hint: \"discovered: list[<type>] = ...\")  [var-annotated]\nmetamcp/api/proxy.py:433: error: Item \"None\" of \"ServerDiscovery | None\" has no attribute \"convert_to_wrapped_config\"  [union-attr]\nmetamcp/api/proxy.py:450: error: Function is missing a type annotation  [no-untyped-def]\nmetamcp/main.py:151: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/main.py:168: error: Function is missing a return type annotation  [no-untyped-def]\nmetamcp/main.py:186: error: Function is missing a type annotation  [no-untyped-def]\nFound 438 errors in 41 files (checked 52 source files)\n",
      "stderr": "",
      "execution_time": 2.610413074493408,
      "success": false
    },
    "security_scanning": {
      "return_code": 1,
      "stdout": "Working... \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100% 0:00:00\n",
      "stderr": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[json]\tINFO\tJSON output written to file: test-results/security-scan.json\n",
      "execution_time": 0.5667836666107178,
      "success": false
    }
  },
  "recommendations": [
    "Fix failing test suites: unit_tests, integration_tests, performance_tests, security_tests, blackbox_tests, coverage_analysis, linting, type_checking, security_scanning"
  ]
}