apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metamcp-ingress
  namespace: metamcp
  labels:
    app: metamcp
    component: ingress
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/common-name: "metamcp.example.com"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
    
    # CORS configuration
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://metamcp.example.com, https://admin.metamcp.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Proxy configuration
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Session affinity
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "metamcp-session"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
spec:
  tls:
  - hosts:
    - metamcp.example.com
    - admin.metamcp.example.com
    secretName: metamcp-tls
  rules:
  # API endpoints
  - host: metamcp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metamcp-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: metamcp-service
            port:
              number: 80
      - path: /docs
        pathType: Exact
        backend:
          service:
            name: metamcp-service
            port:
              number: 80
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: metamcp-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: metamcp-service
            port:
              number: 9090
  # Admin interface
  - host: admin.metamcp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metamcp-admin-service
            port:
              number: 80
---
# Internal ingress for service-to-service communication
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metamcp-internal-ingress
  namespace: metamcp
  labels:
    app: metamcp
    component: internal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: metamcp-internal.metamcp.svc.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metamcp-service
            port:
              number: 80